{"version":3,"sources":["producto.js"],"names":["gridOptions","asignarEventos","$","hide","aplicarMascaraCantidad","document","addEventListener","e","key","resetForm","getElementById","async","event","preventDefault","show","focus","data","obtenerCategorias","filter","cat","nombre","mostrarListaSearch","configurarBotones","click","mostrarContenedorAltas","validateInputs","val","crearProd","actualizarProd","inicializarPagina","categoria","categoriasMap","forEach","categoria_id","columnDefs","headerName","field","width","valueFormatter","params","idCat","cellStyle","textAlign","Number","value","toFixed","replace","headerClass","cellClass","cellRenderer","editButton","createElement","className","title","producto_id","descripcion","precio","text","nombreCat","addClass","actionContainer","classList","appendChild","iniciarTabla","obtenerProductos","empty","cerrarVentana","removeClass","respuesta","fetch","method","json","convert","verificarArray","gridApi","setGridOption","error","console","SwalToast","length","SwalLoad","sinComa","datos","FormData","append","body","exito","setTimeout","swal","close","errorSMS","alertas"],"mappings":"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","file":"producto.js","sourcesContent":["let gridOptions;\r\n// Utilizando el Principio de Modularidad\r\n$(function () {\r\n    asignarEventos();\r\n    inicializarPagina();\r\n    configurarBotones();\r\n});\r\nfunction asignarEventos() {\r\n    $(\".contenedor-altas\").hide();\r\n    $('.categSearch').hide();\r\n\r\n    aplicarMascaraCantidad('precio');\r\n\r\n    // Esc Cerrar\r\n    document.addEventListener(\"keydown\", e => {\r\n        if (e.key === 'Escape') {\r\n            // Limpiar Ruta\r\n            resetForm();\r\n        }\r\n    });\r\n\r\n    // Lista Categorias\r\n    document.getElementById(\"categoria_id\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        $('.categSearch').show();\r\n        $('.inCategSrch').focus()\r\n        let data = await obtenerCategorias();\r\n        data = data.filter(cat =>\r\n            cat.nombre !== \"Ruta\" &&\r\n            cat.nombre !== \"Pernocta\" &&\r\n            cat.nombre !== \"Aterrizaje\" &&\r\n            cat.nombre !== \"Tua\"\r\n        );\r\n        const listSearch = await mostrarListaSearch(data, '.categSearch', 'categoria_id', 'nombre');\r\n\r\n    });\r\n\r\n}\r\nfunction configurarBotones() {\r\n    $(\"#crear-prod\").click(mostrarContenedorAltas);\r\n\r\n    $(\".btn-cancelar\").click(e => {\r\n        resetForm();\r\n    });\r\n\r\n    $(\"#btnGuardar\").click(e => {\r\n        let validar = validateInputs($('#formAltas'));\r\n        if (validar) $('#producto_id').val() == '' ? crearProd() : actualizarProd();\r\n    });\r\n\r\n}\r\n\r\n// Ag-Grid \r\nasync function inicializarPagina() {\r\n\r\n    let categoria = await obtenerCategorias();\r\n    let categoriasMap = {};\r\n    categoria.forEach(cat => {\r\n        categoriasMap[cat.categoria_id] = cat.nombre;\r\n    });\r\n\r\n    let columnDefs = [\r\n        {\r\n            headerName: 'id',\r\n            field: 'producto_id',\r\n            width: 80\r\n        },\r\n        {\r\n            headerName: 'Nombre',\r\n            field: 'nombre',\r\n            width: 180\r\n        },\r\n        {\r\n            headerName: 'Descripción',\r\n            field: 'descripcion',\r\n            width: 200\r\n        },\r\n        {\r\n            headerName: 'Categoría',\r\n            field: 'categoria_id',\r\n            width: 120,\r\n            valueFormatter: function (params) {\r\n                let idCat = params.data.categoria_id;\r\n                return categoriasMap[idCat] || '';\r\n            },\r\n        },\r\n        {\r\n            headerName: 'Precio',\r\n            field: 'precio',\r\n            width: 140,\r\n            cellStyle: { textAlign: 'right' }, // Alinea los datos a la derecha\r\n            valueFormatter: function (params) {\r\n                // Formatea el número con comas como separadores de miles y dos decimales\r\n                return Number(params.value).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n            }\r\n        },\r\n        {\r\n            headerName: 'Acción',\r\n            width: 148,\r\n            headerClass: 'txt-center',\r\n            cellClass: 'custom-action-cell', // Agregar la clase CSS 'custom-action-cell' a todas las celdas en esta columna\r\n            filter: false,\r\n            cellRenderer: function (params) {\r\n                const editButton = document.createElement('I');\r\n                editButton.className = \"fa-regular fa-pen-to-square btn btn-editar\";\r\n                editButton.title = 'Editar';\r\n\r\n                // Datos a Editar\r\n                editButton.addEventListener('click', async function () {\r\n                    await mostrarContenedorAltas();\r\n\r\n                    $('#producto_id').val(params.data.producto_id);\r\n                    $('#nombre').val(params.data.nombre);\r\n                    $('#descripcion').val(params.data.descripcion);\r\n                    $('#precio').val(params.data.precio);\r\n                    $('#categoria_id option').val(params.data.categoria_id);\r\n                    $('#categoria_id option').text(params.data.nombreCat);\r\n\r\n                    $(\"#categoria_id\").addClass('event-none input-disabled');\r\n\r\n                });\r\n\r\n                const actionContainer = document.createElement('div');\r\n                actionContainer.classList = \"btn-cont centrado\";\r\n                actionContainer.appendChild(editButton);\r\n\r\n                return actionContainer;\r\n            }\r\n        }\r\n\r\n    ];\r\n\r\n    let data = '';\r\n    await iniciarTabla(data, columnDefs, '#myGrid');\r\n    obtenerProductos();\r\n}\r\n\r\n\r\n// Funciones\r\nasync function mostrarContenedorAltas() {\r\n    $(\".contenedor-altas\").show();\r\n}\r\nfunction resetForm() {\r\n    $('#contenedor-docs').empty();\r\n    cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n    $(\"#categoria_id\").removeClass('event-none input-disabled');\r\n}\r\n\r\n// Fetch \r\nasync function obtenerProductos() {\r\n    try {\r\n        const respuesta = await fetch('obtener/productos', {\r\n            method: 'GET',\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        let convert = verificarArray(data);\r\n        gridApi.setGridOption('rowData', convert);\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalToast('warning', 'Error al obtener los datos', 2500);\r\n    }\r\n}\r\nasync function obtenerCategorias() {\r\n    try {\r\n        const respuesta = await fetch('../obtener/categorias', {\r\n            method: 'GET'\r\n        });\r\n        const data = await respuesta.json();\r\n        if (!data.length > 0) {\r\n            SwalToast('warning', 'No hay Categorias disponibles.', 2500);\r\n        }\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\nasync function crearProd() {\r\n\r\n    try {\r\n\r\n        const nombre = $('#nombre').val();\r\n        const categoria_id = $('#categoria_id').val();\r\n        const descripcion = $('#descripcion').val();\r\n        const precio = sinComa($('#precio').val());\r\n\r\n        const datos = new FormData();\r\n        datos.append('nombre', nombre);\r\n        datos.append('categoria_id', categoria_id);\r\n        datos.append('descripcion', descripcion);\r\n        datos.append('precio', precio);\r\n\r\n        const respuesta = await fetch('crear/producto', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n\r\n        if (data.exito == 1) {\r\n            SwalLoad('success', 'Éxito', 'Registro Creado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                resetForm();\r\n                obtenerProductos();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n\r\n\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}\r\nasync function actualizarProd() {\r\n\r\n    try {\r\n\r\n        const producto_id = $('#producto_id').val();\r\n        const nombre = $('#nombre').val();\r\n        const categoria_id = $('#categoria_id').val();\r\n        const descripcion = $('#descripcion').val();\r\n        const precio = sinComa($('#precio').val());\r\n\r\n        const datos = new FormData();\r\n        datos.append('producto_id', producto_id);\r\n        datos.append('nombre', nombre);\r\n        datos.append('categoria_id', categoria_id);\r\n        datos.append('descripcion', descripcion);\r\n        datos.append('precio', precio);\r\n\r\n        const respuesta = await fetch('actualizar/producto', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n\r\n        if (data.exito == 1) {\r\n            SwalLoad('success', 'Éxito', 'Registro Actualizado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                resetForm();\r\n                obtenerProductos();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n\r\n\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n        }\r\n\r\n\r\n\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}"]}