{"version":3,"sources":["roles.js"],"names":["gridOptions","asignarEventos","document","addEventListener","e","key","cerrarVentana","configurarBotones","$","hide","click","mostrarContenedorAltas","limpiarForm","validateInputs","val","crearRol","actualizarRol","inicializarPagina","iniciarTabla","headerName","field","width","cellRenderer","params","editButton","createElement","className","title","async","data","rol_id","nombre_rol","descripcion","estatus","actionContainer","classList","appendChild","headerClass","cellClass","filter","traerRoles","onQuickFilterChanged","newValue","getElementById","value","gridApi","updateGridOptions","quickFilterText","respuesta","fetch","method","json","convert","verificarArray","setGridOption","error","console","SwalToast","show","generarCrearUser","tipoAccion","Swal","fire","html","showDenyButton","confirmButtonText","denyButtonText","customClass","allowOutsideClick","preConfirm","nombreRol","alertasDiv","querySelector","innerHTML","errores","push","length","forEach","alerta","didOpen","then","result","log","isConfirmed","datos","FormData","append","body","exito","SwalLoad","setTimeout","swal","close","alertas","fecha_creacion","errorSMS"],"mappings":"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","file":"roles.js","sourcesContent":["let gridOptions;\r\n\r\n// Utilizando el Principio de Modularidad\r\n$(function () {\r\n    asignarEventos();\r\n    inicializarPagina();\r\n    configurarBotones();\r\n});\r\n\r\nfunction asignarEventos() {\r\n    document.addEventListener(\"keydown\", e => {\r\n        if (e.key === 'Escape') {\r\n            cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n        }\r\n    });\r\n}\r\n\r\nfunction configurarBotones() {\r\n    // Evento Crear Usuarios\r\n    $(\".contenedor-altas\").hide();\r\n    $(\"#crear-rol\").click(mostrarContenedorAltas);\r\n\r\n    $(\"#btnCancel\").click(e => {\r\n        limpiarForm(\"#formAltas\");\r\n        $(\".contenedor-altas\").hide();\r\n    });\r\n    $(\"#btnGuardar\").click(e => {\r\n        let validar = validateInputs($('#formAltas'));\r\n        if (validar) $('#rol_id').val() == '' ? crearRol() : actualizarRol();\r\n    });\r\n}\r\n\r\nfunction inicializarPagina() {\r\n    let columnDefs = [\r\n        {\r\n            headerName: 'id',\r\n            field: 'rol_id',\r\n            width: 60\r\n        },\r\n        {\r\n            headerName: 'Nombre Rol',\r\n            field: 'nombre_rol',\r\n            width: 200\r\n        },\r\n        {\r\n            headerName: 'Descripción',\r\n            field: 'descripcion',\r\n            width: 200\r\n        },\r\n        {\r\n            headerName: 'Estatus',\r\n            field: 'estatus',\r\n            width: 100\r\n        },\r\n        {\r\n            headerName: 'Fecha Creacion',\r\n            field: 'fecha_creacion',\r\n            width: 180\r\n        },\r\n        {\r\n            headerName: 'Acción',\r\n            cellRenderer: function (params) {\r\n                const editButton = document.createElement('I');\r\n                editButton.className = \"fa-regular fa-pen-to-square btn btn-editar\";\r\n                editButton.title = 'Editar';\r\n\r\n                editButton.addEventListener('click', async function () {\r\n                    await mostrarContenedorAltas();\r\n\r\n                    $('#rol_id').val(params.data.rol_id);\r\n                    $('#nombre_rol').val(params.data.nombre_rol);\r\n                    $('#descripcion').val(params.data.descripcion);\r\n                    $('#estatus').val(params.data.estatus);\r\n                });\r\n\r\n                // Crea un contenedor para los botones y los agrega\r\n                const actionContainer = document.createElement('div');\r\n                actionContainer.classList = \"btn-cont centrado\";\r\n                actionContainer.appendChild(editButton);\r\n\r\n                return actionContainer;\r\n            },\r\n            width: 150,\r\n            headerClass: 'txt-center',\r\n            cellClass: 'custom-action-cell', // Agregar la clase CSS 'custom-action-cell' a todas las celdas en esta columna\r\n            filter: false\r\n        },\r\n    ];\r\n\r\n    let data = '';\r\n    iniciarTabla(data, columnDefs, '#myGrid');\r\n    traerRoles();\r\n}\r\n\r\n/*  FUNCIONES  */\r\nfunction onQuickFilterChanged() {\r\n    var newValue = document.getElementById('quickFilter').value;\r\n    gridApi.updateGridOptions({ quickFilterText: newValue });\r\n}\r\n\r\nasync function traerRoles() {\r\n\r\n    try {\r\n        const respuesta = await fetch('allRoles', {\r\n            method: 'GET',\r\n        });\r\n        const data = await respuesta.json();\r\n\r\n        let convert = verificarArray (data);\r\n        gridApi.setGridOption('rowData', convert);\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalToast('warning', 'Error al obtener los usuarios', 2500);\r\n    }\r\n}\r\n\r\nasync function mostrarContenedorAltas() {\r\n    $(\".contenedor-altas\").show();\r\n}\r\n\r\nasync function generarCrearUser(tipoAccion, params) {\r\n\r\n    Swal.fire({\r\n        title: tipoAccion + ' Rol',\r\n        html: `\r\n            <div class=\"user-contenedor\">\r\n                <div class=\"alertas\"></div>\r\n                <div class=\"form-dsg\">\r\n\r\n                    <div class=\"form-group\">\r\n                        <input type=\"text\" id=\"nombre_rol\" placeholder=\"\">\r\n                        <label for=\"nombre_rol\">Nombre Rol:</label>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <input type=\"text\" id=\"descripcion\" placeholder=\"\">\r\n                        <label for=\"descripcion\">Descripción:</label>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <select name=\"estatus\" id=\"estatus\" >\r\n                            <option value=\"Activo\">Activo</option>\r\n                            <option value=\"Inactivo\">Inactivo</option>\r\n                            \r\n                        </select>\r\n                        <label for=\"estatus\">Estatus:</label>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            `,\r\n        showDenyButton: true,\r\n        confirmButtonText: 'Guardar',\r\n        denyButtonText: `Cancelar`,\r\n        customClass: \"swalTitle crear-usuario\",\r\n        allowOutsideClick: false,\r\n        preConfirm: () => {\r\n            const nombreRol = $('#nombre_rol').val();\r\n            const descripcion = $('#descripcion').val();\r\n            const alertasDiv = document.querySelector('.alertas');\r\n\r\n            alertasDiv.innerHTML = ''; // Limpiar alertas previas\r\n            let errores = [];\r\n\r\n            if (!nombreRol) {\r\n                errores.push('Nombre Requerido');\r\n            }\r\n            if (!descripcion) {\r\n                errores.push('Descripción Requerida');\r\n            }\r\n\r\n            if (errores.length > 0) {\r\n                errores.forEach(alerta => {\r\n                    alertasDiv.innerHTML += `<div class=\"alerta alerta_error\" role=\"alert\">${alerta}</div>`;\r\n                });\r\n                return false; // Evita que la ventana se cierre\r\n            }\r\n            return { nombreRol, descripcion };\r\n\r\n        },\r\n        didOpen: async () => {\r\n            // ACTUALIZAR\r\n            if (tipoAccion == 'Actualizar') {\r\n                $('#nombre_rol').val(params.nombre_rol);\r\n                $('#descripcion').val(params.descripcion);\r\n                $('#estatus').val(params.estatus);\r\n            }\r\n        }\r\n    }).then(async (result) => {\r\n        console.log(result);\r\n        if (tipoAccion == 'Crear') {\r\n            if (result.isConfirmed) {\r\n\r\n                const nombre_rol = $('#nombre_rol').val();\r\n                const descripcion = $('#descripcion').val();\r\n                const estatus = $('#estatus').val();\r\n\r\n                const datos = new FormData();\r\n                datos.append('nombre_rol', nombre_rol);\r\n                datos.append('descripcion', descripcion);\r\n                datos.append('estatus', estatus);\r\n\r\n                try {\r\n                    const respuesta = await fetch('crear/rol', {\r\n                        method: 'POST',\r\n                        body: datos\r\n                    });\r\n\r\n                    const data = await respuesta.json();\r\n\r\n                    if (data.exito == 1) {\r\n                        // Registro Creado Exitosamente\r\n                        SwalLoad('success', 'Éxito', 'Rol Creado Correctamente', false);\r\n                        setTimeout(() => {\r\n                            swal.close();\r\n                            traerRoles();\r\n                        }, 1500);\r\n                    }\r\n                    if (data.alertas) {\r\n                        SwalToast('warning', data.alertas.error, 2500);\r\n                    }\r\n\r\n                } catch (error) {\r\n                    console.error(error);\r\n                    SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n                }\r\n            }\r\n        } else if (tipoAccion == 'Actualizar') {\r\n            if (result.isConfirmed) {\r\n\r\n                const nombre_rol = $('#nombre_rol').val();\r\n                const descripcion = $('#descripcion').val();\r\n                const estatus = $('#estatus').val();\r\n\r\n                const datos = new FormData();\r\n                datos.append('rol_id', params.rol_id);\r\n                datos.append('nombre_rol', nombre_rol);\r\n                datos.append('descripcion', descripcion);\r\n                datos.append('estatus', estatus);\r\n                datos.append('fecha_creacion', params.fecha_creacion);\r\n\r\n                try {\r\n\r\n                    const respuesta = await fetch('actualizar/rol', {\r\n                        method: 'POST',\r\n                        body: datos\r\n                    });\r\n                    const data = await respuesta.json();\r\n\r\n                    if (data.exito == 1) {\r\n                        // Registro Creado Exitosamente\r\n                        SwalLoad('success', 'Éxito', 'Rol Actualizado Correctamente', false);\r\n                        setTimeout(() => {\r\n                            swal.close();\r\n                            traerRoles();\r\n                        }, 1500);\r\n                    }\r\n\r\n                    if (data.alertas) {\r\n                        SwalToast('warning', data.alertas.error, 2500);\r\n                    }\r\n\r\n                } catch (error) {\r\n                    console.error(error);\r\n                    SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n                }\r\n\r\n            }\r\n        } else {\r\n            SwalToast('warning', 'Error, tipo de acción no definida.', 2500);\r\n        }\r\n\r\n    });\r\n}\r\n\r\nasync function crearRol() {\r\n\r\n    const nombre_rol = $('#nombre_rol').val();\r\n    const descripcion = $('#descripcion').val();\r\n    const estatus = $('#estatus').val();\r\n\r\n    try {\r\n        const datos = new FormData();\r\n        datos.append('nombre_rol', nombre_rol);\r\n        datos.append('descripcion', descripcion);\r\n        datos.append('estatus', estatus);\r\n\r\n        const respuesta = await fetch('crear/rol', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n\r\n        if (data.exito == 1) {\r\n            // Registro Creado Exitosamente\r\n            SwalLoad('success', 'Éxito', 'Rol Creado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n                traerRoles();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n            cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n\r\n\r\n}\r\n\r\nasync function actualizarRol() {\r\n\r\n    const rol_id = $('#rol_id').val();\r\n    const nombre_rol = $('#nombre_rol').val();\r\n    const descripcion = $('#descripcion').val();\r\n    const estatus = $('#estatus').val();\r\n\r\n    try {\r\n\r\n        const datos = new FormData();\r\n        datos.append('rol_id', rol_id);\r\n        datos.append('nombre_rol', nombre_rol);\r\n        datos.append('descripcion', descripcion);\r\n        datos.append('estatus', estatus);\r\n\r\n        const respuesta = await fetch('actualizar/rol', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n        const data = await respuesta.json();\r\n\r\n        if (data.exito == 1) {\r\n            // Registro Creado Exitosamente\r\n            SwalLoad('success', 'Éxito', 'Rol Actualizado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n                traerRoles();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n\r\n}"]}