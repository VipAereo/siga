{"version":3,"sources":["funciones.js"],"names":["gridApi","tablas","SwalToast","icon","title","timer","Swal","fire","toast","position","showConfirmButton","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","SwalLoad","text","confirm","allowOutsideClick","allowEscapeKey","iniciarTabla","data","columnDefs","idTable","length","emptyRowsNeeded","emptyRows","Array","from","gridOptions","defaultColDef","resizable","filter","cellDataType","rowSelection","rowData","pagination","onGridReady","params","api","event","rowIndex","rowCount","getDisplayedRowCount","lastRowNode","getDisplayedRowAtIndex","lastRowData","Object","values","every","val","newRowData","applyTransaction","add","overlayLoadingTemplate","localeText","filterOoo","equals","notEqual","blank","notBlank","contains","notContains","startsWith","endsWith","dateFormatOoo","before","after","inRange","andCondition","orCondition","applyFilter","resetFilter","clearFilter","cancelFilter","totalRows","totalAndFilteredRows","more","to","of","page","pageLastRowUnknown","nextPage","lastPage","firstPage","previousPage","pageSizeSelectorLabel","footerTotal","gridDiv","document","querySelector","agGrid","createGrid","filtrarTabla","value","setGridOption","limpiarForm","idform","$","reset","removeClass","resetearTabla","buscador","destroy","keys","async","cerrarVentana","idVentana","hide","forEach","formulario","trigger","find","each","firstOption","this","resetLista","id","empty","validateInputs","form","isValid","hasClass","inputField","parent","addClass","closest","focus","getDataFromGrid","allData","forEachNode","node","push","seleccionTxt","idCampos","on","select","sinComa","valor","replace","conComa","verificarArray","isArray","aplicarMascaraCantidad","inputSelector","inputmask","alias","prefix","suffix","allowMinus","thousandsSeparator","decimalSeparator","digits","max","aplicarMascaraKm","autoUnmask","greedy","groupSeparator","placeholder","rightAlign","createDataTable","datos","columns","width","height","Promise","resolve","reject","container","createElement","className","titleContainer","style","titleH3","innerHTML","tabla","encabezado","encabezadoFila","key","th","textContent","appendChild","cuerpo","filaData","fila","dato","celda","divTabla","getElementById","DataTable","fixedColumns","paging","scrollCollapse","scrollY","language","search","info","infoEmpty","zeroRecords","infoFiltered","lengthMenu","datosFila","children","map","get","table","cellWithFocus","row","cells","querySelectorAll","cellValues","cell","trim","console","log","error","mostrarListaSearch","listaSearch","valorOpt","textOpt","listaPadre","inputSearch","selectPadre","currentIndex","actualizarSeleccion","listaSearchOptions","eq","filtrarDatos","inputText","toLowerCase","filteredNames","item","includes","slice","option","remove","valNuevo","[object Object]","unshift","append","preventDefault","limpiarLista","type","totalOptions","selectedOption","clone","selectedValue","objetoSeleccionado","objeto","parseInt","mostrarListaSearchs","mostrarListaGrid","cellElement","contLista","contScroll","contFiltro","zIndex","backgroundColor","setAttribute","searchIcon","classList","filtroList","inputDiv","updatePopupPosition","contenedorScroll","cellRect","getBoundingClientRect","contenedorRect","popupTop","top","scrollTop","clientHeight","left","show","listUL","nombre","closePopup","e","target","removeEventListener","filteredDatos","keydown","setFechaActual","elemento","fechaActual","Date","fechaFormateada","getDate","toString","padStart","getMonth","getFullYear","obtenerFechaActual","dia","mes","formatearFecha","fecha","match","year","month","day","split","parsedDate","isNaN","getTime","formatearFechaYear","test","obtenerDia","partes","a√±o","formatearFechaCompleta","fechaCompleta","convertirAFecha","fechaStr","calcularDiferenciaDias","fecha1","fecha2","fechaInicio","formatearHoraFloat","toFixed","formatoHora","hora","horas","minutos","hrsNum","parseFloat","minNum","horaFormateada","limpiarRuta","selectId","deshabilitarElemento","elementoId","habilitarElemento"],"mappings":"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","file":"funciones.js","sourcesContent":["let gridApi;\r\n// Define una variable global para almacenar las instancias de las tablas\r\nconst tablas = {};\r\n\r\nfunction SwalToast(icon, title, timer) {\r\n    Swal.fire({\r\n        icon: icon,\r\n        title: title,\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: timer,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n            toast.addEventListener('mouseenter', Swal.stopTimer)\r\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n        }\r\n    })\r\n}\r\nfunction SwalLoad(icon, title, text, confirm) {\r\n    Swal.fire({\r\n        icon: icon,\r\n        title: title,\r\n        text: text,\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false,\r\n        showConfirmButton: confirm\r\n    });\r\n}\r\n\r\n// Tabla AG-Grid\r\nfunction iniciarTabla(data, columnDefs, idTable) {\r\n\r\n\r\n    const AG_GRID_LOCALE_ES = {\r\n        // Number Filter & Text Filter\r\n        filterOoo: 'Filtro...',\r\n        equals: 'Igual',\r\n        notEqual: 'No igual',\r\n        blank: 'En blanco',\r\n        notBlank: 'No en blanco',\r\n\r\n        // Text Filter\r\n        contains: 'Contiene',\r\n        notContains: 'No contiene',\r\n        startsWith: 'Empieza con',\r\n        endsWith: 'Termina con',\r\n\r\n        // Date Filter\r\n        dateFormatOoo: 'yyyy-mm-dd',\r\n        before: 'Antes',\r\n        after: 'Despu√©s',\r\n        inRange: 'Entre',\r\n\r\n        // Filter Conditions\r\n        andCondition: 'AND',\r\n        orCondition: 'OR',\r\n\r\n        // Filter Buttons\r\n        applyFilter: 'Apply',\r\n        resetFilter: 'Reset',\r\n        clearFilter: 'Clear',\r\n        cancelFilter: 'Cancel',\r\n\r\n        // Menu\r\n        totalRows: 'Total Rows',\r\n        totalAndFilteredRows: 'Rows',\r\n        more: 'More',\r\n        to: 'a',\r\n        of: 'de ',\r\n        page: 'P√°gina',\r\n        pageLastRowUnknown: '?',\r\n        nextPage: 'Next Page',\r\n        lastPage: 'Last Page',\r\n        firstPage: 'First Page',\r\n        previousPage: 'Previous Page',\r\n        pageSizeSelectorLabel: 'Tama√±o de P√°ginas:',\r\n        footerTotal: 'Total',\r\n    }\r\n\r\n    const minRows = 6; // N√∫mero m√≠nimo de filas que se deben mostrar\r\n    // Si data est√° vac√≠o, llenar con 8 filas vac√≠as\r\n    // if (!data || data.length === 0) {\r\n    //     data = Array.from({ length: 8 }, () => ({})); // Crea un array de 8 elementos vac√≠os\r\n    // }\r\n    if (!data || data.length < minRows) {\r\n        const emptyRowsNeeded = minRows - (data ? data.length : 0);\r\n        const emptyRows = Array.from({ length: emptyRowsNeeded }, () => ({}));\r\n        data = data ? [...data, ...emptyRows] : emptyRows;\r\n    }\r\n\r\n    gridOptions = {\r\n        defaultColDef: {\r\n            resizable: true,\r\n            filter: 'agTextColumnFilter',\r\n            cellDataType: false,\r\n        },\r\n        rowSelection: 'multiple', // Permite la selecci√≥n de m√∫ltiples filas\r\n        columnDefs: columnDefs,\r\n        rowData: data,\r\n        pagination: true,\r\n        onGridReady: function (params) {\r\n            // Registra el evento cellClicked\r\n            params.api.addEventListener('cellClicked', function (event) {\r\n                const api = params.api;\r\n                const rowIndex = event.rowIndex;\r\n                const rowCount = api.getDisplayedRowCount(); // Obtiene el n√∫mero de filas visibles\r\n\r\n                if (rowIndex === rowCount - 1) {\r\n\r\n                    const lastRowNode = api.getDisplayedRowAtIndex(rowCount - 1); // Obtiene la √∫ltima fila visible\r\n                    const lastRowData = lastRowNode && lastRowNode.data;\r\n\r\n                    // Verifica si la √∫ltima fila est√° vac√≠a\r\n                    if (lastRowData && Object.values(lastRowData).every(val => val === null || val === '')) {\r\n                        // Agrega una nueva fila\r\n                        const newRowData = {}; // Aqu√≠ puedes definir los valores por defecto de la nueva fila\r\n                        api.applyTransaction({ add: [newRowData] }); // Agrega la nueva fila a la grilla\r\n                    }\r\n                }\r\n            });\r\n\r\n        },\r\n        overlayLoadingTemplate: '<div aria-live=\"polite\" aria-atomic=\"true\" style=\"position:absolute;top:0;left:0;right:0; bottom:0; background: url(\thttps://ag-grid.com/images/ag-grid-loading-spinner.svg) center no-repeat\" aria-label=\"loading\"></div>',\r\n        localeText: AG_GRID_LOCALE_ES,\r\n    };\r\n\r\n    let gridDiv = document.querySelector(idTable);\r\n    gridApi = agGrid.createGrid(gridDiv, gridOptions);\r\n    tablas[idTable] = gridApi;\r\n}\r\n\r\nfunction filtrarTabla(idTable, value) {\r\n    const gridApi = tablas[idTable];\r\n    if (gridApi) {\r\n        gridApi.setGridOption('quickFilterText', value);\r\n    }\r\n}\r\n// Formularios Altas\r\nfunction limpiarForm(idform) {\r\n\r\n    if ($(idform)[0]) {\r\n        $(idform)[0].reset();\r\n        // eliminar clases de error si es que hay\r\n        $(`${idform} .campoRequerido, ${idform} .errorInput`).removeClass('campoRequerido errorInput');\r\n    }\r\n}\r\nfunction resetearTabla(idTable, buscador) {\r\n    if (tablas[idTable]) {\r\n        // Destruir la tabla (si es necesario)\r\n        tablas[idTable].destroy();\r\n        $(buscador).val('');\r\n\r\n        // Eliminar la entrada de la tabla cerrada\r\n        delete tablas[idTable];\r\n\r\n        // Obtener el primer grid en tablas (si existe)\r\n        const keys = Object.keys(tablas);\r\n        if (keys.length > 0) {\r\n            gridApi = tablas[keys[0]]; // Asignar la referencia del primer grid\r\n        } else {\r\n            gridApi = null; // No hay m√°s tablas, asignar a null\r\n        }\r\n    }\r\n}\r\nasync function cerrarVentana(idVentana, idform) {\r\n    $(idVentana).hide();\r\n    // Restablecer cada formulario\r\n    idform.forEach(function (formulario) {\r\n        $(formulario).trigger(\"reset\");\r\n        // $(`${idform}`).find('.errorInput, .campoRequerido').removeClass('errorInput campoRequerido');\r\n        $(formulario).find('.errorInput, .campoRequerido').removeClass('errorInput campoRequerido');\r\n\r\n        // Restablecer el valor y el texto del primer option de cada select\r\n        $(formulario).find('select').each(function () {\r\n            // Obtener el primer option\r\n            var firstOption = $(this).find('option:first');\r\n\r\n            // Restablecer su valor y texto a una cadena vac√≠a\r\n            firstOption.val('');\r\n            firstOption.text('');\r\n        });\r\n    });\r\n}\r\n// id del div padre a dejar Vacio \r\nfunction resetLista(id) {\r\n    $(id).empty();\r\n}\r\nfunction validateInputs(form) {\r\n    let isValid = true;\r\n\r\n    // Itera sobre todos los inputs dentro del formulario\r\n    form.find('label').each(function () {\r\n        // Verifica si el input tiene la clase 'importante'\r\n        if ($(this).hasClass('labelImportant')) {\r\n            const inputField = $(this).parent().find('input, select');\r\n\r\n            // Si el input es vacio agrega una clase\r\n            if (inputField.val() === '') {\r\n                inputField.addClass('campoRequerido');\r\n                $(this).closest('.form-group').addClass('errorInput');\r\n                $(this).focus();\r\n                isValid = false;\r\n            } else {\r\n                inputField.removeClass('campoRequerido');\r\n                $(this).closest('.form-group').removeClass('errorInput');\r\n            }\r\n        }\r\n    });\r\n\r\n    return isValid;\r\n}\r\n// Trae la informacion de la tabla Actulmente Activa\r\nfunction getDataFromGrid() {\r\n    let allData = [];\r\n    gridApi.forEachNode(node => allData.push(node.data));\r\n    return allData;\r\n}\r\n// toma como parametro el id del campo para seleccionar todo el valor\r\nfunction seleccionTxt(...idCampos) {\r\n    idCampos.forEach(id => {\r\n        $(document).on('focus', `#${id}`, function () {\r\n            $(`#${id}`).select();\r\n        });\r\n    });\r\n}\r\nfunction sinComa(valor) {\r\n    return valor.replace(/,/g, '');\r\n}\r\nfunction conComa(valor) {\r\n    return valor.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\nfunction verificarArray(data) {\r\n    return Array.isArray(data) ? data : [data];\r\n}\r\nfunction aplicarMascaraCantidad(...inputSelector) {\r\n    inputSelector.forEach(id => {\r\n        $(`#${id}`).inputmask({\r\n            alias: 'currency', // Puedes elegir entre diferentes alias (currency, decimal, integer, etc.)\r\n            prefix: '', // Prefijo opcional\r\n            suffix: '', // Sufijo opcional\r\n            allowMinus: false, // Permitir n√∫meros negativos (true/false)\r\n            thousandsSeparator: ',', // Separador de miles\r\n            decimalSeparator: '.', // Separador decimal\r\n            digits: 2,\r\n            max: 99999999.99 // L 8\r\n        });\r\n    });\r\n}\r\nfunction aplicarMascaraKm(...inputSelector) {\r\n    inputSelector.forEach(id => {\r\n        $(`#${id}`).inputmask({\r\n            alias: 'numeric', // Usamos el alias 'numeric' para aceptar solo n√∫meros\r\n            prefix: '', // Prefijo opcional\r\n            suffix: ' Km', // Sufijo con \"Km\"\r\n            allowMinus: false, // No permitimos n√∫meros negativos\r\n            autoUnmask: true, // Desenmascaramos autom√°ticamente al obtener el valor\r\n            greedy: false, // No permitimos caracteres adicionales\r\n            groupSeparator: ',', // Separador de miles\r\n            placeholder: '0', // Valor de relleno\r\n            rightAlign: false // Alineaci√≥n a la izquierda\r\n        });\r\n    });\r\n}\r\n// ListKey\r\nasync function createDataTable(datos, columns, width, height, title) {\r\n\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            // let listaPadre = '#padre';\r\n\r\n            // let listaSearchOptions = document.querySelectorAll(`${listaPadre} option`);\r\n            // listaSearchOptions.forEach(function (option) {\r\n            //     option.textContent = '';\r\n            //     option.value = '';\r\n            // });\r\n\r\n            // Crear contenedor\r\n            let container = document.createElement(\"div\");\r\n            container.className = 'contenedorKey';\r\n\r\n            // Crear Titulo TablaKey\r\n            let titleContainer = document.createElement(\"div\");\r\n            titleContainer.className = 'flex-titulo';\r\n            titleContainer.style.width = `${width}px`;\r\n\r\n            let titleH3 = document.createElement('H3');\r\n            titleH3.innerHTML = title;\r\n\r\n            let icon = document.createElement('I');\r\n            icon.className = 'fa-solid fa-xmark cerrar-tablakey';\r\n\r\n            // Crear tabla\r\n            var tabla = document.createElement('table');\r\n            tabla.id = 'tableKey';\r\n            // tabla.className = \"stripe row-border order-column nowrap\";\r\n            tabla.className = \"display\";\r\n            tabla.style.width = \"100%\";\r\n\r\n            // Crear encabezado\r\n            var encabezado = document.createElement('thead');\r\n            var encabezadoFila = document.createElement('tr');\r\n\r\n            // Obtener las claves de la primera fila para crear las columnas\r\n            var keys = Object.keys(datos[0]);\r\n\r\n            // Crear las columnas del encabezado\r\n            // keys.forEach(function (key) {\r\n            columns.forEach(function (key) {\r\n                var th = document.createElement('th');\r\n                th.textContent = key;\r\n                encabezadoFila.appendChild(th);\r\n            });\r\n\r\n            encabezado.appendChild(encabezadoFila);\r\n            tabla.appendChild(encabezado);\r\n\r\n            // Crear cuerpo de la tabla\r\n            var cuerpo = document.createElement('tbody');\r\n\r\n            // Iterar sobre los datos para crear las filas\r\n            datos.forEach(function (filaData) {\r\n                var fila = document.createElement('tr');\r\n\r\n                // Iterar sobre las propiedades de cada objeto para crear las celdas\r\n                // keys.forEach(function (key) {\r\n                columns.forEach(function (key) {\r\n                    var dato = filaData[key];\r\n                    var celda = document.createElement('td');\r\n                    celda.textContent = dato;\r\n                    fila.appendChild(celda);\r\n                });\r\n\r\n                cuerpo.appendChild(fila);\r\n            });\r\n\r\n            tabla.appendChild(cuerpo);\r\n\r\n            var divTabla = document.getElementById('listKey');\r\n            container.appendChild(titleContainer);\r\n            titleContainer.appendChild(titleH3);\r\n            titleContainer.appendChild(icon);\r\n            container.appendChild(tabla);\r\n            divTabla.appendChild(container);\r\n\r\n            $('#tableKey').DataTable({\r\n                fixedColumns: true,\r\n                keys: true,\r\n                paging: true,\r\n                scrollCollapse: true,\r\n                scrollY: `${height}px`, // Puedes ajustar esta altura seg√∫n tus necesidades\r\n                language: {\r\n                    \"search\": \"Buscar:\",\r\n                    \"info\": \"Mostrando _END_ de _TOTAL_ Registros\",\r\n                    \"infoEmpty\": 'No Hay Registros',\r\n                    \"zeroRecords\": 'No Se Encontraron Registros',\r\n                    \"infoFiltered\": '(Filtrado de _MAX_ Registros Totales)',\r\n                    \"lengthMenu\": \"_MENU_ Entradas por p√°gina\",\r\n                }\r\n            });\r\n\r\n            var tableKeyWrapper = document.getElementById(\"tableKey_wrapper\");\r\n            tableKeyWrapper.style.width = `${width}px`;\r\n\r\n            $('.cerrar-tablakey').on('click', function () {\r\n                resetLista('#listKey');\r\n            });\r\n\r\n            // devuelve fila\r\n            $('#tableKey').on('dblclick', 'tbody td', function () {\r\n                // $(document).on('dblclick', '#tableKey tbody td', function () {\r\n                // Obtener la fila a la que pertenece la celda\r\n                var fila = $(this).closest('tr');\r\n\r\n                // Obtener los datos de la fila\r\n                var datosFila = fila.children('td').map(function () {\r\n                    return $(this).text();\r\n                }).get();\r\n\r\n                // console.log(datosFila);\r\n\r\n                // Cerrar la tabla\r\n                resetLista('#listKey');\r\n\r\n                resolve(datosFila);\r\n            });\r\n\r\n            // devuelve fila\r\n            document.addEventListener('keydown', function (event) {\r\n\r\n                if (event.key === 'Enter') {\r\n                    const table = document.querySelector('#tableKey');\r\n                    // Verifica si el evento proviene de la tabla #tableKey\r\n                    if (table) {\r\n\r\n                        // Encuentra la fila que contiene el elemento de destino del evento\r\n                        const cellWithFocus = table.querySelector('td.focus');\r\n                        if (cellWithFocus) {\r\n                            // Encuentra la fila que contiene la celda con la clase 'focus'\r\n                            const row = cellWithFocus.closest('tr');\r\n                            if (row) {\r\n\r\n                                // Se encontr√≥ la fila, ahora podemos trabajar con ella\r\n                                // Obt√©n todas las celdas de la fila\r\n                                const cells = row.querySelectorAll('td');\r\n\r\n                                // Crea un array para almacenar los valores de las celdas\r\n                                const cellValues = [];\r\n\r\n                                // Itera sobre las celdas y obt√©n los valores de texto de cada una\r\n                                cells.forEach(function (cell) {\r\n                                    cellValues.push(cell.textContent.trim());\r\n                                });\r\n\r\n                                console.log(cellValues);\r\n                                resetLista('#listKey');\r\n\r\n                                // Muestra los valores de las celdas en la consola o haz lo que necesites con ellos\r\n                                // console.log('Valores de la fila:', cellValues);\r\n\r\n                                resolve(cellValues);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error('Error al obtener y mostrar los datos:', error);\r\n            reject('error');\r\n        }\r\n    });\r\n}\r\nasync function mostrarListaSearch(datos, listaSearch, valorOpt, textOpt, add) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n\r\n            // if (datos.length < 1) reject('No hay data');\r\n\r\n            let listaPadre = $(listaSearch);\r\n            let inputSearch = listaPadre.find('input');\r\n            let selectPadre = listaPadre.parent().find('select');\r\n            let currentIndex = -1; // Variable para almacenar el √≠ndice de la opci√≥n actualmente seleccionada\r\n\r\n            if (!inputSearch.length === 0 || !selectPadre.length === 0) {\r\n                reject('No se encontro HTML');\r\n            }\r\n\r\n            filtrarDatos();\r\n\r\n            $(inputSearch).on('input blur', function (event) {\r\n                if (event.type === \"input\") {\r\n                    filtrarDatos();\r\n                } else if (event.type === \"blur\") {\r\n                    limpiarLista();\r\n                }\r\n            });\r\n\r\n            $(inputSearch).on('keydown', function (event) {\r\n\r\n                const listaSearchOptions = listaPadre.find('option');\r\n                // let listaSearchOptions = document.querySelectorAll(`${listaSearch} option`);\r\n\r\n                const totalOptions = listaSearchOptions.length;\r\n\r\n                if (event.key === 'ArrowDown') {\r\n                    event.preventDefault();\r\n                    currentIndex = (currentIndex + 1) % totalOptions;\r\n                    actualizarSeleccion();\r\n                } else if (event.key === 'ArrowUp') {\r\n                    event.preventDefault();\r\n                    currentIndex = currentIndex === -1 || currentIndex === 0 ? totalOptions - 1 : (currentIndex - 1 + totalOptions) % totalOptions;\r\n                    actualizarSeleccion();\r\n                } else if (event.key === 'Enter' && currentIndex !== -1) {\r\n                    event.preventDefault();\r\n                    let option = listaSearchOptions.eq(currentIndex);\r\n                    // Limpiar todas las opciones del select\r\n                    selectPadre.empty();\r\n                    if (option.val() === 'nuevo') {\r\n                        resolve('nuevo');\r\n                    } else {\r\n                        // Clonar la opci√≥n seleccionada y agregarla al select\r\n                        let selectedOption = option.clone();\r\n                        selectPadre.append(selectedOption);\r\n                        // Obtener el valor de la opci√≥n seleccionada\r\n                        let selectedValue = option.val();\r\n                        // Encontrar el objeto correspondiente a la opci√≥n seleccionada\r\n                        let objetoSeleccionado = datos.find(objeto => objeto[valorOpt] === parseInt(selectedValue));\r\n                        // Resolver la promesa con el objeto seleccionado\r\n                        currentIndex = -1;\r\n                        $(listaSearch).hide();\r\n                        resolve(objetoSeleccionado);\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            function actualizarSeleccion() {\r\n                const listaSearchOptions = listaPadre.find('option');\r\n                listaSearchOptions.removeClass('listOption');\r\n                if (currentIndex !== -1) {\r\n                    listaSearchOptions.eq(currentIndex).addClass('listOption');\r\n                }\r\n            }\r\n\r\n            function filtrarDatos() {\r\n\r\n                let inputText = $(inputSearch).val().trim().toLowerCase();\r\n                let filteredNames = datos.filter(function (item) {\r\n                    return (item[textOpt] ? item[textOpt].toLowerCase() : '').includes(inputText);\r\n                }).slice(0, 5);\r\n\r\n                let listaSearchOptions = document.querySelectorAll(`${listaSearch} option`);\r\n                // Iterar sobre cada opci√≥n\r\n                listaSearchOptions.forEach(function (option) {\r\n                    // Eliminar cada opci√≥n\r\n                    option.remove();\r\n                });\r\n\r\n                if (add) {\r\n                    let valNuevo = { [valorOpt]: 'nuevo', [textOpt]: 'Nuevo' };\r\n                    filteredNames.unshift(valNuevo);\r\n                }\r\n\r\n                if (filteredNames.length > 0) {\r\n                    filteredNames.forEach(function (item) {\r\n\r\n                        let option = $('<option>').val(item[valorOpt]).text(item[textOpt]);\r\n                        listaPadre.append(option);\r\n\r\n                        option.on('mousedown', function (event) {\r\n                            event.preventDefault(); // Prevenir el comportamiento predeterminado\r\n                            // eliminar option anteriores\r\n                            selectPadre.empty();\r\n                            if (option.val() === 'nuevo') {\r\n                                selectPadre.append('');\r\n                                limpiarLista();\r\n                                resolve('nuevo');\r\n                            } else {\r\n                                // agregar el option seleccionado\r\n                                selectPadre.append(option);\r\n                                limpiarLista();\r\n                                resolve(item);\r\n                            }\r\n                        });\r\n                    });\r\n                } else {\r\n                    listaPadre.append('<option disabled>No se encontraron resultados</option>');\r\n                }\r\n            }\r\n\r\n            function limpiarLista() {\r\n                // Ocultar y Limpiar busqueda\r\n                let listaSearchOptions = document.querySelectorAll(`${listaSearch} option`);\r\n                listaSearchOptions.forEach(function (option) {\r\n                    option.remove();\r\n                });\r\n                $(inputSearch).val('');\r\n                $(listaSearch).hide();\r\n\r\n                currentIndex = -1;\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.error('Error al obtener y mostrar los datos:', error);\r\n            reject('error')\r\n        }\r\n    });\r\n}\r\n// IMPORTANTE - ELIMINAR SI NO HAY ERRORES CON LOS SELECTORES\r\nasync function mostrarListaSearchs(datos, listaSearch, valorOpt, textOpt) {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n\r\n            if (datos.length < 1) reject('No hay data');\r\n\r\n            let listaPadre = $(listaSearch);\r\n            let inputSearch = listaPadre.find('input')\r\n            let selectPadre = listaPadre.parent().find('select');\r\n            let currentIndex = -1; // Variable para almacenar el √≠ndice de la opci√≥n actualmente seleccionada\r\n\r\n            if (!inputSearch.length === 0 || !selectPadre.length === 0) {\r\n                reject('No se encontro HTML');\r\n            }\r\n\r\n            filtrarDatos();\r\n\r\n            $(inputSearch).on('input blur', function (event) {\r\n                if (event.type === \"input\") {\r\n                    filtrarDatos();\r\n                } else if (event.type === \"blur\") {\r\n                    limpiarLista();\r\n                }\r\n            });\r\n\r\n            $(inputSearch).on('keydown', function (event) {\r\n\r\n                const listaSearchOptions = listaPadre.find('option');\r\n                // let listaSearchOptions = document.querySelectorAll(`${listaSearch} option`);\r\n\r\n                const totalOptions = listaSearchOptions.length;\r\n\r\n                if (event.key === 'ArrowDown') {\r\n                    event.preventDefault();\r\n                    currentIndex = (currentIndex + 1) % totalOptions;\r\n                    actualizarSeleccion();\r\n                } else if (event.key === 'ArrowUp') {\r\n                    event.preventDefault();\r\n                    currentIndex = currentIndex === -1 || currentIndex === 0 ? totalOptions - 1 : (currentIndex - 1 + totalOptions) % totalOptions;\r\n                    actualizarSeleccion();\r\n                } else if (event.key === 'Enter' && currentIndex !== -1) {\r\n                    event.preventDefault();\r\n                    let option = listaSearchOptions.eq(currentIndex);\r\n                    // Limpiar todas las opciones del select\r\n                    selectPadre.empty();\r\n                    // Clonar la opci√≥n seleccionada y agregarla al select\r\n                    let selectedOption = option.clone();\r\n                    selectPadre.append(selectedOption);\r\n                    // Obtener el valor de la opci√≥n seleccionada\r\n                    let selectedValue = option.val();\r\n                    // Encontrar el objeto correspondiente a la opci√≥n seleccionada\r\n                    let objetoSeleccionado = datos.find(objeto => objeto[valorOpt] === parseInt(selectedValue));\r\n                    // Resolver la promesa con el objeto seleccionado\r\n                    currentIndex = -1;\r\n                    $(listaSearch).hide();\r\n                    resolve(objetoSeleccionado);\r\n                }\r\n            });\r\n\r\n            function actualizarSeleccion() {\r\n                const listaSearchOptions = listaPadre.find('option');\r\n                listaSearchOptions.removeClass('listOption');\r\n                if (currentIndex !== -1) {\r\n                    listaSearchOptions.eq(currentIndex).addClass('listOption');\r\n                }\r\n            }\r\n\r\n            function filtrarDatos() {\r\n\r\n                let inputText = $(inputSearch).val().trim().toLowerCase();\r\n                let filteredNames = datos.filter(function (item) {\r\n                    // return item[textOpt].toLowerCase().includes(inputText);\r\n                    return (item[textOpt] ? item[textOpt].toLowerCase() : '').includes(inputText);\r\n                }).slice(0, 5);\r\n\r\n                let listaSearchOptions = document.querySelectorAll(`${listaSearch} option`);\r\n                // Iterar sobre cada opci√≥n\r\n                listaSearchOptions.forEach(function (option) {\r\n                    // Eliminar cada opci√≥n\r\n                    option.remove();\r\n                });\r\n\r\n                if (filteredNames.length > 0) {\r\n                    filteredNames.forEach(function (item) {\r\n\r\n                        let option = $('<option>').val(item[valorOpt]).text(item[textOpt]);\r\n                        listaPadre.append(option);\r\n\r\n                        option.on('mousedown', function (event) {\r\n                            event.preventDefault(); // Prevenir el comportamiento predeterminado\r\n                            // eliminar option anteriores\r\n                            selectPadre.empty();\r\n                            // agregar el option seleccionado\r\n                            selectPadre.append(option);\r\n                            limpiarLista();\r\n                            resolve(item);\r\n                        });\r\n                    });\r\n                } else {\r\n                    listaPadre.append('<option disabled>No se encontraron resultados</option>');\r\n                }\r\n            }\r\n\r\n            function limpiarLista() {\r\n                // Ocultar y Limpiar busqueda\r\n                let listaSearchOptions = document.querySelectorAll(`${listaSearch} option`);\r\n                listaSearchOptions.forEach(function (option) {\r\n                    option.remove();\r\n                });\r\n                $(inputSearch).val('');\r\n                $(listaSearch).hide();\r\n\r\n                currentIndex = -1;\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error al obtener y mostrar los datos:', error);\r\n            reject('error')\r\n        }\r\n    });\r\n}\r\n\r\n// celda, datos a buscar[id-nombre]*, div, scrolldiv\r\nasync function mostrarListaGrid(cellElement, datos, contLista, contScroll) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n\r\n            const contFiltro = document.querySelector(contLista);\r\n\r\n            //  QUITAR ESTO ADD SASS\r\n            contFiltro.style.zIndex = 10;\r\n            contFiltro.style.position = 'absolute';\r\n            contFiltro.style.backgroundColor = 'white';\r\n            //  QUITAR ESTO ADD SASS\r\n\r\n            // Crear el elemento para el input de b√∫squeda\r\n            const inputSearch = document.createElement('input');\r\n            inputSearch.setAttribute('type', 'text');\r\n            inputSearch.setAttribute('id', 'filtro_search');\r\n            inputSearch.setAttribute('placeholder', 'Buscar...');\r\n            inputSearch.setAttribute('autocomplete', 'off'); // Evitar el autocompletado del navegador\r\n\r\n            // Crear el √≠cono de b√∫squeda\r\n            const searchIcon = document.createElement('i');\r\n            searchIcon.classList.add('fa-solid', 'fa-magnifying-glass');\r\n\r\n            // Crear el contenedor para la lista de opciones\r\n            const filtroList = document.createElement('div');\r\n            filtroList.classList.add('container', 'Search');\r\n            filtroList.setAttribute('id', 'filtro_list');\r\n\r\n            // Agregar el input y el √≠cono al primer div dentro del contenedor\r\n            const inputDiv = document.createElement('div');\r\n            inputDiv.appendChild(inputSearch);\r\n            inputDiv.appendChild(searchIcon);\r\n\r\n            // Agregar los elementos al contenedor principal\r\n            contFiltro.appendChild(inputDiv);\r\n            contFiltro.appendChild(filtroList);\r\n\r\n\r\n            if (!contFiltro) return; // Salir si no se encuentra el contenedor\r\n\r\n            const updatePopupPosition = () => {\r\n                const contenedorScroll = document.querySelector(contScroll);\r\n                if (!contenedorScroll) return; // Salir si no se encuentra el contenedor\r\n\r\n                // Calcular la posici√≥n de la celda en relaci√≥n con el contenedor con scroll\r\n                const cellRect = cellElement.getBoundingClientRect();\r\n                const contenedorRect = contenedorScroll.getBoundingClientRect();\r\n                const cellTopInContainer = cellRect.top - contenedorRect.top + contenedorScroll.scrollTop;\r\n\r\n                // Altura del div que se mostrar√° encima de la celda (ajustar seg√∫n tu contenido)\r\n                const popupDivHeight = 100; // Altura del div en p√≠xeles\r\n\r\n                // Calcular la posici√≥n superior del div encima de la celda en el contenedor\r\n                const popupTop = cellTopInContainer + cellElement.clientHeight;\r\n\r\n                // Actualizar la posici√≥n del contenedor filtro\r\n                if (contFiltro) {\r\n                    contFiltro.style.left = `${cellRect.left}px`; // Posici√≥n izquierda de la celda\r\n                    contFiltro.style.top = `${popupTop}px`; // Posici√≥n encima del popupDiv\r\n                    // contFiltro.style.width = `${cellRect.width}px`; // Ancho igual al ancho de la celda\r\n                }\r\n            };\r\n\r\n            const existeLista = document.querySelector('#filtro_list ul option');\r\n            if (existeLista) return\r\n\r\n            $(contFiltro).show();\r\n            // Crear el div para mostrar encima de la celda clicada\r\n            // const filtroList = document.querySelector('#filtro_list');\r\n            const listUL = document.createElement('ul');\r\n            if (datos.length > 0) {\r\n                datos.forEach(function (item) {\r\n                    let option = $('<option>').val(item.id).text(item.nombre);\r\n                    listUL.appendChild(option[0]); // Convertir el elemento jQuery a un DOM node y a√±adirlo al listUL\r\n                });\r\n            }\r\n            filtroList.appendChild(listUL);\r\n\r\n            // Insertar el div en el contenedor con scroll\r\n            const contenedorScroll = document.querySelector(contScroll);\r\n            if (contenedorScroll) {\r\n                contenedorScroll.appendChild(contFiltro);\r\n                // Actualizar la posici√≥n inicial del div\r\n                updatePopupPosition();\r\n            }\r\n\r\n            // Agregar un listener para cerrar el div al hacer clic fuera de √©l\r\n            const closePopup = function (e) {\r\n                if (!contFiltro.contains(e.target) && !listUL.contains(e.target) && e.target !== cellElement) {\r\n                    // Cerrar el filtro y limpiar el listUL\r\n                    $(contFiltro).hide();\r\n                    $(listUL).empty();\r\n\r\n                    limpiarLista();\r\n\r\n                    // Eliminar el listener de clic para cerrar el popup\r\n                    document.removeEventListener('click', closePopup);\r\n                    contenedorScroll.removeEventListener('scroll', updatePopupPosition); // Detener el seguimiento del scroll del contenedor\r\n                }\r\n            };\r\n\r\n            // Agregar un listener para cerrar el div al hacer clic fuera de √©l\r\n            document.addEventListener('click', closePopup);\r\n\r\n            // let inputSearch = $(contFiltro).find('input');\r\n            inputSearch.focus();\r\n            let currentIndex = -1; // Variable para almacenar el √≠ndice de la opci√≥n actualmente seleccionada\r\n\r\n            // Navegar con Flechas\r\n            $(inputSearch).keydown(async event => {\r\n                const listaSearchOptions = $(listUL).find('option');\r\n                const totalOptions = listaSearchOptions.length;\r\n                if (event.key === 'ArrowDown') {\r\n                    event.preventDefault();\r\n                    currentIndex = (currentIndex + 1) % totalOptions;\r\n                    await actualizarSeleccion();\r\n                } else if (event.key === 'ArrowUp') {\r\n                    event.preventDefault();\r\n                    currentIndex = currentIndex === -1 || currentIndex === 0 ? totalOptions - 1 : (currentIndex - 1 + totalOptions) % totalOptions;\r\n                    actualizarSeleccion();\r\n                } else if (event.key === 'Enter' && currentIndex !== -1) {\r\n                    event.preventDefault();\r\n                    let option = listaSearchOptions.eq(currentIndex);\r\n                    let selectedOption = option.clone();\r\n                    listUL.append(selectedOption);\r\n                    let selectedValue = option.val();\r\n                    let objetoSeleccionado = datos.find(objeto => objeto['id'] === parseInt(selectedValue));\r\n                    resolve(objetoSeleccionado);\r\n                    limpiarLista();\r\n                }\r\n            });\r\n\r\n            async function actualizarSeleccion() {\r\n                const listaSearchOptions = $(listUL).find('option');\r\n                listaSearchOptions.removeClass('listOption');\r\n                if (currentIndex !== -1) {\r\n                    listaSearchOptions.eq(currentIndex).addClass('listOption');\r\n                }\r\n            }\r\n\r\n            // Buscador \r\n            filtrarDatos();\r\n\r\n            $(inputSearch).on('input blur', function (event) {\r\n                if (event.type === \"input\") {\r\n                    filtrarDatos();\r\n                } else if (event.type === \"blur\") {\r\n                    limpiarLista();\r\n                }\r\n            });\r\n\r\n            function filtrarDatos() {\r\n                let inputText = $(inputSearch).val().trim().toLowerCase();\r\n                let filteredDatos = datos.filter(function (item) {\r\n                    let nombre = (item['nombre'] || '').trim().toLowerCase();\r\n                    return nombre.includes(inputText) && nombre.length > 0;\r\n                }).slice(0, 6);\r\n\r\n                // Vaciar el contenido actual del listUL antes de actualizar\r\n                $(listUL).empty();\r\n\r\n                if (filteredDatos.length > 0) {\r\n                    // Crear y agregar nuevas opciones filtradas al listUL\r\n                    filteredDatos.forEach(function (item) {\r\n                        let option = $('<option>').val(item.id).text(item.nombre);\r\n                        $(listUL).append(option);\r\n\r\n                        option.on('mousedown', function (event) {\r\n                            event.preventDefault(); // Prevenir el comportamiento predeterminado\r\n                            // eliminar option anteriores\r\n                            $(filtroList).empty();\r\n\r\n                            // agregar el option seleccionado\r\n                            listUL.append(option);\r\n                            resolve(item);\r\n                            limpiarLista();\r\n                        });\r\n\r\n                    });\r\n                } else {\r\n                    $(listUL).append('<option disabled>No se encontraron resultados</option>');\r\n                }\r\n\r\n                // Reiniciar el √≠ndice actual despu√©s de filtrar\r\n                currentIndex = -1;\r\n                // Actualizar la selecci√≥n resaltada si es necesario\r\n                actualizarSeleccion();\r\n            }\r\n\r\n            function limpiarLista() {\r\n                $(contFiltro).hide();\r\n                $(contFiltro).empty();\r\n                $(listUL).empty();\r\n                $(filtroList).empty();\r\n                currentIndex = -1;\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error al obtener y mostrar los datos:', error);\r\n            reject('error')\r\n        }\r\n    });\r\n}\r\n\r\n// Establecer Fecha Actual D-M-Y\r\nfunction setFechaActual(id) {\r\n    let elemento = document.getElementById(id);\r\n    // Crear un nuevo objeto de fecha con la fecha y hora actual\r\n    let fechaActual = new Date();\r\n    let dia = fechaActual.getDate().toString().padStart(2, '0'); // Asegura que el d√≠a tenga dos d√≠gitos\r\n    let mes = (fechaActual.getMonth() + 1).toString().padStart(2, '0'); // Asegura que el mes tenga dos d√≠gitos\r\n    let anio = fechaActual.getFullYear();\r\n\r\n    // Formatear la fecha como D-M-Y\r\n    let fechaFormateada = dia + '/' + mes + '/' + anio;\r\n\r\n    // Asignar la fecha formateada al elemento\r\n    elemento.value = fechaFormateada;\r\n}\r\nfunction obtenerFechaActual() {\r\n    let fechaActual = new Date();\r\n    let dia = fechaActual.getDate().toString().padStart(2, '0'); // Asegura que el d√≠a tenga dos d√≠gitos\r\n    let mes = (fechaActual.getMonth() + 1).toString().padStart(2, '0'); // Asegura que el mes tenga dos d√≠gitos\r\n    let anio = fechaActual.getFullYear();\r\n\r\n    return anio + '/' + mes + '/' + dia;\r\n}\r\n\r\n// Formato de Fecha a Y-M-D\r\nfunction formatearFecha(fecha) {\r\n    if (!fecha) return null; // Manejar caso de fecha vac√≠a o nula\r\n\r\n    // Convertir a string si no lo es (por ejemplo, si es un objeto Date)\r\n    fecha = fecha.toString();\r\n\r\n    // Verificar si la fecha es en formato 'YYYY-MM-DD'\r\n    if (fecha.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\r\n        // Si es 'YYYY-MM-DD', simplemente devolverla en formato 'DD/MM/YYYY'\r\n        const [year, month, day] = fecha.split('-');\r\n        // return `${day}/${month}/${year}`;\r\n        return `${year}/${month}/${day}`;\r\n    }\r\n\r\n    // Intentar parsear la fecha\r\n    let parsedDate = new Date(fecha);\r\n    if (!isNaN(parsedDate.getTime())) {\r\n        // Si el parseo fue exitoso, formatear la fecha en 'DD/MM/YYYY'\r\n        let dia = parsedDate.getDate().toString().padStart(2, '0');\r\n        let mes = (parsedDate.getMonth() + 1).toString().padStart(2, '0'); // Sumamos 1 porque los meses van de 0 a 11\r\n        let a√±o = parsedDate.getFullYear();\r\n        // return `${dia}/${mes}/${a√±o}`;\r\n        return `${a√±o}/${mes}/${dia}`;\r\n    }\r\n\r\n    // Si no se puede parsear la fecha, devolver null o la fecha original\r\n    return fecha;\r\n}\r\n// Y/M/D\r\nfunction formatearFechaYear(fecha) {\r\n    // Si la entrada es una cadena de texto, intenta convertirla a un objeto Date\r\n    if (typeof fecha === 'string') {\r\n        // Verifica si la fecha ya est√° en el formato 'YYYY/MM/DD' o 'YYYY-MM-DD'\r\n        if (/^\\d{4}[\\/-]\\d{1,2}[\\/-]\\d{1,2}$/.test(fecha)) {\r\n            // Si el separador es '-', reemplazarlo por '/'\r\n            if (fecha.includes('-')) {\r\n                fecha = fecha.replace(/-/g, '/');\r\n            }\r\n            return fecha; // Ya est√° en el formato correcto\r\n        } else {\r\n            // Si no, intenta parsear la fecha como una fecha est√°ndar de JavaScript\r\n            fecha = new Date(fecha);\r\n        }\r\n    } else if (!(fecha instanceof Date)) {\r\n        return ''\r\n    }\r\n\r\n    // Obtener a√±o, mes y d√≠a\r\n    const anio = fecha.getFullYear();\r\n    const mes = (fecha.getMonth() + 1).toString().padStart(2, '0'); // Meses son 0-indexed\r\n    const dia = fecha.getDate().toString().padStart(2, '0');\r\n\r\n    // Retornar la fecha formateada\r\n    return `${anio}/${mes}/${dia}`;\r\n}\r\n\r\nfunction obtenerDia(fecha) {\r\n    if (!fecha) return null; // Manejar caso de fecha vac√≠a o nula\r\n\r\n    // Asumir que la fecha viene en formato 'DD/MM/YYYY'\r\n    const partes = fecha.split('/');\r\n\r\n    // Verificar que la fecha tiene 3 partes (d√≠a, mes, a√±o)\r\n    if (partes.length === 3) {\r\n        const [a√±o, mes, dia] = partes;\r\n        return dia; // Devolver el d√≠a\r\n    }\r\n\r\n    return null; // Devolver null si el formato no es v√°lido\r\n}\r\n// D/M/Y\r\nfunction formatearFechaCompleta(fechaCompleta) {\r\n    // Crear un objeto de fecha\r\n    let fecha = new Date(fechaCompleta);\r\n\r\n    // Verificar si la fecha es v√°lida\r\n    if (isNaN(fecha.getTime())) {\r\n        return null; // Devuelve null si la fecha no es v√°lida\r\n    }\r\n\r\n    // Obtener los componentes de la fecha\r\n    let dia = fecha.getDate();\r\n    let mes = fecha.getMonth() + 1; // Los meses van de 0 a 11, sumamos 1 para obtener el mes correcto\r\n    let a√±o = fecha.getFullYear();\r\n\r\n    // Formatear la fecha en D√≠a/Mes/A√±o\r\n    return `${dia.toString().padStart(2, '0')}/${mes.toString().padStart(2, '0')}/${a√±o}`;\r\n}\r\n\r\nfunction convertirAFecha(fechaStr) {\r\n    if (!fechaStr) return null; // Manejar caso de fecha vac√≠a o nula\r\n\r\n    // if(fechaStr != Number) return new Date('Y-m-d');\r\n    const partes = fechaStr.split('/');\r\n    const a√±o = parseInt(partes[0], 10);\r\n    const mes = parseInt(partes[1], 10) - 1; // Los meses en JavaScript van de 0 a 11\r\n    const dia = parseInt(partes[2], 10);\r\n    return new Date(a√±o, mes, dia);\r\n}\r\nfunction calcularDiferenciaDias(fecha1, fecha2) {\r\n    if(!fecha1 || !fecha2) return null\r\n    const fechaInicio = convertirAFecha(fecha1);\r\n    const fechaFin = convertirAFecha(fecha2);\r\n\r\n    const diferenciaTiempo = fechaFin.getTime() - fechaInicio.getTime();\r\n    // const diferenciaTiempo = fechaFin - fechaInicio;\r\n    const diferenciaDias = diferenciaTiempo / (1000 * 60 * 60 * 24); // Convertir de milisegundos a d√≠as\r\n    return diferenciaDias;\r\n}\r\n\r\nfunction formatearHoraFloat(valor) {\r\n    // Expresi√≥n regular para encontrar el patr√≥n de hora\r\n    const patron = /(\\d+):(\\d+)/;\r\n    const match = valor.match(patron);\r\n\r\n    if (match) {\r\n        const horas = parseInt(match[1]);\r\n        const minutos = parseInt(match[2]);\r\n        const totalMinutos = horas * 60 + minutos;\r\n        // Convertir los minutos a un n√∫mero flotante\r\n        const resultado = totalMinutos / 60.0;\r\n        return resultado.toFixed(2);\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n// Formato hora con ':'\r\nasync function formatoHora(hora) {\r\n\r\n    let horas = 0;\r\n    let minutos = 0;\r\n    if (hora) {\r\n        if (hora.includes(':')) {\r\n            const partes = hora.split(':');\r\n\r\n            horas = partes[0];\r\n            minutos = partes[1];\r\n        } else {\r\n            horas = hora;\r\n        }\r\n    } else {\r\n        horas = hora;\r\n    }\r\n    // Convertir el valor num√©rico a horas y minutos\r\n    const hrsNum = parseFloat(horas);\r\n    const minNum = parseFloat(minutos);\r\n\r\n    const horaFormateada = `${hrsNum.toString().padStart(2, '0')}:${minNum.toString().padStart(2, '0')}`;\r\n    const horaRegex = /^(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9])$/;\r\n\r\n    if (horaRegex.test(horaFormateada)) {\r\n        return horaFormateada; // Devolver la hora formateada si es v√°lida\r\n    } else {\r\n        return '00:00'; // Devolver un valor por defecto si el formato no es v√°lido\r\n    }\r\n}\r\n\r\nfunction limpiarRuta(id) {\r\n    let form = document.getElementById(id);\r\n\r\n    // Obtener todos los elementos select dentro del formulario\r\n    let selects = form.querySelectorAll('select');\r\n\r\n    // Iterar sobre cada elemento select\r\n    selects.forEach(function (select) {\r\n        let selectId = select.id;\r\n        // Obtener el primer option del select\r\n        let firstOption = select.querySelector('option');\r\n\r\n        if (selectId.includes('origen')) {\r\n            firstOption.text = 'Origen';\r\n        } else if (selectId.includes('destino')) {\r\n            firstOption.text = 'Destino';\r\n        } else {\r\n            console.log('No se reconoce el tipo')\r\n        }\r\n    });\r\n}\r\n// Pasar idForm, quitar o poner\r\nasync function deshabilitarElemento(...elementoId) {\r\n    elementoId.forEach(id => {\r\n        const elemento = document.getElementById(id);\r\n        elemento.classList.add('disabled-element'); // Agregar clase para deshabilitar estilos\r\n        // elemento.disabled = true;\r\n    });\r\n\r\n}\r\nasync function habilitarElemento(...elementoId) {\r\n    elementoId.forEach(id => {\r\n        const elemento = document.getElementById(id);\r\n        elemento.classList.remove('disabled-element'); // Agregar clase para deshabilitar estilos\r\n        // elemento.disabled = false;\r\n    });\r\n\r\n}\r\n\r\n"]}