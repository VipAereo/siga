{"version":3,"sources":["solCotizacion.js"],"names":["gridOptions","currentStep","AEROPUERTOS","BROKERS","maxId","asignarEventos","$","hide","aplicarMascaraCantidad","document","addEventListener","e","key","resetForm","getElementById","async","event","preventDefault","show","focus","data","obtenerAeronaves","listSearch","mostrarListaSearch","activarRutas","updateActiveClass","each","this","attr","asientos","prop","obtenerPasajeros","val","text","nuevoPax","setPaxId","obtenerBroker","contacto_principal","obtenerClientes","mostrarClienteBroker","target","value","obtenerAeropuertos","existeRuta","parentNode","nuevaRuta","title","querySelector","content","classList","contains","remove","addClass","add","removeClass","titleRel","contentRel","empty","toggleRelRuta","relRutasPax","on","max","parseInt","configurarBotones","click","mostrarContenedorAltas","destClicked","index","limpiarForm","validateInputs","crearCotizacion","actualizarCotizacion","actualizarRutaPax","obtenerCotizacionPDF","generarServicio","inicializarPagina","setFechaActual","iniciarTabla","headerName","field","width","cellStyle","textAlign","valueFormatter","params","Number","toFixed","replace","cellRenderer","editButton","createElement","className","estatus","cotizar_id","folio_cotizar","formatearFechaCompleta","fecha_creacion","comentarios","aeronave_id","modeloAeronave","tipo_cambio_id","tipo_cambio","cliente_id","nombreCli","broker_id","nombreEmpr","objetoEncontrado","find","objeto","nombre","tipoV","tipo_de_viaje","detalleRutas","obtnerVuelosId","idFromDet","2","3","idFormFecha","idFormHora","idFormPasajero","idFormOr","idFormDes","i","length","formDestino","querySelectorAll","forEach","ruta","indice","idDetalle","cot_det_id","fechaSalida","fecha_salida","horaSalida","hora_salida","pasajeros","origenId","origenNombre","origMun","destinoId","destinoNombre","destMun","inputDetalle","inputFecha","inputHora","inputPasajeros","inputOrigen","inputDestino","datosPax","obtenerPax","detallePax","paxDoc","formPax","paxId","pasajero_id","paxName","inputPaxName","dataset","pax","documentos","Array","isArray","obtenerDocumentosPorPaxId","contenedorDocs","doc","enlace","href","hash_doc","tipo_doc","setAttribute","divIcon","icon","divName","name","textContent","nombre_doc","appendChild","activarSecciones","actionContainer","headerClass","cellClass","filter","obtenerCotizaciones","resetearTabla","cerrarVentana","aeronaveValue","clienteValue","brokerValue","aeronaveTieneValor","clienteOBrokerTieneValor","deshabilitarElemento","habilitarElemento","configTablaCrear","aeropuerto","columnDefs","cellEditor","fecha","formatearFecha","columnGroupShow","undefined","hora","horas","minutos","includes","partes","split","hrsNum","parseFloat","minNum","horaFormateada","toString","padStart","test","editable","cellEditorParams","values","obtenerCategorias","map","a","categoria_id","valueGetter","categoria","valueSetter","newValue","aeropuerto_id","municipio","origen","valueParser","destino","cellClassRules","event-none","cotDetIdValue","tipoVuelo","traerDetalle","ordenarPorCategoria","opcMulti","obtenerRutPaxCot","id","datos","FormData","append","respuesta","fetch","method","body","json","error","console","SwalLoad","pasajerosPorRuta","reduce","acc","ruta_id","push","pasajerosSeleccionadosPorRuta","gridApi","forEachNode","nodo","pRuta","concepto","selectPasajeros","pasajerosElements","optionEmpty","disabled","selected","pasajeroElement","nombrePasajero","idPasajero","option","pasajeroSeleccionado","idPasajeroSeleccionado","options","selectedIndex","getAttribute","idRuta","log","pasajeroElemento","insertBefore","optionToSelect","from","allData","rutaRows","aterrizajeRows","pernoctaRows","otrasCategoriasRows","node","rowData","sortedRows","arreglo2","fill","nuevosDatosClonados","concat","obj","updateGridOptions","convert","verificarArray","setGridOption","SwalToast","actTotalesLineold","totTarTerr","tarifa_aterrizaje","tarifa_ser_terrestre","tarifa_ser_auxiliares","total_costos","tiempoEstimado","hora_cotizada","pernocta","costoTarifa","costo","subT","subtotal","applyTransaction","update","actTotalesLine","lineaAct","line_id","percost","cantidad","tarifa","setDataValue","refreshCells","force","actTotales","cantPernoctas","totPernoctas","cantHoras","totalHoras","subtotalInpt","subtNac","subtInt","ivaNac","ivaInt","hr_cant","tipo_vuelo","mostrarListaOrigen","flightNumber","mostrarListaDestino","validarRutas","idForm","isEmpty","form","inputs","element","input","trim","tagName","obtenerRutas","botonActivo","indiceBotonActivo","rutas","Promise","all","idDet","rutaActual","obtenerCodigosIATA","obtenerDocsbyPax","obtenerTasaAterrizaje","origenVal","aeronave","validaRutaTarifa","destinoVal","cliente","broker","opcionSeleccionada","toggle","flightCount","nuevoMax","newFlight","innerHTML","eliminarRuta","closest","formPasajeros","contadorPasajeros","nuevoPasajeroDiv","divInputGroupText","idPaxInput","type","nuevoNombreInput","placeholder","nuevoNombreLabel","htmlFor","divInputGroupFile","nuevoArchivoInput","accept","nuevoEliminar","divDocs","eliminarPasajero","flagRepetido","inputElement","paxn","docsPAx","validarRutaPax","relaciones","validarPasajeros","pasajerosDet","nombre_ruta","paxActual","id_pax","files","slc","exito","alertas","ctz","nuevosDatos","cot","baseObjeto","nombreCat","rel_ruta","relaciones_id","relacion_id","updatedRows","fecha_cot","folio","clienteName","brokerName","condiciones","total","cant_pernocta","tot_pernocta","cant_hrs","tot_hrs","detalles","validarGridPDF","JSON","stringify","urlArchivo","window","open","fechaCot","setTimeout","swal","close","errorSMS","validarGrid","pasajero","prefijo","word","charAt","join","relRutaPax","csrfToken","headers","X-CSRF-Token","nodes","tHoras","formattedFecha","formatearFechaYear","categoria_nombre","filaModificada","horaFormat","formatoHora","ordenCategoria","sort","b","fechaA","Date","fechaB","indexA","indexOf","indexB","localeCompare"],"mappings":"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","file":"solCotizacion.js","sourcesContent":["let gridOptions;\r\nlet currentStep = 1;\r\nlet AEROPUERTOS = [];\r\nlet BROKERS = [];\r\nlet maxId = 0;\r\n\r\n// Utilizando el Principio de Modularidad\r\n$(function () {\r\n    asignarEventos();\r\n    inicializarPagina();\r\n    configurarBotones();\r\n});\r\nfunction asignarEventos() {\r\n    $(\".contenedor-altas\").hide();\r\n    $(\"#costeo-relacion\").hide();\r\n\r\n    // Ocultar Listados\r\n    $('.paxSearch').hide();\r\n\r\n    $('.aeroSearch').hide();\r\n    $('.emprSearch').hide();\r\n    $('.cliSearch').hide();\r\n    // Ida\r\n    $('.origSearch1').hide();\r\n    $('.destSearch1').hide();\r\n    // Ida y Vuelta\r\n    $('.origSearchIda').hide();\r\n    $('.destSearchIda').hide();\r\n    $('.origSearchVue').hide();\r\n    $('.destSearchVue').hide();\r\n    // Multidestino\r\n    $('.origSchMul1').hide();\r\n    $('.destSrchMul1').hide();\r\n\r\n    // Inputs\r\n    $('#inpEmpresa').hide();\r\n\r\n    aplicarMascaraCantidad('subtotal', 'ivaNac', 'ivaInt', 'total', 'cant_pernocta', 'tot_pernocta', 'cant_hrs', 'tot_hrs');\r\n\r\n    // Esc Cerrar\r\n    document.addEventListener(\"keydown\", e => {\r\n        if (e.key === 'Escape') {\r\n            // Limpiar Ruta\r\n            resetForm();\r\n        }\r\n    });\r\n\r\n    // Lista Aeronaves\r\n    document.getElementById(\"aeronave_id\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        $('.aeroSearch').show();\r\n        $('.inAeroSrch').focus();\r\n        let data = await obtenerAeronaves();\r\n        const listSearch = await mostrarListaSearch(data, '.aeroSearch', 'aeronave_id', 'modelo');\r\n\r\n        if (listSearch) {\r\n            activarRutas();\r\n            updateActiveClass();\r\n        }\r\n\r\n        // Establecer el Max a todos los PAX\r\n        $('.pax').each(function () {\r\n            $(this).attr('max', listSearch.asientos);\r\n            $(this).attr('min', '0');\r\n            $('.pax').prop('disabled', false);\r\n        });\r\n    });\r\n\r\n    // Lista Pasajeros\r\n    document.getElementById(\"pasajero_id\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        $('.paxSearch').show();\r\n        $('.inPaxSrch').focus();\r\n        let data = await obtenerPasajeros();\r\n        const listSearch = await mostrarListaSearch(data, '.paxSearch', 'pasajero_id', 'nombre', true);\r\n        if (listSearch == 'nuevo') {\r\n            $(\"#pasajero_id option\").val();\r\n            $(\"#pasajero_id option\").text('');\r\n            nuevoPax();\r\n        } else {\r\n            $(\"#pasajero_id option\").val();\r\n            $(\"#pasajero_id option\").text('');\r\n            setPaxId(listSearch);\r\n        }\r\n\r\n    });\r\n\r\n    // Lista Brokers\r\n    document.getElementById(\"broker_id\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        $('.emprSearch').show();\r\n        $('.inEmprSrch').focus()\r\n        let data = await obtenerBroker();\r\n        const listSearch = await mostrarListaSearch(data, '.emprSearch', 'broker_id', 'nombre');\r\n        if (listSearch) {\r\n            activarRutas();\r\n            updateActiveClass();\r\n        }\r\n        $('#rt-responsable').val(listSearch.contacto_principal);\r\n    });\r\n\r\n    // Lista Clientes\r\n    document.getElementById(\"cliente_id\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        $('.cliSearch').show();\r\n        $('.inCliSrch').focus();\r\n        let data = await obtenerClientes();\r\n        const listSearch = await mostrarListaSearch(data, '.cliSearch', 'cliente_id', 'nombre');\r\n        if (listSearch) {\r\n            activarRutas();\r\n            updateActiveClass();\r\n        }\r\n    });\r\n    document.getElementById(\"slctOpcion\").addEventListener(\"change\", async function (event) {\r\n        const opcionSeleccionada = event.target.value;\r\n        mostrarClienteBroker(opcionSeleccionada);\r\n    });\r\n\r\n    // Lista Aeropuertos\r\n    // Ida \r\n    document.getElementById(\"rt-origen1\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        if (AEROPUERTOS == '') { let data = await obtenerAeropuertos(); }\r\n        $('.origSearch1').show();\r\n        $('.inOrigSrch1').focus();\r\n        const listSearch = await mostrarListaSearch(AEROPUERTOS, '.origSearch1', 'aeropuerto_id', 'municipio');\r\n        if (listSearch) {\r\n            let slcActivo = this.parentNode.parentNode.parentNode;\r\n            existeRuta(slcActivo);\r\n            activarRutas();\r\n        }\r\n    });\r\n    document.getElementById(\"rt-destino1\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        if (AEROPUERTOS == '') { let data = await obtenerAeropuertos(); }\r\n        $('.destSearch1').show();\r\n        $('.inDestgSrch1').focus();\r\n        const listSearch = await mostrarListaSearch(AEROPUERTOS, '.destSearch1', 'aeropuerto_id', 'municipio');\r\n        if (listSearch) {\r\n            let slcActivo = this.parentNode.parentNode.parentNode;\r\n            existeRuta(slcActivo);\r\n            activarRutas();\r\n        }\r\n    });\r\n\r\n    // Ida y Vuelta\r\n    document.getElementById(\"rt-origIda1\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        if (AEROPUERTOS == '') { let data = await obtenerAeropuertos(); }\r\n        $('.origSearchIda').show();\r\n        $('.inOrigSrchIda').focus();\r\n        const listSearch = await mostrarListaSearch(AEROPUERTOS, '.origSearchIda', 'aeropuerto_id', 'municipio');\r\n        if (listSearch) {\r\n            let slcActivo = this.parentNode.parentNode.parentNode;\r\n            existeRuta(slcActivo);\r\n            activarRutas();\r\n        }\r\n    });\r\n    document.getElementById(\"rt-destVue1\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        if (AEROPUERTOS == '') { let data = await obtenerAeropuertos(); }\r\n        $('.destSearchIda').show();\r\n        $('.inDestSrchIda').focus();\r\n        const listSearch = await mostrarListaSearch(AEROPUERTOS, '.destSearchIda', 'aeropuerto_id', 'municipio');\r\n        if (listSearch) {\r\n            let slcActivo = this.parentNode.parentNode.parentNode;\r\n            existeRuta(slcActivo);\r\n            activarRutas();\r\n        }\r\n    });\r\n    document.getElementById(\"rt-origIda2\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        if (AEROPUERTOS == '') { let data = await obtenerAeropuertos(); }\r\n        $('.origSearchVue').show();\r\n        $('.inOrigSrchVue').focus();\r\n        const listSearch = await mostrarListaSearch(AEROPUERTOS, '.origSearchVue', 'aeropuerto_id', 'municipio');\r\n        if (listSearch) {\r\n            let slcActivo = this.parentNode.parentNode.parentNode;\r\n            existeRuta(slcActivo);\r\n            activarRutas();\r\n        }\r\n    });\r\n    document.getElementById(\"rt-destVue2\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        if (AEROPUERTOS == '') { let data = await obtenerAeropuertos(); }\r\n        $('.destSearchVue').show();\r\n        $('.inDestSrchVue').focus();\r\n        const listSearch = await mostrarListaSearch(AEROPUERTOS, '.destSearchVue', 'aeropuerto_id', 'municipio');\r\n        if (listSearch) {\r\n            let slcActivo = this.parentNode.parentNode.parentNode;\r\n            existeRuta(slcActivo);\r\n            activarRutas();\r\n        }\r\n    });\r\n\r\n    // Multidestino\r\n    document.getElementById(\"rt-origMul1\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        if (AEROPUERTOS == '') { let data = await obtenerAeropuertos(); }\r\n        $('.origSchMul1').show();\r\n        $('.inOrigSrchMul1').focus();\r\n        const listSearch = await mostrarListaSearch(AEROPUERTOS, '.origSchMul1', 'aeropuerto_id', 'municipio');\r\n        if (listSearch) {\r\n            let slcActivo = this.parentNode.parentNode.parentNode;\r\n            existeRuta(slcActivo);\r\n            activarRutas();\r\n        }\r\n    });\r\n    document.getElementById(\"rt-destinoMul1\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        if (AEROPUERTOS == '') { let data = await obtenerAeropuertos(); }\r\n        $('.destSrchMul1').show();\r\n        $('.inDestgSrchMul1').focus();\r\n        const listSearch = await mostrarListaSearch(AEROPUERTOS, '.destSrchMul1', 'aeropuerto_id', 'municipio');\r\n        if (listSearch) {\r\n            let slcActivo = this.parentNode.parentNode.parentNode;\r\n            existeRuta(slcActivo);\r\n            activarRutas();\r\n        }\r\n    });\r\n\r\n    document.getElementById(\"btnAddVuelo\").addEventListener(\"click\", function () {\r\n        nuevaRuta();\r\n    });\r\n\r\n\r\n    // toggle\r\n    const title = document.querySelector(\".toggle-pax\");\r\n    const content = document.querySelector(\".toggle-pax-cont\");\r\n\r\n    title.addEventListener(\"click\", function () {\r\n        if (content.classList.contains(\"expanded\")) {\r\n            content.classList.remove(\"expanded\");\r\n            title.classList.remove(\"expanded\");\r\n            $(\"#formPasajeros\").addClass(\"toggle-pax-cont\");\r\n        } else {\r\n            content.classList.add(\"expanded\");\r\n            title.classList.add(\"expanded\");\r\n            $(\"#formPasajeros\").removeClass(\"toggle-pax-cont\");\r\n        }\r\n    });\r\n\r\n    const titleRel = document.querySelector(\".toggle-relRuta\");\r\n    const contentRel = document.querySelector(\".toggle-relRuta-cont\");\r\n    titleRel.addEventListener(\"click\", async function () {\r\n        if (contentRel.classList.contains(\"expanded\")) {\r\n            contentRel.classList.remove(\"expanded\");\r\n            titleRel.classList.remove(\"expanded\");\r\n            $('#formRelRuta').empty();\r\n        } else {\r\n            contentRel.classList.add(\"expanded\");\r\n            titleRel.classList.add(\"expanded\");\r\n        }\r\n    });\r\n\r\n    const toggleRelRuta = document.querySelector('.toggle-relRuta');\r\n    toggleRelRuta.addEventListener('mousedown', async function () {\r\n        await relRutasPax(toggleRelRuta);\r\n    });\r\n\r\n    $('.pax').prop('disabled', true);\r\n    $(\"select[name^='rt-orig'], select[name^='rt-dest']\").prop('disabled', true);\r\n\r\n    $('.pax').on('input', function () {\r\n        const max = parseInt($(this).attr('max'));\r\n        const value = parseInt($(this).val());\r\n        if (value > max) $(this).val(max);\r\n    });\r\n}\r\nfunction configurarBotones() {\r\n\r\n\r\n    $(\"#crear-solCot\").click(function () {\r\n        mostrarContenedorAltas('PND');\r\n    }\r\n    );\r\n\r\n    $(\".nav-destinos button\").click(function (e) {\r\n        e.preventDefault(); // Prevenir el comportamiento predeterminado del botón  \r\n        let destClicked = $(this).index() + 1; // Obtener el índice del botón clicado\r\n        currentStep = destClicked; // Establecer el paso actual\r\n\r\n        // Ocultar todos los destinos y mostrar solo el destino correspondiente al paso actual\r\n        $(\"#dest1, #dest2, #dest3\").hide();\r\n        $(\"#dest\" + destClicked).show();\r\n\r\n        limpiarForm('#fdest' + destClicked); // Limpiar el formulario correspondiente al paso actual\r\n        updateActiveClass(); // Actualizar la clase pasoActivo en los botones de destino\r\n    });\r\n\r\n    $(\"#btnGuardar\").click(async e => {\r\n        let validar = validateInputs($('#formAltas'));\r\n        // if (validar) $('#cotizar_id').val() == '' ? crearCotizacion() : actualizarCotizacion();\r\n        if (validar && $('#cotizar_id').val() == '') {\r\n            await crearCotizacion();\r\n        } else {\r\n            await actualizarCotizacion();\r\n            await actualizarRutaPax();\r\n        };\r\n    });\r\n\r\n    $(\"#btnCancel\").click(e => {\r\n        resetForm();\r\n    });\r\n\r\n    $(\"#btnPasajero\").click(e => {\r\n        nuevoPax();\r\n    });\r\n\r\n    $(\"#genera_pdf\").click(e => {\r\n        if ($('#cotizar_id').val()) obtenerCotizacionPDF();\r\n    });\r\n\r\n    $(\"#btnServicio\").click(e => {\r\n        if ($('#cotizar_id').val()) generarServicio();\r\n    });\r\n\r\n    updateActiveClass();\r\n}\r\nfunction inicializarPagina() {\r\n    setFechaActual('fecha-cot');\r\n\r\n    let columnDefs = [\r\n        {\r\n            headerName: 'id',\r\n            field: 'cotizar_id',\r\n            width: 80\r\n        },\r\n        {\r\n            headerName: 'Folio',\r\n            field: 'folio_cotizar',\r\n            width: 80\r\n        },\r\n        {\r\n            headerName: 'Broker',\r\n            field: 'nombreBrok',\r\n            width: 110\r\n        },\r\n        {\r\n            headerName: 'Cliente',\r\n            field: 'nombreCli',\r\n            width: 110\r\n        },\r\n        {\r\n            headerName: 'Aeronave',\r\n            field: 'modeloAeronave',\r\n            width: 160\r\n        },\r\n        {\r\n            headerName: 'Ruta',\r\n            field: 'concepto',\r\n            width: 180\r\n        },\r\n        {\r\n            headerName: 'Fecha Salida',\r\n            field: 'fecha_salida',\r\n            width: 100\r\n        },\r\n        {\r\n            headerName: 'Total',\r\n            field: 'total',\r\n            width: 120,\r\n            cellStyle: { textAlign: 'right' }, // Alinea los datos a la derecha\r\n            valueFormatter: function (params) {\r\n                // Formatea el número con comas como separadores de miles y dos decimales\r\n                return Number(params.value).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n            }\r\n        },\r\n        {\r\n            headerName: 'Estatus',\r\n            field: 'estatus',\r\n            width: 80\r\n        },\r\n        {\r\n            headerName: 'Acción',\r\n            cellRenderer: function (params) {\r\n                const editButton = document.createElement('I');\r\n                editButton.className = \"fa-regular fa-pen-to-square btn btn-editar\";\r\n                editButton.title = 'Editar';\r\n\r\n                // Datos a Editar\r\n                editButton.addEventListener('click', async function () {\r\n\r\n                    let estatus = params.data.estatus;\r\n                    await mostrarContenedorAltas(estatus);\r\n\r\n                    $('#cotizar_id').val(params.data.cotizar_id);\r\n                    $('#folio').val(params.data.folio_cotizar);\r\n\r\n                    $('#fecha-cot').val(formatearFechaCompleta(params.data.fecha_creacion));\r\n\r\n                    $('#rt-comment').val(params.data.comentarios);\r\n                    $('#cot-comment').val(params.data.comentarios);\r\n                    $('#estatus').val(params.data.estatus);\r\n                    $('#aeronave_id option').val(params.data.aeronave_id);\r\n                    $('#aeronave_id option').text(params.data.modeloAeronave);\r\n                    $('#tipo_cambio option').val(params.data.tipo_cambio_id);\r\n                    $('#tipo_cambio option').text(Number(params.data.tipo_cambio).toFixed(2));\r\n\r\n                    if (params.data.cliente_id) {\r\n                        mostrarClienteBroker(1);\r\n                        $(\"#slctOpcion\").val(1);\r\n                        $(\"#cliente_id option\").val(params.data.cliente_id);\r\n                        $(\"#cliente_id option\").text(params.data.nombreCli);\r\n                    } else if (params.data.broker_id) {\r\n                        mostrarClienteBroker(2);\r\n                        $(\"#slctOpcion\").val(2);\r\n                        $(\"#broker_id option\").val(params.data.broker_id);\r\n                        $(\"#broker_id option\").text(params.data.nombreEmpr);\r\n                        let aeropCot = await obtenerBroker();\r\n                        const objetoEncontrado = aeropCot.find(objeto => objeto.broker_id == params.data.broker_id);\r\n                        $('#broker_id option').val(objetoEncontrado.broker_id);\r\n                        $('#broker_id option').text(objetoEncontrado.nombre);\r\n                        $('#rt-responsable').val(objetoEncontrado.contacto_principal);\r\n                    }\r\n                    // inhabilitar nav-destinos \r\n                    $('.nav-destinos button').addClass('event-none');\r\n\r\n                    // Indicar que Tipo de VUELO es\r\n                    let tipoV = params.data.tipo_de_viaje;\r\n\r\n                    document.querySelector('.nav-destinos .pasoActivo').classList.remove('pasoActivo');\r\n\r\n\r\n                    let destClicked\r\n                    if (tipoV == 1) {\r\n                        destClicked = 1;\r\n                        document.querySelector('.nav-destinos button:first-child').classList.add('pasoActivo');\r\n                    } else if (tipoV == 2) {\r\n                        destClicked = 2;\r\n                        document.querySelector('.nav-destinos button:nth-child(2)').classList.add('pasoActivo');\r\n                    } else if (tipoV == 3) {\r\n                        destClicked = 3;\r\n                        document.querySelector('.nav-destinos button:last-child').classList.add('pasoActivo');\r\n                    }\r\n                    currentStep = destClicked; // Establecer el paso actual\r\n                    // Ocultar todos los destinos y mostrar solo el destino correspondiente al paso actual\r\n                    $(\"#dest1, #dest2, #dest3\").hide();\r\n                    $(\"#dest\" + destClicked).show();\r\n\r\n                    if (params.data.estatus == 'PND') {\r\n\r\n                        let detalleRutas = await obtnerVuelosId(params.data.cotizar_id);\r\n\r\n                        if (destClicked == 2 || destClicked == 3) {\r\n\r\n                            const idFormFechas = {\r\n                                2: 'rt-fechaIda',\r\n                                3: 'rt-fechaMul'\r\n                            };\r\n\r\n                            const idFormHoras = {\r\n                                2: 'rt-horaIda',\r\n                                3: 'rt-horaMul'\r\n                            };\r\n\r\n                            const idFormPasajeros = {\r\n                                2: 'rt-paxIda',\r\n                                3: 'rt-paxMul'\r\n                            };\r\n\r\n                            const idFromDets = {\r\n                                2: 'cot-detIda',\r\n                                3: 'cot-detMul'\r\n                            };\r\n\r\n                            const idFormOrigen = {\r\n                                2: 'rt-origIda',\r\n                                3: 'rt-origMul'\r\n                            }\r\n\r\n                            const idFormDest = {\r\n                                2: 'rt-destVue',\r\n                                3: 'rt-destinoMul'\r\n                            }\r\n\r\n                            const idFromDet = idFromDets[destClicked] || '';\r\n                            const idFormFecha = idFormFechas[destClicked] || '';\r\n                            const idFormHora = idFormHoras[destClicked] || '';\r\n                            const idFormPasajero = idFormPasajeros[destClicked] || '';\r\n                            const idFormOr = idFormOrigen[destClicked] || '';\r\n                            const idFormDes = idFormDest[destClicked] || '';\r\n\r\n                            for (let i = 1; i < detalleRutas.length; i++) {\r\n                                nuevaRuta();\r\n                            }\r\n\r\n                            const formDestino = document.querySelectorAll(`#fdest${destClicked} .nuevaRuta`);\r\n\r\n                            if (formDestino.length == detalleRutas.length) {\r\n                                formDestino.forEach((ruta, indice) => {\r\n\r\n                                    const idDetalle = detalleRutas[indice].cot_det_id;\r\n                                    const fechaSalida = detalleRutas[indice].fecha_salida;\r\n                                    const horaSalida = detalleRutas[indice].hora_salida;\r\n                                    const pasajeros = detalleRutas[indice].pasajeros;\r\n\r\n                                    const origenId = detalleRutas[indice].origenId;\r\n                                    const origenNombre = detalleRutas[indice].origMun;\r\n\r\n                                    const destinoId = detalleRutas[indice].destinoId;\r\n                                    const destinoNombre = detalleRutas[indice].destMun;\r\n\r\n                                    const inputDetalle = document.querySelector(`#${idFromDet}${indice + 1}`);\r\n                                    const inputFecha = ruta.querySelector(`#${idFormFecha}${indice + 1}`);\r\n                                    const inputHora = ruta.querySelector(`#${idFormHora}${indice + 1}`);\r\n                                    const inputPasajeros = ruta.querySelector(`#${idFormPasajero}${indice + 1}`);\r\n                                    const inputOrigen = ruta.querySelector(`#${idFormOr}${indice + 1} option`);\r\n                                    const inputDestino = ruta.querySelector(`#${idFormDes}${indice + 1} option`);\r\n\r\n                                    inputDetalle.value = idDetalle;\r\n                                    inputFecha.value = fechaSalida;\r\n                                    inputHora.value = horaSalida;\r\n                                    inputPasajeros.value = pasajeros;\r\n                                    inputOrigen.value = origenId;\r\n                                    inputOrigen.text = origenNombre;\r\n                                    inputDestino.value = destinoId;\r\n                                    inputDestino.text = destinoNombre;\r\n                                });\r\n                            }\r\n                        } else if (destClicked == 1) {\r\n                            if (detalleRutas.length > 0) {\r\n                                const idDetalle = detalleRutas[0].cot_det_id;\r\n                                const fechaSalida = detalleRutas[0].fecha_salida;\r\n                                const horaSalida = detalleRutas[0].hora_salida;\r\n                                const pasajeros = detalleRutas[0].pasajeros;\r\n                                const origenId = detalleRutas[0].origenId;\r\n                                const origenNombre = detalleRutas[0].origMun;\r\n                                const destinoId = detalleRutas[0].destinoId;\r\n                                const destinoNombre = detalleRutas[0].destMun;\r\n\r\n                                const inputDetalle = document.querySelector(`#cot-det1`);\r\n                                const inputFecha = document.querySelector(`#rt-fecha1`);\r\n                                const inputHora = document.querySelector(`#rt-hora1`);\r\n                                const inputPasajeros = document.querySelector(`#rt-pax1`);\r\n                                const inputOrigen = document.querySelector(`#rt-origen1 option`);\r\n                                const inputDestino = document.querySelector(`#rt-destino1 option`);\r\n\r\n                                inputDetalle.value = idDetalle;\r\n                                inputFecha.value = fechaSalida;\r\n                                inputHora.value = horaSalida;\r\n                                inputPasajeros.value = pasajeros;\r\n                                inputOrigen.value = origenId;\r\n                                inputOrigen.text = origenNombre;\r\n                                inputDestino.value = destinoId;\r\n                                inputDestino.text = destinoNombre;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                    // CARGAR PASAJEROS\r\n                    let datosPax = await obtenerPax(params.data.cotizar_id);\r\n                    detallePax = datosPax.pasajeros;\r\n                    let paxDoc = datosPax.paxDoc;\r\n\r\n                    for (let i = 0; i < detallePax.length; i++) {\r\n                        nuevoPax();\r\n                    }\r\n\r\n                    const formPax = document.querySelectorAll(`#formPasajeros .cont-pasajero`);\r\n                    if (formPax.length == detallePax.length) {\r\n                        formPax.forEach((ruta, indice) => {\r\n                            const paxId = detallePax[indice].pasajero_id;\r\n                            const paxName = detallePax[indice].nombre;\r\n\r\n                            // const inputPaxId = ruta.querySelector(`#pasajero_id${indice + 1}`);\r\n                            const inputPaxName = ruta.querySelector(`#paxName${indice + 1}`);\r\n\r\n                            // inputPaxId.value = paxId;\r\n                            inputPaxName.value = paxName;\r\n                            inputPaxName.dataset.pax = paxId;\r\n\r\n                            if (paxDoc) {\r\n\r\n                                const documentos = obtenerDocumentosPorPaxId(paxId);\r\n                                // Obtener el contenedor de documentos\r\n                                const contenedorDocs = ruta.querySelector('.contenedor-docs');\r\n\r\n                                // Crear enlaces y agregarlos al DOM\r\n                                documentos.forEach(doc => {\r\n\r\n                                    const enlace = document.createElement('a');\r\n                                    enlace.classList.add('thumbnail');\r\n                                    enlace.href = `/${doc.ruta}/${doc.hash_doc}.${doc.tipo_doc}`;\r\n                                    enlace.setAttribute('target', '_blank'); // Abre el enlace en una nueva pestaña\r\n\r\n                                    const divIcon = document.createElement('DIV');\r\n                                    divIcon.classList.add('fileicon');\r\n\r\n                                    const icon = document.createElement('I');\r\n                                    icon.classList.add('fa-regular', 'fa-file');\r\n\r\n                                    const divName = document.createElement('DIV');\r\n                                    divName.classList.add('filename');\r\n\r\n                                    const name = document.createElement('P');\r\n                                    name.textContent = `${doc.nombre_doc}`;\r\n\r\n                                    divIcon.appendChild(icon);\r\n                                    divName.appendChild(name);\r\n                                    enlace.appendChild(divIcon);\r\n                                    enlace.appendChild(divName);\r\n                                    contenedorDocs.appendChild(enlace);\r\n                                });\r\n                            }\r\n\r\n                        });\r\n                    }\r\n\r\n                    // Función para contar documentos y crear enlaces por paxId\r\n                    function obtenerDocumentosPorPaxId(paxId) {\r\n                        if (paxDoc[paxId]) {\r\n                            if (Array.isArray(paxDoc[paxId])) {\r\n                                return paxDoc[paxId];\r\n                            } else {\r\n                                return [paxDoc[paxId]]; // Si no es un arreglo, convertirlo en un arreglo con un solo elemento\r\n                            }\r\n                        } else {\r\n                            return []; // No hay documentos para el pasajero dado\r\n                        }\r\n                    }\r\n\r\n                    activarRutas();\r\n                    await activarSecciones();\r\n                });\r\n\r\n                const actionContainer = document.createElement('div');\r\n                actionContainer.classList = \"btn-cont centrado\";\r\n                actionContainer.appendChild(editButton);\r\n                $('.pax').prop('disabled', false);\r\n\r\n                return actionContainer;\r\n            },\r\n            width: 150,\r\n            headerClass: 'txt-center',\r\n            cellClass: 'custom-action-cell', // Agregar la clase CSS 'custom-action-cell' a todas las celdas en esta columna\r\n            filter: false\r\n        }\r\n\r\n    ];\r\n    let data = '';\r\n    iniciarTabla(data, columnDefs, '#myGrid');\r\n    obtenerCotizaciones();\r\n    mostrarClienteBroker(1);\r\n}\r\n\r\n// FUNCIONES\r\nasync function resetForm() {\r\n    resetearTabla('#myGrid2', '#searchInput1');\r\n    cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n    $('.nav-destinos button').removeClass('event-none');\r\n    $('#rt-comment').val('');\r\n    $('#inpCliente').hide();\r\n    $('#inpEmpresa').hide();\r\n    $('#estatus').val('');\r\n    setFechaActual('fecha-cot');\r\n    currentStep = 1;\r\n    maxId = 0;\r\n    updateActiveClass();\r\n    $(\".ruta-origen\").removeClass('disabled-element');\r\n    $('#formRelRuta').empty();\r\n    $(\"#dest1, #dest2, #dest3\").hide();\r\n    $(\"#dest\" + currentStep).show();\r\n    $(\"select[name^='rt-orig'], select[name^='rt-dest']\").prop('disabled', true);\r\n    // limpiar pax\r\n    const pax = document.querySelectorAll(`#formPasajeros .cont-pasajero`);\r\n    // Iterar sobre los elementos a partir del segundo elemento\r\n    for (let i = 0; i < pax.length; i++) {\r\n        pax[i].remove(); // Eliminar el elemento\r\n    }\r\n}\r\nasync function mostrarContenedorAltas(estatus) {\r\n\r\n    mostrarClienteBroker(1);\r\n    // PENDIENTE COMBINAR CON ACTIVAR SECCIONES\r\n    if (estatus != 'PND') {\r\n        $(\"#contenedor\").addClass('contenedor--lg');\r\n        $(\"#contenedor\").removeClass('contenedor--md');\r\n        $(\"#cont-comment\").hide();\r\n        $(\"#formTotales\").show();\r\n    } else {\r\n        $(\"#contenedor\").removeClass('contenedor--lg');\r\n        $(\"#contenedor\").addClass('contenedor--md');\r\n        $(\"#cont-comment\").show();\r\n        $(\"#formTotales\").hide();\r\n    }\r\n\r\n    $(\".contenedor-altas\").show();\r\n    await activarSecciones();\r\n}\r\nfunction activarRutas() {\r\n\r\n    // Obtener los valores de los campos\r\n    let aeronaveValue = $('#aeronave_id').val();\r\n    let clienteValue = $('#cliente_id').val();\r\n    let brokerValue = $('#broker_id').val();\r\n\r\n    // Verificar si aeronave_id tiene valor y al menos uno de cliente_id o broker_id tiene valor\r\n    let aeronaveTieneValor = (aeronaveValue != '');\r\n    let clienteOBrokerTieneValor = (clienteValue != '' || brokerValue != '');\r\n\r\n    // Habilitar o deshabilitar los elementos 'rt-orig' y 'rt-dest' según la condición\r\n    $(\"select[name^='rt-orig'], select[name^='rt-dest']\").prop('disabled', !(aeronaveTieneValor && clienteOBrokerTieneValor));\r\n}\r\nasync function activarSecciones() {\r\n\r\n    await deshabilitarElemento('cont-encabezado', 'cont-navegacion', 'cont-rutas', 'cont-detalle', 'costeo-pasajeros', 'costeo-relacion');\r\n    let estatus = $(\"#estatus\").val();\r\n    $('#btnServicio').hide();\r\n    $('#costeo-relacion').hide();\r\n\r\n    if (!estatus) {\r\n        $('#cont-navegacion').show();\r\n        $('#cont-rutas').show();\r\n        $('#cont-detalle').hide();\r\n        $('#cont-pax').hide();\r\n        $('#costeo-pasajeros').hide();\r\n        habilitarElemento('cont-encabezado', 'cont-navegacion', 'cont-rutas', 'cont-comment');\r\n    } else if (estatus == 'PND') {\r\n        $(\".ruta-origen\").addClass('disabled-element');\r\n        await habilitarElemento('cont-navegacion', 'cont-rutas');\r\n        $('#cont-detalle').hide();\r\n        $('#cont-pax').hide();\r\n    } else if (estatus == 'CTZ') {\r\n        habilitarElemento('costeo-pasajeros', 'cont-detalle', 'costeo-pasajeros', 'costeo-relacion');\r\n        $('#cont-detalle').show();\r\n        $('#cont-pax').show();\r\n        $('#cont-navegacion').hide();\r\n        $('#cont-rutas').hide();\r\n        $('#btnServicio').show();\r\n        $('#costeo-pasajeros').show();\r\n        $('#costeo-relacion').show();\r\n    } else if (estatus == 'SVC') {\r\n        habilitarElemento('cont-detalle',);\r\n        $('#cont-detalle').show();\r\n        $('#cont-pax').show();\r\n        $('#cont-navegacion').hide();\r\n        $('#cont-rutas').hide();\r\n        $('#costeo-pasajeros').show();\r\n        $('#costeo-relacion').show();\r\n    } else if (estatus == 'CMP') {\r\n        habilitarElemento('cont-detalle');\r\n        $('#cont-detalle').show();\r\n        $('#cont-pax').show();\r\n        $('#cont-navegacion').hide();\r\n        $('#cont-rutas').hide();\r\n        $('#costeo-pasajeros').show();\r\n    }\r\n\r\n    if (estatus == 'CTZ' || estatus == 'SVC' || estatus == 'CMP') {\r\n        configTablaCrear();\r\n    }\r\n}\r\nasync function configTablaCrear() {\r\n    let aeropuerto = await obtenerAeropuertos();\r\n    let categoria = await obtenerCategorias();\r\n\r\n    let columnDefs = [\r\n        {\r\n            headerName: 'Id',\r\n            field: 'cot_det_id',\r\n            width: 60,\r\n        },\r\n        {\r\n            headerName: 'Fecha',\r\n            field: \"fecha_salida\",\r\n            width: 100,\r\n            cellEditor: 'agDateCellEditor',\r\n            valueFormatter: function (params) {\r\n                let fecha = params.value;\r\n                if (fecha) {\r\n                    return formatearFecha(fecha);\r\n                }\r\n                return null;\r\n            },\r\n        },\r\n        {\r\n            headerName: 'Hora',\r\n            field: \"hora_salida\",\r\n            width: 75,\r\n            columnGroupShow: \"open\",\r\n            valueFormatter: function (params) {\r\n\r\n                if (params.value !== null && params.value !== undefined) {\r\n                    const hora = params.value;\r\n                    let horas = 0;\r\n                    let minutos = 0;\r\n                    if (hora) {\r\n                        if (hora.includes(':')) {\r\n                            const partes = hora.split(':');\r\n\r\n                            horas = partes[0];\r\n                            minutos = partes[1];\r\n                        } else {\r\n                            horas = hora;\r\n                        }\r\n                    } else {\r\n                        horas = hora;\r\n                    }\r\n                    // Convertir el valor numérico a horas y minutos\r\n                    const hrsNum = parseFloat(horas);\r\n                    const minNum = parseFloat(minutos);\r\n\r\n                    const horaFormateada = `${hrsNum.toString().padStart(2, '0')}:${minNum.toString().padStart(2, '0')}`;\r\n                    const horaRegex = /^(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9])$/;\r\n\r\n                    if (horaRegex.test(horaFormateada)) {\r\n                        return horaFormateada; // Devolver la hora formateada si es válida\r\n                    } else {\r\n                        return '00:00'; // Devolver un valor por defecto si el formato no es válido\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            },\r\n        },\r\n        {\r\n            headerName: 'Categoria',\r\n            field: 'categoria',\r\n            width: 95,\r\n            cellEditor: 'agSelectCellEditor',\r\n            editable: false,\r\n            cellEditorParams: {\r\n                values: ['', ...categoria.map(a => ({ categoria_id: a.categoria_id, nombre: a.nombre }))],\r\n            },\r\n            valueFormatter: function (params) {\r\n                if (params.value) {\r\n                    return params.value.nombre;\r\n                }\r\n            },\r\n            valueGetter: function (params) {\r\n                return params.data.categoria ? params.data.categoria.nombre : '';\r\n            },\r\n            valueSetter: function (params) {\r\n                params.data.categoria = params.newValue;\r\n                return true;\r\n            },\r\n        },\r\n        {\r\n            headerName: 'Concepto',\r\n            field: 'concepto',\r\n            width: 160,\r\n        },\r\n        {\r\n            headerName: 'Origen',\r\n            field: 'origen',\r\n            width: 120,\r\n            editable: false,\r\n            cellEditor: 'agSelectCellEditor',\r\n            cellEditorParams: {\r\n                values: ['', ...aeropuerto.map(a => ({ aeropuerto_id: a.aeropuerto_id, municipio: a.municipio }))],\r\n            },\r\n            valueFormatter: function (params) {\r\n                if (params.value) {\r\n                    return params.value.municipio;\r\n                }\r\n            },\r\n            valueGetter: function (params) {\r\n                return params.data.origen ? params.data.origen.municipio : '' // Debe devolver el objeto seleccionado\r\n            },\r\n            valueSetter: function (params) {\r\n                params.data.origen = params.newValue;\r\n                return true;\r\n            },\r\n        },\r\n        {\r\n            headerName: 'Destino',\r\n            field: 'destino',\r\n            width: 120,\r\n            editable: false,\r\n            cellEditor: 'agSelectCellEditor',\r\n            cellEditorParams: {\r\n                values: ['', ...aeropuerto.map(a => ({ aeropuerto_id: a.aeropuerto_id, municipio: a.municipio }))],\r\n            },\r\n            valueFormatter: function (params) {\r\n                if (params.value) return params.value.municipio;\r\n            },\r\n            valueParser: function (params) {\r\n                if (params.value) return { aeropuerto_id: params.value.aeropuerto_id, municipio: params.value.municipio };\r\n            },\r\n            valueGetter: function (params) {\r\n                return params.data.destino ? params.data.destino.municipio : '' // Debe devolver el objeto seleccionado\r\n            },\r\n            cellClassRules: {\r\n                'event-none': params => {\r\n                    // Verificar si cot_det_id tiene un valor\r\n                    const cotDetIdValue = params.data.cot_det_id;\r\n                    return cotDetIdValue !== undefined && cotDetIdValue !== null && cotDetIdValue !== '';\r\n                }\r\n            },\r\n        },\r\n        {\r\n            headerName: 'pax',\r\n            field: 'pax',\r\n            width: 60,\r\n        },\r\n        {\r\n            headerName: 'Tipo',\r\n            field: 'tipo_vuelo',\r\n            width: 80,\r\n            cellEditorParams: {\r\n                values: ['N', 'I'], // Valores disponibles en el select: 'I' para Internacional y 'N' para Nacional\r\n            },\r\n            valueFormatter: function (params) {\r\n                const tipoVuelo = params.value;\r\n\r\n                // Mapear el valor 'I' a 'Internacional' y 'N' a 'Nacional'\r\n                if (tipoVuelo === 'I') {\r\n                    return 'Internacional';\r\n                } else if (tipoVuelo === 'N') {\r\n                    return 'Nacional';\r\n                }\r\n\r\n                // Retornar el valor original si no coincide con 'I' o 'N'\r\n                return tipoVuelo;\r\n            },\r\n        },\r\n        {\r\n            headerName: 'Cant',\r\n            field: 'cantidad',\r\n            width: 80,\r\n        },\r\n        {\r\n            headerName: 'Tarifa',\r\n            field: 'tarifa',\r\n            width: 100,\r\n            editable: true,\r\n            cellStyle: { textAlign: 'right' }, // Alinea los datos a la derecha\r\n            cellEditor: 'agNumberCellEditor',\r\n            valueFormatter: function (params) {\r\n                if (params.value) {\r\n                    // Formatea el número con comas como separadores de miles y dos decimales\r\n                    return Number(params.value).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n                }\r\n            }\r\n        },\r\n        {\r\n            headerName: 'Subtotal',\r\n            field: 'subtotal',\r\n            width: 100,\r\n            cellStyle: { textAlign: 'right' }, // Alinea los datos a la derecha\r\n            valueFormatter: function (params) {\r\n                if (params.value) {\r\n                    // Formatea el número con comas como separadores de miles y dos decimales\r\n                    return Number(params.value).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n                }\r\n            }\r\n        },\r\n        {\r\n            headerName: 'Relacion Ruta',\r\n            field: 'rel_ruta',\r\n            width: 80,\r\n            // hide: true,\r\n        },\r\n        {\r\n            headerName: 'Relacion',\r\n            field: 'relaciones_id',\r\n            width: 80,\r\n            // hide: true,\r\n        },\r\n        {\r\n            headerName: 'LineID',\r\n            field: 'line_id',\r\n            width: 80,\r\n        },\r\n\r\n    ];\r\n\r\n    let data = '';\r\n    iniciarTabla(data, columnDefs, '#myGrid2');\r\n    await traerDetalle();\r\n    ordenarPorCategoria()\r\n}\r\nasync function updateActiveClass() {\r\n    $(\".nav-destinos button\").removeClass(\"pasoActivo\");\r\n    $(\".dest\" + currentStep).addClass(\"pasoActivo\");\r\n    await cerrarVentana('', ['#fdest1', '#fdest2']);\r\n\r\n    // Ida\r\n    $(\"#rt-origen1 option\").text('Origen');\r\n    $(\"#rt-destino1 option\").text('Destino');\r\n\r\n    // Ida y Vuelta\r\n    $(\"#rt-origIda1 option\").text('Origen');\r\n    $(\"#rt-origIda2 option\").text('Destino');\r\n    $(\"#rt-destVue1 option\").text('Destino');\r\n    $(\"#rt-destVue2 option\").text('Destino');\r\n    // Multidestino\r\n    const opcMulti = document.querySelectorAll(`#fdest3 .nuevaRuta`);\r\n    // Iterar sobre los elementos a partir del segundo elemento\r\n    for (let i = 1; i < opcMulti.length; i++) {\r\n        opcMulti[i].remove(); // Eliminar el elemento\r\n    }\r\n    $(\"#rt-origMul1 option\").text('Origen');\r\n    $(\"#rt-destinoMul1 option\").text('Destino');\r\n}\r\nasync function obtenerRutPaxCot(id) {\r\n    try {\r\n\r\n        const datos = new FormData();\r\n        datos.append('cotizar_id', id);\r\n\r\n        const respuesta = await fetch('../obtener/rutPaxCot', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        return data;\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\nasync function relRutasPax(toggleRelRuta, params) {\r\n\r\n    if (toggleRelRuta.classList.contains('expanded')) return;\r\n\r\n    // Obtener los pasajeros guardados por ruta y cotización\r\n    let detRutPax = await obtenerRutPaxCot($(\"#cotizar_id\").val());\r\n\r\n    // Agrupar los pasajeros por ruta\r\n    let pasajerosPorRuta = detRutPax.reduce((acc, pax) => {\r\n        if (!acc[pax.ruta_id]) {\r\n            acc[pax.ruta_id] = [];\r\n        }\r\n        acc[pax.ruta_id].push(pax);\r\n        return acc;\r\n    }, {});\r\n\r\n    // Crear un objeto para mantener un registro de los pasajeros seleccionados por ruta\r\n    let pasajerosSeleccionadosPorRuta = {};\r\n\r\n    gridApi.forEachNode(function (nodo) {\r\n        if (nodo.data.categoria && nodo.data.categoria.nombre == 'Ruta') {\r\n\r\n            let pRuta = document.createElement('p');\r\n            pRuta.textContent = `Ruta: ${nodo.data.concepto}`;\r\n            pRuta.classList.add(\"rel-ruta\");\r\n            pRuta.setAttribute('data-id', nodo.data.cot_det_id); // Asumiendo que nodo.data.id es el ID de la ruta\r\n\r\n            // Crear el elemento select\r\n            let selectPasajeros = document.createElement('select');\r\n            selectPasajeros.name = `seleccion-${nodo.data.cot_det_id}`;\r\n\r\n            // Obtener el formulario de pasajeros\r\n            let formPasajeros = document.getElementById('formPasajeros');\r\n\r\n            // Encontrar todos los elementos de pasajeros dentro del formulario\r\n            let pasajerosElements = formPasajeros.querySelectorAll('.cont-pasajero [data-pax]');\r\n\r\n            let optionEmpty = document.createElement('option');\r\n            optionEmpty.value = ''; // Valor vacío para la opción\r\n            optionEmpty.textContent = 'Agrega un pasajero'; // Texto vacío para la opción\r\n            optionEmpty.disabled = true; // Deshabilitar la opción vacía\r\n            optionEmpty.selected = true; // Seleccionar la opción vacía\r\n            selectPasajeros.appendChild(optionEmpty); // Agregar la opción vacía al inicio del select\r\n\r\n            // Iterar sobre los elementos de pasajeros y agregarlos al select\r\n            pasajerosElements.forEach(pasajeroElement => {\r\n                let nombrePasajero = $(`#${pasajeroElement.id}`).val();\r\n                let idPasajero = $(`#${pasajeroElement.id}`).data('pax');\r\n                let option = document.createElement('option');\r\n                option.value = nombrePasajero; // Valor del pasajero\r\n                option.textContent = nombrePasajero; // Texto del pasajero\r\n                option.setAttribute('data-pax', idPasajero); // Añadir atributo data-pax con el ID del pasajero\r\n                selectPasajeros.appendChild(option);\r\n            });\r\n\r\n            // Manejar el evento change del select\r\n            selectPasajeros.addEventListener('change', function () {\r\n                let pasajeroSeleccionado = selectPasajeros.value;\r\n                let idPasajeroSeleccionado = selectPasajeros.options[selectPasajeros.selectedIndex].getAttribute('data-pax');\r\n\r\n                // Obtener el ID de la ruta actual\r\n                let idRuta = pRuta.getAttribute('data-id');\r\n\r\n                // Verificar si ya existe un registro para la ruta actual\r\n                if (!pasajerosSeleccionadosPorRuta[idRuta]) {\r\n                    // Si no existe, crear un array vacío para almacenar los pasajeros seleccionados\r\n                    pasajerosSeleccionadosPorRuta[idRuta] = [];\r\n                }\r\n\r\n                console.log(pasajerosSeleccionadosPorRuta);\r\n\r\n                // Verificar si el pasajero ya ha sido seleccionado para esta ruta\r\n                if (pasajerosSeleccionadosPorRuta[idRuta].includes(idPasajeroSeleccionado)) {\r\n                    // Si el pasajero ya existe, mostrar un mensaje de error o realizar la acción correspondiente\r\n                    console.log('¡Este pasajero ya ha sido seleccionado para esta ruta!');\r\n                    selectPasajeros.value = '';\r\n                    return; // Detener el proceso\r\n                }\r\n\r\n                // Agregar el pasajero al registro de la ruta actual\r\n                pasajerosSeleccionadosPorRuta[idRuta].push(idPasajeroSeleccionado);\r\n\r\n                let pasajeroElemento = document.createElement('p');\r\n                pasajeroElemento.textContent = `Pasajero: ${pasajeroSeleccionado}`;\r\n                pasajeroElemento.setAttribute('data-paxid', idPasajeroSeleccionado); // Añadir atributo data-pax al elemento p\r\n\r\n                // Insertar el elemento p antes del selectPasajeros\r\n                pRuta.insertBefore(pasajeroElemento, selectPasajeros);\r\n\r\n                // Restablecer el select a la opción vacía\r\n                selectPasajeros.value = '';\r\n            });\r\n\r\n            // Agregar el select al elemento pRuta\r\n            pRuta.appendChild(selectPasajeros);\r\n\r\n            // Agregar el elemento p al formulario 'formRelRuta'\r\n            document.getElementById('formRelRuta').appendChild(pRuta);\r\n\r\n            // Rellenar los datos si ya existen para esta ruta\r\n            if (pasajerosPorRuta[nodo.data.cot_det_id]) {\r\n                pasajerosPorRuta[nodo.data.cot_det_id].forEach(pax => {\r\n\r\n                    let pasajeroElemento = document.createElement('p');\r\n                    pasajeroElemento.textContent = `Pasajero: ${pax.nombre}`;\r\n                    pasajeroElemento.setAttribute('data-paxid', pax.pasajero_id); // Añadir atributo data-pax al elemento p\r\n\r\n                    // Insertar el elemento p antes del selectPasajeros\r\n                    pRuta.insertBefore(pasajeroElemento, selectPasajeros);\r\n\r\n                    // Marcar la opción como seleccionada en el select\r\n                    let optionToSelect = Array.from(selectPasajeros.options).find(option => option.getAttribute('data-pax') == pax.pasajero_id);\r\n                    if (optionToSelect) {\r\n                        optionToSelect.selected = true;\r\n                    }\r\n\r\n                    // Agregar el pasajero al registro de la ruta actual\r\n                    if (!pasajerosSeleccionadosPorRuta[nodo.data.cot_det_id]) {\r\n                        pasajerosSeleccionadosPorRuta[nodo.data.cot_det_id.toString()] = [];\r\n                    }\r\n                    pasajerosSeleccionadosPorRuta[nodo.data.cot_det_id].push(pax.pasajero_id.toString());\r\n                });\r\n\r\n                console.log(pasajerosSeleccionadosPorRuta);\r\n            }\r\n        }\r\n    });\r\n}\r\nasync function ordenarPorCategoria() {\r\n    const allData = [];\r\n    const rutaRows = [];\r\n    const aterrizajeRows = [];\r\n    const pernoctaRows = [];\r\n    const otrasCategoriasRows = [];\r\n\r\n    // const categorias = obtenerCategorias();\r\n\r\n    // Iterar sobre todas las filas de datos en la tabla\r\n    gridApi.forEachNode(node => {\r\n        const rowData = node.data;\r\n        allData.push(rowData);\r\n\r\n        // Clasificar las filas en diferentes arreglos segun la categoria\r\n        if (rowData.categoria) {\r\n            if (rowData.categoria.nombre == 'Ruta') {\r\n                rutaRows.push(rowData);\r\n            } else if (rowData.categoria && rowData.categoria.nombre == 'Pernocta') {\r\n                pernoctaRows.push(rowData);\r\n            } else if (rowData.categoria && rowData.categoria.nombre == 'Aterrizaje') {\r\n                aterrizajeRows.push(rowData);\r\n            } else {\r\n                // Cualquier otra categoría\r\n                otrasCategoriasRows.push(rowData);\r\n            }\r\n        }\r\n    });\r\n\r\n    // Concatenar todas las filas en el nuevo orden deseado\r\n    let sortedRows = [...rutaRows, ...pernoctaRows, ...aterrizajeRows, ...otrasCategoriasRows];\r\n    sortedRows.push({});\r\n\r\n    if (sortedRows.length < 9) {\r\n        const numObjetosVacios = 8;\r\n        const arreglo2 = Array(numObjetosVacios - sortedRows.length).fill({});\r\n        const arregloCombinado = sortedRows.concat(arreglo2);\r\n        const nuevosDatosClonados = arregloCombinado.map(obj => ({ ...obj }));\r\n        gridApi.updateGridOptions({ rowData: nuevosDatosClonados })\r\n    } else {\r\n        gridApi.updateGridOptions({ rowData: sortedRows })\r\n    }\r\n\r\n}\r\n\r\n// FETCH\r\nasync function obtenerCotizaciones() {\r\n    try {\r\n        const respuesta = await fetch('../obtener/cotizaciones', {\r\n            method: 'GET',\r\n        });\r\n        const data = await respuesta.json();\r\n\r\n        let convert = verificarArray(data);\r\n        gridApi.setGridOption('rowData', convert);\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalToast('warning', 'Error al obtener las Cotizaciones', 2500);\r\n    }\r\n}\r\nfunction actTotalesLineold(rowData) {\r\n    // Tasa Aterrizaje \r\n    const tarifaAterrizaje = parseFloat(rowData.tarifa_aterrizaje || 0);\r\n    const tarifaTerrestre = parseFloat(rowData.tarifa_ser_terrestre || 0);\r\n    const tarifaAuxiliares = parseFloat(rowData.tarifa_ser_auxiliares || 0);\r\n    let totTarTerr = tarifaAterrizaje + tarifaTerrestre + tarifaAuxiliares;\r\n    rowData.total_costos = totTarTerr;\r\n\r\n    // SubTotal\r\n    const tiempoEstimado = parseFloat(rowData.hora_cotizada || 0);\r\n    let pernocta = parseFloat(rowData.pernocta || 0);\r\n    const costoTarifa = parseFloat(rowData.costo || 0);\r\n\r\n    let subT = (tiempoEstimado * costoTarifa) + (pernocta * costoTarifa);\r\n    subT = subT + totTarTerr;\r\n    rowData.subtotal = subT;\r\n\r\n    gridApi.applyTransaction({ update: [rowData] });\r\n}\r\nfunction actTotalesLine(rowData) {\r\n\r\n    if (!rowData) return\r\n\r\n    const lineaAct = rowData.line_id;\r\n\r\n    gridApi.forEachNode(node => {\r\n        if (node.data.line_id === lineaAct && node.data.categoria) {\r\n\r\n            const categoria = node.data.categoria.nombre;\r\n            const pernocta = node.data.percost;\r\n            const cantidad = node.data.cantidad;\r\n            const tarifa = node.data.tarifa;\r\n            let subtotal = 0;\r\n\r\n            if (categoria == 'Ruta') {\r\n                subtotal = cantidad * tarifa;\r\n            } else if (categoria == 'Pernocta') {\r\n                subtotal = (cantidad * pernocta) * tarifa;\r\n            } else if (categoria == 'Aterrizaje') {\r\n                subtotal = tarifa;\r\n            } else {\r\n                subtotal = cantidad * tarifa;\r\n            }\r\n\r\n            // Actualizar el subtotal en el nodo de datos\r\n            node.setDataValue('subtotal', subtotal);\r\n        }\r\n        // Refrescar las celdas para mostrar los nuevos subtotales\r\n        gridApi.refreshCells({ force: true });\r\n    });\r\n}\r\nfunction actTotales() {\r\n\r\n    // Actualizar Totales Generales\r\n    let cantPernoctas = 0;\r\n    let totPernoctas = 0;\r\n    let cantHoras = 0;\r\n    let totalHoras = 0;\r\n    let subtotalInpt = 0;\r\n\r\n    let subtNac = 0;\r\n    let subtInt = 0;\r\n    let ivaNac = 0;\r\n    let ivaInt = 0;\r\n\r\n    // Iterar sobre todas las filas de la tabla\r\n    gridApi.forEachNode(node => {\r\n        const hr_cant = parseFloat(node.data.cantidad || 0);\r\n        const subtotal = parseFloat(node.data.subtotal || 0);\r\n\r\n        if (node.data.categoria && node.data.categoria.nombre == 'Pernocta') {\r\n            cantPernoctas += hr_cant;\r\n            totPernoctas += subtotal;\r\n        }\r\n\r\n        if (node.data.categoria && node.data.categoria.nombre == 'Ruta') {\r\n            cantHoras += hr_cant;\r\n            totalHoras += subtotal;\r\n        }\r\n\r\n        subtotalInpt += subtotal;\r\n\r\n        if (node.data.tipo_vuelo == 'N') {\r\n            subtNac += subtotal;\r\n        } else if (node.data.tipo_vuelo == 'I') {\r\n            subtInt += subtotal;\r\n        }\r\n\r\n    });\r\n\r\n    ivaNac = subtNac * 0.16;\r\n    ivaInt = subtInt * 0.04;\r\n\r\n    // Actualizar el valor del input 'cant_hrs'\r\n    $('#cant_pernocta').val(cantPernoctas);\r\n    $('#tot_pernocta').val(totPernoctas);\r\n    $('#cant_hrs').val(cantHoras);\r\n    $('#tot_hrs').val(totalHoras);\r\n    $('#subtotal').val(subtotalInpt);\r\n    $('#ivaNac').val(ivaNac);\r\n    $('#ivaInt').val(ivaInt);\r\n    $('#total').val(subtotalInpt + ivaNac + ivaInt);\r\n}\r\nasync function obtenerAeronaves() {\r\n    try {\r\n        const respuesta = await fetch('../allAeronaves', {\r\n            method: 'GET'\r\n        });\r\n        const data = await respuesta.json();\r\n\r\n        if (!data.length > 0) SwalToast('warning', 'No hay Aeronaves disponibles.', 2500);\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\nasync function obtenerBroker() {\r\n    try {\r\n        const respuesta = await fetch('../brokers/activas', {\r\n            method: 'GET'\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        if (!data.length > 0) { SwalToast('warning', 'No hay Programas disponibles.', 2500); }\r\n        else {\r\n            BROKERS = data;\r\n        }\r\n\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\nasync function obtenerClientes() {\r\n    try {\r\n        const respuesta = await fetch('../allClientes', {\r\n            method: 'GET'\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        if (!data.length > 0) SwalToast('warning', 'No hay Clientes disponibles.', 2500);\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\nasync function obtenerAeropuertos() {\r\n    try {\r\n        const respuesta = await fetch('../allAeropuertos', {\r\n            method: 'GET'\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n        if (!data.length > 0) {\r\n            SwalToast('warning', 'No hay Aeropuertos disponibles.', 2500);\r\n        } else {\r\n            AEROPUERTOS = data;\r\n        }\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\nasync function obtenerPax(id) {\r\n    try {\r\n        const datos = new FormData();\r\n        datos.append('cotizar_id', id);\r\n\r\n        const respuesta = await fetch('../obtener/pax', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n        const data = await respuesta.json();\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\nasync function obtenerPasajeros() {\r\n    try {\r\n\r\n        const respuesta = await fetch('../obtener/pasajeros', {\r\n            method: 'get',\r\n        });\r\n        const data = await respuesta.json();\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\n// Función para manejar el evento mousedown\r\nasync function mostrarListaOrigen(event) {\r\n    event.preventDefault();\r\n    if (AEROPUERTOS == '') { let data = await obtenerAeropuertos(); }\r\n    // Obtener el número del vuelo\r\n    let flightNumber = $(this).attr('id').replace('rt-origMul', '');\r\n    // Mostrar el elemento de búsqueda de origen correspondiente\r\n    $(`.origSchMul${flightNumber}`).show();\r\n    $(`.inOrigSrchMul${flightNumber}`).focus();\r\n    const listSearch = await mostrarListaSearch(AEROPUERTOS, `.origSchMul${flightNumber}`, 'aeropuerto_id', 'municipio');\r\n    if (listSearch) {\r\n        let slcActivo = this.parentNode.parentNode.parentNode;\r\n        existeRuta(slcActivo);\r\n        activarRutas();\r\n\r\n    }\r\n}\r\nasync function mostrarListaDestino(event) {\r\n    event.preventDefault();\r\n    if (AEROPUERTOS == '') { let data = await obtenerAeropuertos(); }\r\n    // Obtener el número del vuelo\r\n    let flightNumber = $(this).attr('id').replace('rt-destinoMul', '');\r\n    $(`.destSrchMul${flightNumber}`).show();\r\n    $(`.inDestgSrchMul${flightNumber}`).focus();\r\n    const listSearch = await mostrarListaSearch(AEROPUERTOS, `.destSrchMul${flightNumber}`, 'aeropuerto_id', 'municipio');\r\n    if (listSearch) {\r\n        let slcActivo = this.parentNode.parentNode.parentNode;\r\n        existeRuta(slcActivo);\r\n        activarRutas();\r\n    }\r\n}\r\n// validar rutas por formulario \r\nfunction validarRutas(idForm) {\r\n\r\n    let isEmpty = false;\r\n    let form = document.getElementById(idForm);\r\n    let inputs = form.querySelectorAll('select, input[type=\"date\"]');\r\n\r\n    let elementsWithErrors = form.querySelectorAll('.errorRuta');\r\n    // Iterar sobre cada elemento y eliminar la clase 'errorRuta'\r\n    elementsWithErrors.forEach(function (element) {\r\n        element.classList.remove('errorRuta');\r\n    });\r\n\r\n    // Iterar sobre cada elemento\r\n    inputs.forEach(function (input) {\r\n        // Verificar si el campo está vacío\r\n        if (!input.value.trim()) {\r\n            if (input.tagName == 'SELECT') {\r\n                input.parentNode.parentNode.parentNode.classList.add('errorRuta');\r\n            } else if (input.tagName == 'INPUT') {\r\n                input.classList.add('errorRuta');\r\n            }\r\n            isEmpty = true;\r\n        }\r\n    });\r\n\r\n    return isEmpty;\r\n}\r\n\r\nasync function obtenerRutas() {\r\n    let botonActivo = $('.nav-destinos').find('.pasoActivo');\r\n    let indiceBotonActivo = $('.nav-destinos button').index(botonActivo);\r\n\r\n    if (indiceBotonActivo === 0) {\r\n        if (validarRutas('fdest1')) return;\r\n\r\n        let form = '#fdest1';\r\n        let rutas = [];\r\n\r\n        const formDestino = document.querySelectorAll(`${form} .nuevaRuta`);\r\n\r\n        // Usar Promise.all para esperar a que todas las llamadas a obtenerCodigosIATA se completen\r\n        await Promise.all(Array.from(formDestino).map(async (ruta, indice) => {\r\n            let idDet = ruta.querySelector('input[id^=\"cot-det\"]');\r\n            idDet = idDet.getAttribute('id');\r\n            idDet = $(`#${idDet}`).val();\r\n            let origen = ruta.querySelector('select[id^=\"rt-origen\"]').value;\r\n            let destino = ruta.querySelector('select[id^=\"rt-destino\"]').value;\r\n            let fecha = ruta.querySelector('input[id^=\"rt-fecha\"]').value;\r\n            let pax = ruta.querySelector('input[id^=\"rt-pax\"]').value;\r\n            let hora = ruta.querySelector('input[id^=\"rt-hora\"]').value;\r\n\r\n            let cod = await obtenerCodigosIATA(origen, destino);\r\n\r\n            let rutaActual = {\r\n                line_id: indice + 1,\r\n                categoria_id: 1,\r\n                concepto: cod,\r\n                cot_det_id: idDet,\r\n                origen: origen,\r\n                destino: destino,\r\n                fecha_salida: fecha,\r\n                pasajeros: pax,\r\n                hora_salida: hora,\r\n            }\r\n\r\n            rutas.push(rutaActual);\r\n        }));\r\n\r\n        return rutas;\r\n    } else if (indiceBotonActivo === 1) {\r\n        if (validarRutas('fdest2')) return;\r\n\r\n        let form = '#fdest2';\r\n        let rutas = [];\r\n\r\n        const formDestino = document.querySelectorAll(`${form} .nuevaRuta`);\r\n\r\n        await Promise.all(Array.from(formDestino).map(async (ruta, indice) => {\r\n            let idDet = ruta.querySelector('input[id^=\"cot-detIda\"]');\r\n            idDet = idDet.getAttribute('id');\r\n            idDet = $(`#${idDet}`).val();\r\n            let origen = ruta.querySelector('select[id^=\"rt-origIda\"]').value;\r\n            let destino = ruta.querySelector('select[id^=\"rt-destVue\"]').value;\r\n            let fecha = ruta.querySelector('input[id^=\"rt-fechaIda\"]').value;\r\n            let pax = ruta.querySelector('input[id^=\"rt-paxIda\"]').value;\r\n            let hora = ruta.querySelector('input[id^=\"rt-horaIda\"]').value;\r\n\r\n            let cod = await obtenerCodigosIATA(origen, destino);\r\n\r\n            let rutaActual = {\r\n                line_id: indice + 1,\r\n                categoria_id: 1,\r\n                concepto: cod,\r\n                cot_det_id: idDet,\r\n                origen: origen,\r\n                destino: destino,\r\n                fecha_salida: fecha,\r\n                pasajeros: pax,\r\n                hora_salida: hora,\r\n            }\r\n\r\n            rutas.push(rutaActual);\r\n        }));\r\n\r\n        return rutas;\r\n    } else if (indiceBotonActivo === 2) {\r\n        if (validarRutas('fdest3')) return;\r\n\r\n        let form = '#fdest3';\r\n        let rutas = [];\r\n\r\n        const formDestino = document.querySelectorAll(`${form} .nuevaRuta`);\r\n\r\n        await Promise.all(Array.from(formDestino).map(async (ruta, indice) => {\r\n            let idDet = ruta.querySelector('input[id^=\"cot-detMul\"]');\r\n            idDet = idDet.getAttribute('id');\r\n            idDet = $(`#${idDet}`).val();\r\n            let origen = ruta.querySelector('select[id^=\"rt-origMul\"]').value;\r\n            let destino = ruta.querySelector('select[id^=\"rt-destinoMul\"]').value;\r\n            let fecha = ruta.querySelector('input[id^=\"rt-fechaMul\"]').value;\r\n            let pax = ruta.querySelector('input[id^=\"rt-paxMul\"]').value;\r\n            let hora = ruta.querySelector('input[id^=\"rt-horaMul\"]').value;\r\n\r\n            let cod = await obtenerCodigosIATA(origen, destino);\r\n\r\n            let rutaActual = {\r\n                line_id: indice + 1,\r\n                categoria_id: 1,\r\n                concepto: cod,\r\n                cot_det_id: idDet,\r\n                origen: origen,\r\n                destino: destino,\r\n                fecha_salida: fecha,\r\n                pasajeros: pax,\r\n                hora_salida: hora,\r\n            }\r\n\r\n            rutas.push(rutaActual);\r\n        }));\r\n\r\n        return rutas;\r\n    }\r\n}\r\nasync function obtenerDocsbyPax(id) {\r\n\r\n    try {\r\n\r\n        const datos = new FormData();\r\n        datos.append('pasajero_id', id);\r\n\r\n        const respuesta = await fetch('../obtener/pasajerosDocs', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n        // if (!data.length > 0) SwalToast('warning', 'No hay Documentos disponibles.', 2500);\r\n\r\n        return data\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}\r\nasync function obtnerVuelosId(id) {\r\n    try {\r\n        const datos = new FormData();\r\n        datos.append('cotizar_id', id);\r\n\r\n        const respuesta = await fetch('../obtener/vuelos', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n        const data = await respuesta.json();\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\nasync function obtenerTasaAterrizaje(origenVal, aeronave) {\r\n    try {\r\n        const datos = new FormData();\r\n        datos.append('origen', origenVal);\r\n        datos.append('aeronave_id', aeronave);\r\n\r\n        const respuesta = await fetch('../valida/aterrizaje', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalToast('warning', 'Error al obtener los usuarios', 2500);\r\n    }\r\n}\r\nasync function obtenerCategorias() {\r\n    try {\r\n        const respuesta = await fetch('../obtener/categorias', {\r\n            method: 'GET'\r\n        });\r\n        const data = await respuesta.json();\r\n        if (!data.length > 0) {\r\n            SwalToast('warning', 'No hay Categorias disponibles.', 2500);\r\n        }\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\nasync function validaRutaTarifa(origenVal, destinoVal) {\r\n    try {\r\n        let cliente = $('#cliente_id').val();\r\n        let broker = $('#broker_id').val();\r\n        const aeronave = $('#aeronave_id').val();\r\n\r\n        const datos = new FormData();\r\n        datos.append('origen', origenVal);\r\n        datos.append('destino', destinoVal);\r\n        datos.append('cliente_id', cliente);\r\n        datos.append('broker_id', broker);\r\n        datos.append('aeronave_id', aeronave);\r\n\r\n        const respuesta = await fetch('../valida/ruta', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalToast('warning', 'Error al obtener los usuarios', 2500);\r\n    }\r\n}\r\nfunction mostrarClienteBroker(opcionSeleccionada) {\r\n    $('#inpCliente').toggle(opcionSeleccionada == 1);\r\n    $('#inpEmpresa').toggle(opcionSeleccionada == 2);\r\n\r\n    if (opcionSeleccionada == 1) {\r\n        $(\"label[for='cliente_id']\").addClass(\"labelImportant\");\r\n        $(\"label[for='broker_id']\").removeClass(\"labelImportant\");\r\n        $(\"select[id='broker_id'] option\").val(\"\");\r\n        $(\"select[id='broker_id'] option\").text(\"\");\r\n    } else if (opcionSeleccionada == 2) {\r\n        $(\"label[for='broker_id']\").addClass(\"labelImportant\");\r\n        $(\"label[for='cliente_id']\").removeClass(\"labelImportant\");\r\n        $(\"#rt-responsable\").val(\"\");\r\n        $(\"select[id='cliente_id'] option\").val(\"\");\r\n        $(\"select[id='cliente_id'] option\").text(\"\");\r\n    }\r\n}\r\nfunction nuevaRuta() {\r\n\r\n    let form = document.getElementById('fdest3');\r\n    let flightCount = form.querySelectorAll('.ruta-origen').length;\r\n\r\n    // Actualizar maxId si flightCount es mayor\r\n    if (flightCount > maxId) {\r\n        maxId = flightCount;\r\n    }\r\n\r\n    let nuevoMax = maxId + 1;\r\n    maxId = nuevoMax;\r\n\r\n    // Crear el nuevo elemento de vuelo cot-det\r\n    let newFlight = document.createElement('div');\r\n    newFlight.classList.add('row', 'gap-1', 'nuevaRuta');\r\n\r\n    newFlight.innerHTML = `\r\n        <div class=\"col-7\">\r\n            <input type=\"text\" id=\"cot-detMul${nuevoMax}\" class=\"hidden\">\r\n            <p>Ruta <span>${nuevoMax}</span></p>\r\n            <div class=\"row ruta-origen hr_separador\">\r\n                <div class=\"col-6 listados\">\r\n                    <div class=\"vuelo-titulo\">\r\n                        <select name=\"rt-origMul${nuevoMax}\" id=\"rt-origMul${nuevoMax}\" placeholder=\"\">\r\n                            <option value=\"\">Origen</option>\r\n                        </select>\r\n                    </div>\r\n                    <i class=\"vuelo-icon fa-solid fa-plane-departure\"></i>\r\n                    <div class=\"containerSearch origSchMul${nuevoMax}\">\r\n                        <input placeholder=\"Buscar...\" class=\"inOrigSrchMul${nuevoMax}\" type=\"search\" name=\"inOrigSrchMul${nuevoMax}\">\r\n                        <i class=\"fa-solid fa-magnifying-glass\"></i>\r\n                    </div>\r\n                </div>\r\n                <div class=\"separador-icon\">\r\n                    <i class=\" fa-solid fa-arrow-right\"></i>\r\n                </div>\r\n                <div class=\"col-6 listados\">\r\n                    <div class=\"vuelo-titulo\">\r\n                        <select name=\"rt-destinoMul${nuevoMax}\" id=\"rt-destinoMul${nuevoMax}\" placeholder=\"\">\r\n                            <option value=\"\">Destino</option>\r\n                        </select>\r\n                    </div>\r\n                    <i class=\"vuelo-icon fa-solid fa-plane-arrival\"></i>\r\n                    <div class=\"containerSearch destSrchMul${nuevoMax}\">\r\n                        <input placeholder=\"Buscar...\" class=\"inDestgSrchMul${nuevoMax}\" type=\"search\" name=\"inDestgSrchMul${nuevoMax}\">\r\n                        <i class=\"fa-solid fa-magnifying-glass\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <a class=\"btn btn-eliminarRuta\" id=\"eliminarRuta${nuevoMax}\">Eliminar ruta</a>\r\n        </div>\r\n        <div class=\"col-5 row gap-1\">\r\n\r\n            <div class=\"rt-fecha\">\r\n                <label for=\"rt-fechaMul${nuevoMax}\">Fecha</label>\r\n                <input type=\"date\" id=\"rt-fechaMul${nuevoMax}\" />\r\n            </div>\r\n            <div class=\"rt-hora\">\r\n                <label for=\"rt-horaMul${nuevoMax}\">Hora:</label>\r\n                <input type=\"time\" name=\"rt-horaMul${nuevoMax}\" id=\"rt-horaMul${nuevoMax}\">\r\n            </div>\r\n            <div class=\"rt-pax\">\r\n                <label for=\"rt-paxMul${nuevoMax}\">Pax</label>\r\n                <input class=\"pax\" type=\"number\" name=\"\" id=\"rt-paxMul${nuevoMax}\" min=\"0\" placeholder=\"0\">\r\n            </div>\r\n        </div>\r\n    `;\r\n\r\n    // Agregar nueva ruta\r\n    document.getElementById('fdest3').appendChild(newFlight);\r\n\r\n    // Ocultar el elemento de búsqueda de origen correspondiente\r\n    $(`.origSchMul${nuevoMax}`).hide();\r\n    $(`.destSrchMul${nuevoMax}`).hide();\r\n\r\n    // Asignar evento mousedown al nuevo elemento de origen\r\n    $(`#rt-origMul${nuevoMax}`).on(\"mousedown\", mostrarListaOrigen);\r\n    $(`#rt-destinoMul${nuevoMax}`).on(\"mousedown\", mostrarListaDestino);\r\n    $(\"select[name^='rt-orig'], select[name^='rt-dest']\").prop('disabled', true);\r\n    activarRutas();\r\n\r\n    // Agregar event listener al botón \"Eliminar ruta\"\r\n    $(`#eliminarRuta${nuevoMax}`).on(\"click\", function () {\r\n        // id a eliminar \r\n        const idRuta = $('#cotizar_id').val();\r\n        const cot_det_id = $(`#cot-detMul${nuevoMax}`).val();\r\n\r\n        if (cot_det_id && idRuta) eliminarRuta(idRuta, cot_det_id);\r\n\r\n        $(this).closest('.nuevaRuta').remove(); // Eliminar el div padre más cercano con la clase 'nuevaRuta'\r\n    });\r\n}\r\nfunction nuevoPax() {\r\n    const formPasajeros = document.getElementById('formPasajeros');\r\n    const btnPasajero = document.getElementById('btnPasajero');\r\n    let contadorPasajeros = formPasajeros.querySelectorAll('.cont-pasajero').length + 1;\r\n\r\n    // Crear nuevo div para el nuevo pasajero\r\n    const nuevoPasajeroDiv = document.createElement('DIV');\r\n    nuevoPasajeroDiv.classList.add('cont-form3', 'cont-pasajero');\r\n\r\n    // Crear div contenedor para el grupo de entrada de texto\r\n    const divInputGroupText = document.createElement('DIV');\r\n    divInputGroupText.classList.add('form-group');\r\n\r\n    // Crear input para el id del pasajero\r\n    const idPaxInput = document.createElement('INPUT');\r\n    idPaxInput.type = 'text';\r\n    idPaxInput.id = 'pasajero_id' + contadorPasajeros;\r\n    idPaxInput.classList.add('hidden');\r\n    // divInputGroupText.appendChild(idPaxInput);\r\n\r\n    // Crear input para el nombre del pasajero\r\n    const nuevoNombreInput = document.createElement('INPUT');\r\n    nuevoNombreInput.type = 'text';\r\n    nuevoNombreInput.id = 'paxName' + contadorPasajeros;\r\n    // nuevoNombreInput.dataset.target = contadorPasajeros;\r\n    nuevoNombreInput.placeholder = '';\r\n    divInputGroupText.appendChild(nuevoNombreInput);\r\n\r\n    // Crear label para el nombre del pasajero\r\n    const nuevoNombreLabel = document.createElement('LABEL');\r\n    nuevoNombreLabel.textContent = 'Pasajero ' + contadorPasajeros + ':';\r\n    nuevoNombreLabel.htmlFor = 'paxName' + contadorPasajeros;\r\n    divInputGroupText.appendChild(nuevoNombreLabel);\r\n\r\n    // Agregar div de entrada de texto al div del pasajero\r\n    nuevoPasajeroDiv.appendChild(divInputGroupText);\r\n\r\n    // Crear div contenedor para el grupo de entrada de archivo\r\n    const divInputGroupFile = document.createElement('DIV');\r\n    divInputGroupFile.classList.add('form-group');\r\n\r\n    // Crear input de archivo para el pasajero\r\n    const nuevoArchivoInput = document.createElement('INPUT');\r\n    nuevoArchivoInput.type = 'file';\r\n    nuevoArchivoInput.name = 'paxFile' + contadorPasajeros;\r\n    nuevoArchivoInput.id = 'paxFile' + contadorPasajeros;\r\n    nuevoArchivoInput.accept = 'image/*';  // Esto permite solo archivos de imagen\r\n    divInputGroupFile.appendChild(nuevoArchivoInput);\r\n\r\n    // Crear input de eliminar para el pasajero\r\n    const nuevoEliminar = document.createElement('A');\r\n    nuevoEliminar.id = 'btnEliminarPax' + contadorPasajeros;\r\n    nuevoEliminar.classList.add('btn', 'btn-eliminarPax');\r\n    nuevoEliminar.title = 'Eliminar Pasajero';\r\n\r\n    // Crear Div Mostrar Docs\r\n    const divDocs = document.createElement('DIV');\r\n    divDocs.classList.add('contenedor-docs', 'flex');\r\n\r\n    divInputGroupFile.appendChild(nuevoEliminar);\r\n\r\n    // Agregar div de entrada de archivo al div del pasajero\r\n    nuevoPasajeroDiv.appendChild(divInputGroupFile);\r\n\r\n    // Insertar el nuevo pasajero antes del botón \"Agregar Pasajero\"\r\n    // formPasajeros.insertBefore(nuevoPasajeroDiv, btnPasajero);\r\n    formPasajeros.appendChild(nuevoPasajeroDiv);\r\n\r\n    // Agregar Div Docs\r\n    nuevoPasajeroDiv.appendChild(divDocs);\r\n\r\n\r\n    $(`#btnEliminarPax${contadorPasajeros}`).on(\"click\", async function () {\r\n        // id a eliminar \r\n        const cotizar_id = $('#cotizar_id').val();\r\n        // const pasajero_id = $(`#pasajero_id${contadorPasajeros}`).val();\r\n        const pasajero_id = $(this).closest('.cont-pasajero').find('input[id^=\"paxName\"]').data('pax');\r\n\r\n        if (cotizar_id && pasajero_id) await eliminarPasajero(cotizar_id, pasajero_id);\r\n\r\n        $(this).closest('.cont-pasajero').remove(); // Eliminar el div padre más cercano con la clase 'nuevaRuta'\r\n    });\r\n}\r\nasync function setPaxId(listSearch) {\r\n\r\n    let flagRepetido = 0;\r\n\r\n    // Antes de agregar el pasajero, validar si ya existe \r\n    let form = '#formPasajeros';\r\n    const contPasajeros = document.querySelectorAll(`${form} .cont-pasajero`);\r\n    contPasajeros.forEach((ruta, indice) => {\r\n        let inputElement = ruta.querySelector('input[id^=\"paxName\"]');\r\n\r\n        if (inputElement) {\r\n            let dataPaxnValue = inputElement.dataset.paxn || inputElement.dataset.pax;\r\n            if (dataPaxnValue == listSearch['pasajero_id']) flagRepetido = 1;\r\n        }\r\n    });\r\n\r\n    if (flagRepetido == 0) {\r\n\r\n        const pasajero_id = listSearch['pasajero_id'];\r\n\r\n        const docsPAx = await obtenerDocsbyPax(pasajero_id);\r\n\r\n        const formPasajeros = document.getElementById('formPasajeros');\r\n        const btnPasajero = document.getElementById('btnPasajero');\r\n        const slcPasajero = document.getElementById('pasajero_id');\r\n        let contadorPasajeros = formPasajeros.querySelectorAll('.cont-pasajero').length + 1;\r\n\r\n        // Crear nuevo div para el nuevo pasajero\r\n        const nuevoPasajeroDiv = document.createElement('DIV');\r\n        nuevoPasajeroDiv.classList.add('cont-form3', 'cont-pasajero');\r\n\r\n        // Crear div contenedor para el grupo de entrada de texto\r\n        const divInputGroupText = document.createElement('DIV');\r\n        divInputGroupText.classList.add('form-group');\r\n\r\n        // Crear input para el id del pasajero\r\n        const idPaxInput = document.createElement('INPUT');\r\n        idPaxInput.type = 'text';\r\n        idPaxInput.id = 'pasajero_id' + contadorPasajeros;\r\n        idPaxInput.classList.add('hidden');\r\n\r\n        // Crear input para el nombre del pasajero\r\n        const nuevoNombreInput = document.createElement('INPUT');\r\n        nuevoNombreInput.type = 'text';\r\n        nuevoNombreInput.id = 'paxName' + contadorPasajeros;\r\n        // nuevoNombreInput.dataset.target = contadorPasajeros;\r\n        nuevoNombreInput.placeholder = '';\r\n        nuevoNombreInput.value = listSearch['nombre'];\r\n        nuevoNombreInput.setAttribute('data-paxN', pasajero_id); // Añadir atributo data-pax con el ID del pasajero\r\n        divInputGroupText.appendChild(nuevoNombreInput);\r\n\r\n        // Crear label para el nombre del pasajero\r\n        const nuevoNombreLabel = document.createElement('LABEL');\r\n        nuevoNombreLabel.textContent = 'Pasajero ' + contadorPasajeros + ':';\r\n        nuevoNombreLabel.htmlFor = 'paxName' + contadorPasajeros;\r\n        divInputGroupText.appendChild(nuevoNombreLabel);\r\n\r\n        // Agregar div de entrada de texto al div del pasajero\r\n        nuevoPasajeroDiv.appendChild(divInputGroupText);\r\n\r\n        // Crear div contenedor para el grupo de entrada de archivo\r\n        const divInputGroupFile = document.createElement('DIV');\r\n        divInputGroupFile.classList.add('form-group');\r\n\r\n        // Crear input de archivo para el pasajero\r\n        const nuevoArchivoInput = document.createElement('INPUT');\r\n        nuevoArchivoInput.type = 'file';\r\n        nuevoArchivoInput.name = 'paxFile' + contadorPasajeros;\r\n        nuevoArchivoInput.id = 'paxFile' + contadorPasajeros;\r\n        nuevoArchivoInput.accept = 'image/*';  // Esto permite solo archivos de imagen\r\n        divInputGroupFile.appendChild(nuevoArchivoInput);\r\n\r\n        // Crear input de eliminar para el pasajero\r\n        const nuevoEliminar = document.createElement('A');\r\n        nuevoEliminar.id = 'btnEliminarPax' + contadorPasajeros;\r\n        nuevoEliminar.classList.add('btn', 'btn-eliminarPax');\r\n        nuevoEliminar.title = 'Eliminar Pasajero';\r\n\r\n        // Crear Div Mostrar Docs\r\n        const divDocs = document.createElement('DIV');\r\n        divDocs.classList.add('contenedor-docs', 'flex');\r\n\r\n        divInputGroupFile.appendChild(nuevoEliminar);\r\n\r\n        // Agregar div de entrada de archivo al div del pasajero\r\n        nuevoPasajeroDiv.appendChild(divInputGroupFile);\r\n\r\n        // Insertar el nuevo pasajero antes del botón \"Agregar Pasajero\"\r\n        // formPasajeros.insertBefore(nuevoPasajeroDiv, btnPasajero);\r\n        formPasajeros.appendChild(nuevoPasajeroDiv);\r\n\r\n        // Agregar Div Docs\r\n        nuevoPasajeroDiv.appendChild(divDocs);\r\n\r\n\r\n        // Si tiene Documentos agregarlos\r\n        if (docsPAx.length > 0) {\r\n            // let container = document.getElementsByClassName('contenedor-docs');\r\n            // container = container[0];\r\n\r\n            docsPAx.forEach(doc => {\r\n\r\n                const enlace = document.createElement('a');\r\n                enlace.classList.add('thumbnail');\r\n                enlace.href = `/${doc.ruta}/${doc.hash_doc}.${doc.tipo_doc}`;\r\n                enlace.setAttribute('target', '_blank'); // Abre el enlace en una nueva pestaña\r\n\r\n                const divIcon = document.createElement('DIV');\r\n                divIcon.classList.add('fileicon');\r\n\r\n                const icon = document.createElement('I');\r\n                icon.classList.add('fa-regular', 'fa-file');\r\n\r\n                const divName = document.createElement('DIV');\r\n                divName.classList.add('filename');\r\n\r\n                const name = document.createElement('P');\r\n                name.textContent = `${doc.nombre_doc}`;\r\n\r\n                divIcon.appendChild(icon);\r\n                divName.appendChild(name);\r\n                enlace.appendChild(divIcon);\r\n                enlace.appendChild(divName);\r\n                divDocs.appendChild(enlace);\r\n\r\n            });\r\n        }\r\n\r\n        $(`#btnEliminarPax${contadorPasajeros}`).on(\"click\", async function () {\r\n\r\n            // id a eliminar \r\n            const cotizar_id = $('#cotizar_id').val();\r\n            // const pasajero_id = $(`#pasajero_id${contadorPasajeros}`).val();\r\n            const pasajero_id = $(this).closest('.cont-pasajero').find('input[id^=\"paxName\"]').data('paxn');\r\n\r\n            $(this).closest('.cont-pasajero').remove(); // Eliminar el div padre más cercano con la clase 'nuevaRuta'\r\n        });\r\n\r\n    }\r\n\r\n}\r\nasync function validarRutaPax() {\r\n\r\n    // Crear un array para almacenar todas las relaciones posibles\r\n    const relaciones = [];\r\n\r\n    // Obtener todos los elementos <p> dentro del formulario 'formRelRuta'\r\n    $('#formRelRuta').find('p[data-id]').each(function () {\r\n        const $pElemento = $(this);\r\n        const ruta_id = $pElemento.attr('data-id');\r\n\r\n        $(this).find('p[data-paxid]').each(function () {\r\n            const $pElemento = $(this);\r\n            const pasajero_id = $pElemento.attr('data-paxid');\r\n\r\n            if (ruta_id && pasajero_id) {\r\n                relaciones.push({ ruta_id, pasajero_id });\r\n            }\r\n        });\r\n    });\r\n\r\n    return relaciones;\r\n}\r\nasync function validarPasajeros() {\r\n\r\n    let form = '#formPasajeros';\r\n    const pasajerosDet = [];\r\n    const contPasajeros = document.querySelectorAll(`${form} .cont-pasajero`);\r\n\r\n    contPasajeros.forEach((ruta, indice) => {\r\n        let nombre = ruta.querySelector('input[id^=\"paxName\"]');\r\n        let nombre_ruta = ruta.querySelector('input[id^=\"paxFile\"]');\r\n\r\n        let paxActual = {};\r\n\r\n        if ((nombre && nombre.value.trim() !== '') || (nombre && nombre.dataset.paxn)) {\r\n            // Obtener el id de pasajero desde el data-target\r\n            let id_pax = nombre.dataset.pax || nombre.dataset.paxn;\r\n\r\n            if (id_pax) {\r\n                paxActual.pasajero_id = id_pax.trim();\r\n            }\r\n            if (nombre_ruta && nombre_ruta.files.length > 0) {\r\n                paxActual.nombre_ruta = nombre_ruta.files[0];\r\n            }\r\n            paxActual.nombre = nombre.value.trim();\r\n            pasajerosDet.push(paxActual);\r\n        }\r\n    });\r\n\r\n    return pasajerosDet;\r\n}\r\nasync function existeRuta(slc) {\r\n\r\n    let origen = $(slc).find(\"select[name^='rt-orig']\").val(); // Buscar dentro de 'slc' el select con nombre que comienza con 'rt-origen'\r\n    let destino = $(slc).find(\"select[name^='rt-dest']\").val(); // Buscar dentro de 'slc' el select con nombre que comienza con 'rt-destino'\r\n    let cliente = $('#cliente_id').val();\r\n    let broker = $('#broker_id').val();\r\n    let aeronave = $('#aeronave_id').val();\r\n\r\n    if (!origen || !destino || !aeronave) return;\r\n    if (!cliente && !broker) return;\r\n\r\n    try {\r\n\r\n        const datos = new FormData();\r\n        datos.append('origen', origen);\r\n        datos.append('destino', destino);\r\n        datos.append('cliente_id', cliente);\r\n        datos.append('broker_id', broker);\r\n        datos.append('aeronave_id', aeronave);\r\n\r\n        const respuesta = await fetch('../valida/ruta', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n        if (data.exito == '0') {\r\n            // Vaciar y restablecer los options de los select dentro del elemento 'slc'\r\n            $(slc).find(\"select[name^='rt-orig'] option\").val('');\r\n            $(slc).find(\"select[name^='rt-orig'] option\").text('Origen');\r\n            $(slc).find(\"select[name^='rt-dest'] option\").val('');\r\n            $(slc).find(\"select[name^='rt-dest'] option\").text('Destino');\r\n\r\n            SwalToast('warning', data.alertas.error[0], 2500);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}\r\nasync function traerDetalle() {\r\n\r\n    let ctz = $(\"#cotizar_id\").val();\r\n    let detalleRutas = await obtnerVuelosId(ctz);\r\n\r\n    let nuevosDatos = detalleRutas.map(cot => {\r\n        let baseObjeto = {\r\n            cot_det_id: cot.cot_det_id,\r\n            categoria: { categoria_id: cot.categoria_id, nombre: cot.nombreCat },\r\n            fecha_salida: cot.fecha_salida,\r\n            pasajeros: cot.pasajeros,\r\n            tipo_vuelo: cot.tipo_vuelo,\r\n            hora_salida: cot.hora_salida,\r\n            concepto: cot.concepto,\r\n            cantidad: cot.cantidad,\r\n            tarifa: cot.tarifa,\r\n            rel_ruta: cot.rel_ruta,\r\n            relaciones_id: cot.relacion_id,\r\n            line_id: cot.line_id,\r\n            subtotal: cot.subtotal\r\n        }\r\n\r\n        // Agregar origen y destino solo si categoria es 1\r\n        if (cot.categoria_id == 1) {\r\n            baseObjeto.origen = { 'aeropuerto_id': cot.origenId, 'municipio': cot.origMun };\r\n            baseObjeto.destino = { 'aeropuerto_id': cot.destinoId, 'municipio': cot.destMun };\r\n        }\r\n\r\n        return baseObjeto;\r\n    });\r\n\r\n    if (nuevosDatos.length < 9) {\r\n        const numObjetosVacios = 8;\r\n        const arreglo2 = Array(numObjetosVacios - nuevosDatos.length).fill({});\r\n        const arregloCombinado = nuevosDatos.concat(arreglo2);\r\n        const nuevosDatosClonados = arregloCombinado.map(obj => ({ ...obj }));\r\n        gridApi.setGridOption('rowData', nuevosDatosClonados);\r\n    } else {\r\n        gridApi.setGridOption('rowData', nuevosDatos);\r\n    }\r\n\r\n    const aeronave = $('#aeronave_id').val();\r\n    let rowData = [];\r\n    gridApi.forEachNode(node => {\r\n        rowData.push(node.data); // Aquí obtienes los datos de cada fila\r\n    });\r\n\r\n    // for (const data of rowData) {\r\n    //     if (data.cot_det_id) {\r\n    //         let origenVal = data['origen']['aeropuerto_id'];\r\n    //         let destinoVal = data['destino']['aeropuerto_id'];\r\n\r\n    //         let valida = await validaRutaTarifa(origenVal, destinoVal);\r\n    //         let valAterrizaje = await obtenerTasaAterrizaje(destinoVal, aeronave);\r\n\r\n    //         if (valida.exito == '0') {\r\n    //             SwalToast('warning', valida.alertas.error[0], 2500);\r\n    //         } else {\r\n    //             if (valida.ruta.tipo_vuelo == 'N') {\r\n    //                 data.costo = valida.tarifa.costo_mx;\r\n    //             } else if (valida.ruta.tipo_vuelo == 'I') {\r\n    //                 data.costo = valida.tarifa.costo_usd;\r\n    //             }\r\n\r\n    //             // IMPORTANTE console.log('Quite tipo_vuelo');\r\n    //             // data.tipo_vuelo = valida.ruta.tipo_vuelo;\r\n    //             $('#costo_id').val(valida.tarifa.costo_id);\r\n    //         }\r\n\r\n    //         if (valAterrizaje.exito == '1') {\r\n    //             data.tarifa_aterrizaje = valAterrizaje.aterrizaje.tarifa_aterrizaje;\r\n    //             data.tarifa_ser_terrestre = valAterrizaje.aterrizaje.tarifa_ser_terrestre;\r\n    //             data.tarifa_ser_auxiliares = valAterrizaje.aterrizaje.tarifa_ser_auxiliares;\r\n    //             data.total_costos = valAterrizaje.aterrizaje.total_costos;\r\n    //             $('#tasa_aterrizaje_id').val(valAterrizaje.aterrizaje.tasa_aterrizaje_id);\r\n    //         } else {\r\n    //             SwalToast('warning', 'No existe Tasa de Aterrizaje', 2500);\r\n    //         }\r\n\r\n    //         // actTotalesLine(data);\r\n    //         actTotales();\r\n    //     }\r\n    // }\r\n\r\n    actTotales();\r\n\r\n\r\n    let updatedRows = rowData.filter(data => data.costo !== undefined);\r\n\r\n    if (updatedRows.length > 0) {\r\n        gridApi.applyTransaction({ update: updatedRows });\r\n    }\r\n\r\n    //  Aplica los cambios a la cuadrícula\r\n    gridApi.applyTransaction({ update: rowData });\r\n\r\n}\r\nasync function obtenerCotizacionPDF() {\r\n    try {\r\n\r\n        const datos = new FormData();\r\n        const fecha_cot = $('#fecha-cot').val();\r\n        const folio = $('#folio').val();\r\n        const aeronave_id = $('#aeronave_id').val();\r\n        if ($('#slctOpcion').val() == 1) {\r\n            const cliente_id = $('#cliente_id').val();\r\n            const clienteName = $('#cliente_id option').text();\r\n\r\n            datos.append('cliente_id', cliente_id);\r\n            datos.append('clienteName', clienteName);\r\n        } else if ($('#slctOpcion').val() == 2) {\r\n            const broker_id = $('#broker_id').val();\r\n            const brokerName = $('#broker_id option').text();\r\n            datos.append('broker_id', broker_id);\r\n            datos.append('brokerName', brokerName);\r\n        }\r\n        const condiciones = 'Contado';\r\n        const subtotal = $('#subtotal').val();\r\n        const ivaNac = $('#ivaNac').val();\r\n        const ivaInt = $('#ivaInt').val();\r\n        const total = $('#total').val();\r\n        const cant_pernocta = $('#cant_pernocta').val();\r\n        const tot_pernocta = $('#tot_pernocta').val();\r\n        const cant_hrs = $('#cant_hrs').val();\r\n        const tot_hrs = $('#tot_hrs').val();\r\n\r\n        // const detalles = await validarGrid();\r\n        const detalles = await validarGridPDF();\r\n\r\n        if (detalles.length > 0) {\r\n            detalles.forEach(node => {\r\n                // let data = { ...node.data }; // Crear una copia del objeto para no modificar el original\r\n                if (node.categoria && node.categoria != 'Ruta') {\r\n                    delete node.fecha_salida;\r\n                }\r\n            });\r\n        }\r\n\r\n        datos.append('fecha_cot', fecha_cot);\r\n        datos.append('folio', folio);\r\n        datos.append('aeronave_id', aeronave_id);\r\n        datos.append('condiciones', condiciones);\r\n        datos.append('subtotal', subtotal);\r\n        datos.append('ivaNac', ivaNac);\r\n        datos.append('ivaInt', ivaInt);\r\n        datos.append('total', total);\r\n        datos.append('cant_pernocta', cant_pernocta);\r\n        datos.append('tot_pernocta', tot_pernocta);\r\n        datos.append('cant_hrs', cant_hrs);\r\n        datos.append('tot_hrs', tot_hrs);\r\n        datos.append('detalles', JSON.stringify(detalles));\r\n\r\n        const respuesta = await fetch('../obtener/pdf', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n        const data = await respuesta.json();\r\n\r\n        if (data.urlArchivo) {\r\n            window.open(data.urlArchivo, '_blank');\r\n        } else {\r\n            console.error('No se pudo obtener la URL del archivo PDF.');\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalToast('warning', 'Error al obtener los usuarios', 2500);\r\n    }\r\n}\r\nasync function crearCotizacion() {\r\n\r\n    try {\r\n        const datos = new FormData();\r\n\r\n        const aeronave_id = $('#aeronave_id').val();\r\n        const fechaCot = $('#fecha-cot').val();\r\n        const estatus = $('#estatus').val();\r\n        const comentarios = $('#rt-comment').val();\r\n        if ($('#slctOpcion').val() == 1) {\r\n            const cliente_id = $('#cliente_id').val();\r\n            datos.append('cliente_id', cliente_id);\r\n        } else if ($('#slctOpcion').val() == 2) {\r\n            const broker_id = $('#broker_id').val();\r\n            datos.append('broker_id', broker_id);\r\n        }\r\n\r\n        let detalleRutas = await obtenerRutas();\r\n\r\n        if (detalleRutas) {\r\n\r\n            datos.append('aeronave_id', aeronave_id);\r\n            datos.append('fecha_creacion', fechaCot);\r\n            datos.append('estatus', estatus);\r\n            datos.append('comentarios', comentarios);\r\n            datos.append('tipo_de_viaje', currentStep);\r\n            datos.append('detalleRutas', JSON.stringify(detalleRutas));\r\n\r\n            const respuesta = await fetch('../crear/SolCotizacion', {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n\r\n            const data = await respuesta.json();\r\n            console.log(data);\r\n\r\n            if (data.exito == 1) {\r\n                // Registro Creado Exitosamente\r\n                SwalLoad('success', 'Éxito', 'Registro Creado Correctamente', false);\r\n                setTimeout(() => {\r\n                    swal.close();\r\n                    resetForm();\r\n                    obtenerCotizaciones();\r\n                }, 1500);\r\n\r\n            }\r\n            else if (data.exito == 0) {\r\n                SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n            }\r\n\r\n            if (data.alertas) {\r\n                SwalToast('warning', data.alertas.error, 2500);\r\n            }\r\n\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}\r\nasync function actualizarCotizacion() {\r\n\r\n    try {\r\n        const datos = new FormData();\r\n        const cotizar_id = $('#cotizar_id').val();\r\n        const folio = $('#folio').val();\r\n        const aeronave_id = $('#aeronave_id').val();\r\n        const fechaCot = $('#fecha-cot').val();\r\n        const estatus = $('#estatus').val();\r\n        const tipo_cambio = $('#tipo_cambio').val();\r\n        let comentarios = '';\r\n\r\n        if ($('#slctOpcion').val() == 1) {\r\n            const cliente_id = $('#cliente_id').val();\r\n            datos.append('cliente_id', cliente_id);\r\n        } else if ($('#slctOpcion').val() == 2) {\r\n            const broker_id = $('#broker_id').val();\r\n            datos.append('broker_id', broker_id);\r\n        }\r\n        let detalleRutas = '';\r\n        if (estatus == 'PND') {\r\n            detalleRutas = await obtenerRutas();\r\n            datos.append('detalleRutas', JSON.stringify(detalleRutas));\r\n            comentarios = $('#rt-comment').val();\r\n        } else {\r\n            comentarios = $('#cot-comment').val();\r\n            detalleRutas = await validarGrid();\r\n        }\r\n        let pasajerosDet = await validarPasajeros();\r\n        datos.append('pasajerosDet', JSON.stringify(pasajerosDet));\r\n\r\n        // Agregar los archivos al FormData\r\n        pasajerosDet.forEach((pasajero, index) => {\r\n            if (pasajero && pasajero.nombre && pasajero.nombre_ruta) {\r\n                let prefijo;\r\n                if (pasajero.pasajero_id) {\r\n                    prefijo = pasajero.pasajero_id;\r\n                    datos.append(`archivo_${prefijo}`, pasajero.nombre_ruta);\r\n                } else {\r\n                    // Obtener la primera letra de cada palabra en el nombre\r\n                    prefijo = pasajero.nombre.split(' ').map(word => word.charAt(0)).join('');\r\n                    datos.append(`archivo_${prefijo}`, pasajero.nombre_ruta);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (detalleRutas) {\r\n            datos.append('cotizar_id', cotizar_id);\r\n            datos.append('folio_cotizar', folio);\r\n            datos.append('aeronave_id', aeronave_id);\r\n            datos.append('fecha_creacion', fechaCot);\r\n            datos.append('estatus', estatus);\r\n            datos.append('comentarios', comentarios);\r\n            datos.append('tipo_de_viaje', currentStep);\r\n            datos.append('tipo_cambio_id', tipo_cambio);\r\n\r\n\r\n            const respuesta = await fetch('../actualizar/SolCotizacion', {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n\r\n            const data = await respuesta.json();\r\n            console.log(data);\r\n\r\n            if (data.exito == 1) {\r\n                SwalLoad('success', 'Éxito', 'Registro Actualizado Correctamente', false);\r\n                setTimeout(() => {\r\n                    swal.close();\r\n                    resetForm();\r\n                    obtenerCotizaciones();\r\n                }, 1500);\r\n            } else if (data.exito == 0) {\r\n                SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n                return\r\n            }\r\n\r\n            if (data.alertas) {\r\n                SwalToast('warning', data.alertas.error, 2500);\r\n                return\r\n            }\r\n\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}\r\nasync function actualizarRutaPax() {\r\n\r\n    try {\r\n        let relRutaPax = await validarRutaPax();\r\n        if (relRutaPax == '') return\r\n        const cotizar_id = $('#cotizar_id').val();\r\n        const csrfToken = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\r\n\r\n        const datos = new FormData();\r\n        datos.append('id_cot', cotizar_id);\r\n        datos.append('csrf_token', csrfToken);\r\n        datos.append('relRutaPax', JSON.stringify(relRutaPax));\r\n\r\n        const respuesta = await fetch('../actualizar/relacionRutaPax', {\r\n            method: 'POST',\r\n            body: datos,\r\n            headers: {\r\n                'X-CSRF-Token': csrfToken\r\n            }\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n        console.log(data);\r\n\r\n        $('#formRelRuta').empty();\r\n\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}\r\nasync function eliminarRuta(idRuta, cot_det_id) {\r\n\r\n    try {\r\n        const datos = new FormData();\r\n        datos.append('cotizar_id', idRuta);\r\n        datos.append('cot_det_id', cot_det_id);\r\n\r\n        const respuesta = await fetch('../eliminar/ruta', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n\r\n        if (data.exito == 1) {\r\n            // Registro Creado Exitosamente\r\n            SwalToast('success', 'Registro Eliminado Correctamente', 2500);\r\n            maxId = maxId - 1;\r\n        }\r\n\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n\r\n}\r\nasync function generarServicio() {\r\n\r\n    try {\r\n        const cotizar_id = $('#cotizar_id').val();\r\n\r\n        const datos = new FormData();\r\n        datos.append('cotizar_id', cotizar_id);\r\n\r\n        const respuesta = await fetch('../generar/servicio', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        if (data.exito == 1) {\r\n            SwalLoad('success', 'Éxito', 'Servicio Creado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                resetForm();\r\n                obtenerCotizaciones();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n            return\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}\r\nasync function obtenerCodigosIATA(origenVal, destinoVal) {\r\n    try {\r\n        const datos = new FormData();\r\n        datos.append('origen', origenVal);\r\n        datos.append('destino', destinoVal);\r\n\r\n        const respuesta = await fetch('../obtener/codigos', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n        const data = await respuesta.json();\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\nasync function eliminarPasajero(cotizar_id, pasajero_id) {\r\n\r\n    try {\r\n        const datos = new FormData();\r\n        datos.append('cotizar_id', cotizar_id);\r\n        datos.append('pasajero_id', pasajero_id);\r\n\r\n        const respuesta = await fetch('../eliminar/pasajero', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n\r\n        if (data.exito == 1) {\r\n            SwalToast('success', 'Registro Eliminado Correctamente', 2500);\r\n        }\r\n\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n            return;\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n\r\n}\r\nasync function validarGrid() {\r\n    let detalles = [];\r\n    try {\r\n        const nodes = [];\r\n        gridApi.forEachNode(node => nodes.push(node));\r\n\r\n        for (const node of nodes) {\r\n            // Obtener los datos de la fila\r\n            const relacion_id = node.data.relaciones_id;\r\n            const categoria = node.data.categoria;\r\n            const concepto = node.data.concepto;\r\n            const fecha = node.data.fecha_salida;\r\n            const tHoras = node.data.cantidad;\r\n\r\n            const formattedFecha = formatearFechaYear(fecha);\r\n            node.data.fecha_salida = formattedFecha;\r\n            node.data.categoria_nombre = '';\r\n\r\n            // Copiar la fila y modificar el valor de origen\r\n            // Verificar si la fila tiene relacion_id\r\n            if (relacion_id) {\r\n\r\n                // Copiar la fila y modificar el valor de origen\r\n                let filaModificada = { ...node.data }; // Crear una copia de la fila\r\n\r\n                // Agregar categoria_nombre si categoria está definida\r\n                if (categoria) {\r\n                    filaModificada.categoria_nombre = filaModificada.categoria.nombre;\r\n                }\r\n\r\n                // Ajustar 'Categoria' para contener solo el ID\r\n                if (filaModificada.categoria && filaModificada.categoria.categoria_id !== undefined) {\r\n                    filaModificada.categoria = filaModificada.categoria.categoria_id;\r\n                }\r\n\r\n                if (categoria && categoria.nombre == 'Ruta') {\r\n                    // Validar que tengan fecha obligatoriamente\r\n                    if (fecha == undefined) {\r\n                        throw SwalToast('warning', 'Fecha Obligatoria', 2500);\r\n                    }\r\n\r\n                    if (tHoras == undefined) {\r\n                        throw SwalToast('warning', 'Horas Obligatorias', 2500);\r\n                    }\r\n\r\n                    // Formatear la fecha a 'año-mes-día' (YYYY-MM-DD)\r\n                    // const formattedFecha = new Date(fecha).toISOString().split('T')[0];\r\n                    const formattedFecha = formatearFechaYear(fecha);\r\n\r\n                    // Asignar el valor de 'aeropuerto_id' de 'origen' a 'origen'\r\n                    if (filaModificada.origen && filaModificada.origen.aeropuerto_id !== undefined) {\r\n                        filaModificada.origen = filaModificada.origen.aeropuerto_id;\r\n                    }\r\n\r\n                    // // Ajustar 'destino' para contener solo 'aeropuerto_id'\r\n                    if (filaModificada.destino && filaModificada.destino.aeropuerto_id !== undefined) {\r\n                        filaModificada.destino = filaModificada.destino.aeropuerto_id;\r\n                    }\r\n\r\n                    // Ajustar la Hora\r\n                    const horaFormat = await formatoHora(filaModificada.hora_salida);\r\n\r\n\r\n                    filaModificada.hora_salida = horaFormat;\r\n                    filaModificada.fecha_salida = formattedFecha;\r\n                }\r\n\r\n                // Agregar la fila modificada al arreglo detalles\r\n                detalles.push(filaModificada);\r\n            } else if (categoria && categoria.nombre == 'Pernocta') {\r\n                if (concepto == undefined) {\r\n                    throw SwalToast('warning', 'Concepto Obligatorio para Pernocta', 2500);\r\n                }\r\n                filaModificada = { ...node.data }; // Crear una copia de la fila\r\n\r\n                // Ajustar 'Categoria' para contener solo el ID\r\n                if (filaModificada.categoria && filaModificada.categoria.categoria_id !== undefined) {\r\n                    filaModificada.categoria = filaModificada.categoria.categoria_id;\r\n                    filaModificada.categoria_nombre = categoria.nombre;\r\n                }\r\n                detalles.push(filaModificada);\r\n            }\r\n        }\r\n\r\n    } catch (error) {\r\n        return detalles = '';\r\n    }\r\n\r\n    return detalles;\r\n}\r\nasync function validarGridPDF() {\r\n\r\n    let rowData = [];\r\n    gridApi.forEachNode(node => {\r\n        if (node.data.categoria) {\r\n            let data = { ...node.data }; // Copia del objeto original\r\n            data.categoria = `${data.categoria.nombre}`\r\n            rowData.push(data);\r\n        }\r\n    });\r\n\r\n    let categorias = await obtenerCategorias();\r\n\r\n    // Orden específico para los valores de categoria.nombre\r\n    const ordenCategoria = categorias.map(categoria => categoria.nombre);\r\n\r\n\r\n    // Función de comparación para múltiples campos\r\n    function compararVuelos(a, b) {\r\n        // Comparar por fecha_salida\r\n        const fechaA = new Date(a.fecha_salida);\r\n        const fechaB = new Date(b.fecha_salida);\r\n\r\n        if (fechaA - fechaB != 0) return fechaA - fechaB;\r\n\r\n        // Comparar por categoria.nombre según el orden especificado\r\n        const indexA = ordenCategoria.indexOf(a.categoria);\r\n        const indexB = ordenCategoria.indexOf(b.categoria);\r\n        // const indexA = ordenCategoria.indexOf(a.categoria.nombre);\r\n        // const indexB = ordenCategoria.indexOf(b.categoria.nombre);\r\n\r\n        if (indexA - indexB !== 0) return indexA - indexB;\r\n\r\n        // Agregar más comparaciones si es necesario\r\n        // Comparar por concepto\r\n        if (a.concepto.localeCompare(b.concepto) !== 0) return a.concepto.localeCompare(b.concepto);\r\n\r\n        // Comparar por destino.municipio\r\n        if (a.destino.municipio.localeCompare(b.destino.municipio) !== 0) return a.destino.municipio.localeCompare(b.destino.municipio);\r\n\r\n        // Comparar por origen.municipio\r\n        if (a.origen.municipio.localeCompare(b.origen.municipio) !== 0) return a.origen.municipio.localeCompare(b.origen.municipio);\r\n\r\n        // Comparar por tarifa\r\n        return parseFloat(a.tarifa) - parseFloat(b.tarifa);\r\n    }\r\n\r\n    // Ordenar el arreglo usando la función de comparación\r\n    rowData.sort(compararVuelos);\r\n    return rowData\r\n}\r\n"]}