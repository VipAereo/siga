{"version":3,"sources":["pilotoAero.js"],"names":["gridOptions","asignarEventos","$","hide","document","addEventListener","e","key","resetForm","getElementById","async","event","preventDefault","show","focus","data","obtenerPilotos","mostrarListaSearch","obtenerAeronaves","configurarBotones","click","mostrarContenedorAltas","validateInputs","val","crearPilotAero","actualizarPilotAero","inicializarPagina","iniciarTabla","headerName","field","width","cellRenderer","params","editButton","createElement","className","title","piloto_aero_id","piloto_id","text","nombre_empleado","aeronave_id","modelo","actionContainer","classList","appendChild","headerClass","cellClass","filter","traePilotoAero","respuesta","fetch","method","json","convert","verificarArray","gridApi","setGridOption","error","console","SwalToast","cerrarVentana","length","SwalLoad","datos","FormData","append","body","exito","setTimeout","swal","close","errorSMS","alertas"],"mappings":"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","file":"pilotoAero.js","sourcesContent":["let gridOptions;\r\n\r\n// Utilizando el Principio de Modularidad\r\n$(function () {\r\n    asignarEventos();\r\n    inicializarPagina();\r\n    configurarBotones();\r\n});\r\n\r\nfunction asignarEventos() {\r\n    // Ocultar Listados\r\n    $('.pilotoSearch').hide();\r\n    $('.aeroSearch').hide();\r\n\r\n    document.addEventListener(\"keydown\", e => {\r\n        if (e.key === 'Escape') {\r\n            resetForm();\r\n        }\r\n    });\r\n\r\n    // Lista Pilotos\r\n    document.getElementById(\"piloto_id\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        $('.pilotoSearch').show();\r\n        $('.inPilotoSrch').focus()\r\n        let data = await obtenerPilotos();\r\n        const listSearch = await mostrarListaSearch(data, '.pilotoSearch', 'empleado_id', 'nombre_empleado');\r\n\r\n    });\r\n\r\n    // Lista Aeronaves\r\n    document.getElementById(\"aeronave_id\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        $('.aeroSearch').show();\r\n        $('.inAeroSrch').focus()\r\n        let data = await obtenerAeronaves();\r\n        const listSearch = await mostrarListaSearch(data, '.aeroSearch', 'aeronave_id', 'modelo');\r\n    });\r\n}\r\n\r\nfunction configurarBotones() {\r\n    // Ocultar altas\r\n    $(\".contenedor-altas\").hide();\r\n\r\n    $(\"#crear-pilotoAero\").click(mostrarContenedorAltas);\r\n\r\n    $(\".btn-cancelar\").click(e => {\r\n        resetForm();\r\n    });\r\n\r\n    $(\"#btnGuardar\").click(e => {\r\n        let validar = validateInputs($('#formAltas'));\r\n        if (validar) $('#piloto_aero_id').val() == '' ? crearPilotAero() : actualizarPilotAero();\r\n    });\r\n}\r\n\r\nfunction inicializarPagina() {\r\n\r\n    let columnDefs = [\r\n        {\r\n            headerName: 'id',\r\n            field: 'piloto_aero_id',\r\n            width: 80\r\n        },\r\n        {\r\n            headerName: 'Piloto',\r\n            field: 'nombre_empleado',\r\n            width: 160\r\n        },\r\n        {\r\n            headerName: 'Aeronave',\r\n            field: 'modelo',\r\n            width: 250\r\n        },\r\n        {\r\n            headerName: 'Acción',\r\n            cellRenderer: function (params) {\r\n                const editButton = document.createElement('I');\r\n                editButton.className = \"fa-regular fa-pen-to-square btn btn-editar\";\r\n                editButton.title = 'Editar';\r\n\r\n                // Datos a Editar\r\n                editButton.addEventListener('click', async function () {\r\n                    await mostrarContenedorAltas();\r\n\r\n                    $('#piloto_aero_id').val(params.data.piloto_aero_id);\r\n\r\n                    $('#piloto_id option').val(params.data.piloto_id);\r\n                    $('#piloto_id option').text(params.data.nombre_empleado);\r\n\r\n                    $('#aeronave_id option').val(params.data.aeronave_id);\r\n                    $('#aeronave_id option').text(params.data.modelo);\r\n\r\n                });\r\n\r\n                const actionContainer = document.createElement('div');\r\n                actionContainer.classList = \"btn-cont centrado\";\r\n                actionContainer.appendChild(editButton);\r\n\r\n                return actionContainer;\r\n            },\r\n            width: 150,\r\n            headerClass: 'txt-center',\r\n            cellClass: 'custom-action-cell', // Agregar la clase CSS 'custom-action-cell' a todas las celdas en esta columna\r\n            filter: false\r\n        }\r\n    ];\r\n\r\n    let data = '';\r\n    iniciarTabla(data, columnDefs, '#myGrid');\r\n    traePilotoAero();\r\n}\r\n\r\n// FUNCIONES \r\nasync function traePilotoAero() {\r\n    try {\r\n        const respuesta = await fetch('allPilotoAero', {\r\n            method: 'GET',\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        let convert = verificarArray (data);\r\n        gridApi.setGridOption('rowData', convert);\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalToast('warning', 'Error al obtener los usuarios', 2500);\r\n    }\r\n}\r\n\r\nfunction resetForm() {\r\n    cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n}\r\n\r\nasync function mostrarContenedorAltas() {\r\n    $(\".contenedor-altas\").show();\r\n    await obtenerPilotos();\r\n    await obtenerAeronaves();\r\n}\r\n\r\nasync function obtenerPilotos() {\r\n    try {\r\n        const respuesta = await fetch('pilotos/activos', {\r\n            method: 'GET'\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        if (!data.length > 0) SwalToast('warning', 'No hay Programas disponibles.', 2500);\r\n        \r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\n\r\nasync function obtenerAeronaves() {\r\n    try {\r\n        const respuesta = await fetch('aeronaves/activas', {\r\n            method: 'GET'\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        if (!data.length > 0) SwalToast('warning', 'No hay Aeronaves disponibles.', 2500);\r\n        \r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\n\r\nasync function crearPilotAero() {\r\n\r\n    const piloto_id = $('#piloto_id').val();\r\n    const aeronave_id = $('#aeronave_id').val();\r\n\r\n    try {\r\n\r\n        const datos = new FormData();\r\n        datos.append('piloto_id', piloto_id);\r\n        datos.append('aeronave_id', aeronave_id);\r\n\r\n        const respuesta = await fetch('crear/pilotoAero', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        if (data.exito == 1) {\r\n            // Registro Creado Exitosamente\r\n            SwalLoad('success', 'Éxito', 'Registro Creado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                resetForm();\r\n                traePilotoAero();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n\r\n}\r\n\r\nasync function actualizarPilotAero() {\r\n\r\n    const piloto_aero_id = $('#piloto_aero_id').val();\r\n    const piloto_id = $('#piloto_id').val();\r\n    const aeronave_id = $('#aeronave_id').val();\r\n\r\n    try {\r\n\r\n        const datos = new FormData();\r\n        datos.append('piloto_aero_id', piloto_aero_id);\r\n        datos.append('piloto_id', piloto_id);\r\n        datos.append('aeronave_id', aeronave_id);\r\n\r\n        const respuesta = await fetch('actualizar/pilotoAero', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n\r\n        if (data.exito == 1) {\r\n            // Registro Creado Exitosamente\r\n            SwalLoad('success', 'Éxito', 'Registro Actualizado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                resetForm();\r\n                traePilotoAero();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}"]}