{"version":3,"sources":["pilotos.js"],"names":["gridOptions","asignarEventos","$","hide","document","addEventListener","e","key","resetForm","getElementById","async","event","preventDefault","show","focus","data","obtenerEmpleados","console","log","mostrarListaSearch","configurarBotones","click","mostrarContenedorAltas","validateInputs","val","crearPiloto","actualizarPiloto","inicializarPagina","iniciarTabla","headerName","field","width","cellRenderer","params","editButton","createElement","className","title","piloto_id","licencia","tipo_licencia","vence_licencia","horas_vuelo","estatus","empleado_id","text","empleado_nombre","actionContainer","classList","appendChild","headerClass","cellClass","filter","traePilotos","cerrarVentana","respuesta","fetch","method","json","convert","verificarArray","gridApi","setGridOption","error","SwalToast","length","SwalLoad","datos","FormData","append","body","exito","setTimeout","swal","close","errorSMS","alertas"],"mappings":"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","file":"pilotos.js","sourcesContent":["let gridOptions;\r\n\r\n// Utilizando el Principio de Modularidad\r\n$(function () {\r\n    asignarEventos();\r\n    inicializarPagina();\r\n    configurarBotones();\r\n});\r\n\r\nfunction asignarEventos() {\r\n    // Ocultar Listados\r\n    $('.pilotosSearch').hide();\r\n\r\n    document.addEventListener(\"keydown\", e => {\r\n        if (e.key === 'Escape') {\r\n            resetForm();\r\n        }\r\n    });\r\n\r\n    // Lista Piloto\r\n    document.getElementById(\"empleado_id\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        $('.pilotosSearch').show();\r\n        $('.inPilotoSrch').focus()\r\n        let data = await obtenerEmpleados();\r\n        console.log(data);\r\n        const listSearch = await mostrarListaSearch(data, '.pilotosSearch', 'empleado_id', 'nombre');\r\n    });\r\n}\r\n\r\nfunction configurarBotones() {\r\n    $(\".contenedor-altas\").hide();\r\n    $(\"#crear-piloto\").click(mostrarContenedorAltas);\r\n\r\n    $(\".btn-cancelar\").click(e => {\r\n        resetForm();\r\n    });\r\n\r\n    $(\"#btnGuardar\").click(e => {\r\n        let validar = validateInputs($('#formAltas'));\r\n        if (validar) $('#piloto_id').val() == '' ? crearPiloto() : actualizarPiloto();\r\n    });\r\n}\r\n\r\nfunction inicializarPagina() {\r\n\r\n    let columnDefs = [\r\n        {\r\n            headerName: 'id',\r\n            field: 'piloto_id',\r\n            width: 80\r\n        },\r\n        {\r\n            headerName: 'Nombre',\r\n            field: 'empleado_nombre',\r\n            width: 150\r\n        },\r\n        {\r\n            headerName: 'Licencia',\r\n            field: 'licencia',\r\n            width: 120\r\n        },\r\n        {\r\n            headerName: 'Tipo Licencia',\r\n            field: 'tipo_licencia',\r\n            width: 130\r\n        },\r\n        {\r\n            headerName: 'Estatus',\r\n            field: 'estatus',\r\n            width: 150\r\n        },\r\n        {\r\n            headerName: 'Horas Vuelo',\r\n            field: 'horas_vuelo',\r\n            width: 120\r\n        },\r\n        {\r\n            headerName: 'Acción',\r\n            cellRenderer: function (params) {\r\n                const editButton = document.createElement('I');\r\n                editButton.className = \"fa-regular fa-pen-to-square btn btn-editar\";\r\n                editButton.title = 'Editar';\r\n\r\n                // Datos a Editar\r\n                editButton.addEventListener('click', async function () {\r\n                    await mostrarContenedorAltas();\r\n\r\n                    $('#piloto_id').val(params.data.piloto_id);\r\n                    $('#licencia').val(params.data.licencia);\r\n                    $('#tipo_licencia').val(params.data.tipo_licencia);\r\n                    $('#vence_licencia').val(params.data.vence_licencia);\r\n                    $('#horas_vuelo').val(params.data.horas_vuelo);\r\n                    $('#estatus').val(params.data.estatus);\r\n\r\n                    $('#empleado_id option').val(params.data.empleado_id);\r\n                    $('#empleado_id option').text(params.data.empleado_nombre);\r\n                });\r\n\r\n                const actionContainer = document.createElement('div');\r\n                actionContainer.classList = \"btn-cont centrado\";\r\n                actionContainer.appendChild(editButton);\r\n\r\n                return actionContainer;\r\n            },\r\n            width: 150,\r\n            headerClass: 'txt-center',\r\n            cellClass: 'custom-action-cell', // Agregar la clase CSS 'custom-action-cell' a todas las celdas en esta columna\r\n            filter: false\r\n        }\r\n    ];\r\n\r\n    let data = '';\r\n    iniciarTabla(data, columnDefs, '#myGrid');\r\n    traePilotos();\r\n}\r\n\r\nfunction resetForm() {\r\n    cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n}\r\n\r\nasync function mostrarContenedorAltas() {\r\n    $(\".contenedor-altas\").show();\r\n    await obtenerEmpleados();\r\n}\r\n\r\nasync function traePilotos() {\r\n    try {\r\n        const respuesta = await fetch('allPilotos', {\r\n            method: 'GET',\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        let convert = verificarArray (data);\r\n        gridApi.setGridOption('rowData', convert);\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalToast('warning', 'Error al obtener los datos', 2500);\r\n    }\r\n}\r\n\r\nasync function obtenerEmpleados() {\r\n    try {\r\n        const respuesta = await fetch('empleados/activos', {\r\n            method: 'GET'\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        if (!data.length > 0) SwalToast('warning', 'No hay Programas disponibles.', 2500);\r\n\r\n        return data;\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\n\r\nasync function crearPiloto() {\r\n\r\n    const licencia = $('#licencia').val();\r\n    const tipo_licencia = $('#tipo_licencia').val();\r\n    const vence_licencia = $('#vence_licencia').val();\r\n    const horas_vuelo = $('#horas_vuelo').val();\r\n    const empleado_id = $('#empleado_id').val();\r\n    const estatus = $('#estatus').val();\r\n\r\n    try {\r\n\r\n        const datos = new FormData();\r\n        datos.append('licencia', licencia);\r\n        datos.append('tipo_licencia', tipo_licencia);\r\n        datos.append('vence_licencia', vence_licencia);\r\n        datos.append('horas_vuelo', horas_vuelo);\r\n        datos.append('empleado_id', empleado_id);\r\n        datos.append('estatus', estatus);\r\n\r\n        const respuesta = await fetch('crear/piloto', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        if (data.exito == 1) {\r\n            // Registro Creado Exitosamente\r\n            SwalLoad('success', 'Éxito', 'Registro Creado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                resetForm();\r\n                traePilotos();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}\r\n\r\nasync function actualizarPiloto() {\r\n\r\n    const piloto_id = $('#piloto_id').val();\r\n    const licencia = $('#licencia').val();\r\n    const tipo_licencia = $('#tipo_licencia').val();\r\n    const vence_licencia = $('#vence_licencia').val();\r\n    const horas_vuelo = $('#horas_vuelo').val();\r\n    const empleado_id = $('#empleado_id').val();\r\n    const estatus = $('#estatus').val();\r\n\r\n    try {\r\n\r\n        const datos = new FormData();\r\n        datos.append('piloto_id', piloto_id);\r\n        datos.append('licencia', licencia);\r\n        datos.append('tipo_licencia', tipo_licencia);\r\n        datos.append('vence_licencia', vence_licencia);\r\n        datos.append('horas_vuelo', horas_vuelo);\r\n        datos.append('empleado_id', empleado_id);\r\n        datos.append('estatus', estatus);\r\n\r\n        const respuesta = await fetch('actualizar/piloto', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n\r\n        if (data.exito == 1) {\r\n            // Registro Creado Exitosamente\r\n            SwalLoad('success', 'Éxito', 'Registro Actualizado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                resetForm();\r\n                traePilotos();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n\r\n}"]}