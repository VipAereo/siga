{"version":3,"sources":["programas.js"],"names":["gridOptions","asignarEventos","$","hide","document","addEventListener","e","key","querySelector","resetLista","cerrarVentana","getElementById","async","event","preventDefault","show","focus","data","obtenerMenu","verificarPrograma","mostrarListaSearch","keydown","keyCode","columns","datoKey","createDataTable","console","log","optionElement","children","value","text","configurarBotones","click","mostrarContenedorAltas","validateInputs","val","crearPrograma","actualizaPrograma","inicializarPagina","iniciarTabla","headerName","field","width","cellRenderer","params","editButton","createElement","className","title","programa_id","nombre","ruta","nivel","padre","nombre_padre","actionContainer","classList","appendChild","headerClass","cellClass","filter","traerProgramas","respuesta","fetch","method","json","convert","verificarArray","gridApi","setGridOption","error","SwalToast","length","SwalLoad","datos","FormData","append","body","exito","setTimeout","swal","close","errorSMS","alertas","progVerificar","Number","parseInt","progId"],"mappings":"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","file":"programas.js","sourcesContent":["let gridOptions;\r\n\r\n// Utilizando el Principio de Modularidad\r\n$(function () {\r\n    asignarEventos();\r\n    inicializarPagina();\r\n    configurarBotones();\r\n});\r\n\r\nfunction asignarEventos() {\r\n    $('.menuSearch').hide();\r\n\r\n    document.addEventListener(\"keydown\", e => {\r\n        if (e.key === 'Escape') {\r\n            let isList = document.querySelector('.contenedorKey');\r\n            // existe algun listado, cerrar ese \r\n            if (!isList) {\r\n                cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n            } else {\r\n                resetLista('#listKey');\r\n            }\r\n        }\r\n    });\r\n\r\n    // Lista Search\r\n    document.getElementById(\"padre\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        $('.menuSearch').show();\r\n        $('.inMenuSrch').focus()\r\n        let data = await obtenerMenu();\r\n        const listSearch = await mostrarListaSearch(data, '.menuSearch', 'programa_id', 'nombre');\r\n        verificarPrograma(listSearch);\r\n    });\r\n\r\n    // List Key - DataTables\r\n    $(\".inMenuSrch\").keydown(async (e) => {\r\n        if (e.keyCode === 114) {\r\n            e.preventDefault();\r\n            const data = await obtenerMenu();\r\n            const columns = ['programa_id', 'nombre', 'nivel'];\r\n            // const columns = [{ 'Nombre': 'nombre' }, { 'Nivel': 'nivel' }];\r\n            let datoKey = await createDataTable(data, columns, '600', '400', 'Menú');\r\n            console.log(datoKey);\r\n\r\n            if (datoKey) {\r\n                var optionElement = document.getElementById(\"padre\");\r\n                optionElement.children[0].value = datoKey[0];\r\n                optionElement.children[0].text = datoKey[1];\r\n                await verificarPrograma(datoKey);\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction configurarBotones() {\r\n    $(\".contenedor-altas\").hide();\r\n    $(\"#crear-programa\").click(mostrarContenedorAltas);\r\n    $(\"#btnCancel\").click(e => {\r\n        // limpiarForm(\"#formAltas\");\r\n        cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n        $(\".contenedor-altas\").hide();\r\n    });\r\n    $(\"#btnGuardar\").click(e => {\r\n        let validar = validateInputs($('#formAltas'));\r\n        if (validar) $('#programa_id').val() == '' ? crearPrograma() : actualizaPrograma();\r\n    });\r\n}\r\nfunction inicializarPagina() {\r\n\r\n    let columnDefs = [\r\n        {\r\n            headerName: 'id',\r\n            field: 'programa_id',\r\n            width: 60\r\n        },\r\n        {\r\n            headerName: 'Nombre',\r\n            field: 'nombre',\r\n            width: 150\r\n        },\r\n        {\r\n            headerName: 'Padre',\r\n            field: 'nombre_padre',\r\n            width: 150\r\n        },\r\n        {\r\n            headerName: 'Nivel',\r\n            field: 'nivel',\r\n            width: 80\r\n        },\r\n        {\r\n            headerName: 'Ruta',\r\n            field: 'ruta',\r\n            width: 150\r\n        },\r\n        {\r\n            headerName: 'Fecha de Creación',\r\n            field: 'fecha_creacion',\r\n            width: 140\r\n        },\r\n        {\r\n            headerName: 'Acción',\r\n            cellRenderer: function (params) {\r\n                const editButton = document.createElement('I');\r\n                editButton.className = \"fa-regular fa-pen-to-square btn btn-editar\";\r\n                editButton.title = 'Editar';\r\n\r\n                editButton.addEventListener('click', async function () {\r\n                    await mostrarContenedorAltas();\r\n\r\n                    $('#programa_id').val(params.data.programa_id);\r\n                    $('#nombre').val(params.data.nombre);\r\n                    $('#ruta').val(params.data.ruta);\r\n                    $('#nivel').val(params.data.nivel);\r\n\r\n                    $('#padre option').val(params.data.padre);\r\n                    $('#padre option').text(params.data.nombre_padre);\r\n                });\r\n\r\n                // Crea un contenedor para los botones y los agrega\r\n                const actionContainer = document.createElement('div');\r\n                actionContainer.classList = \"btn-cont centrado\";\r\n                actionContainer.appendChild(editButton);\r\n\r\n                return actionContainer;\r\n            },\r\n            width: 150,\r\n            headerClass: 'txt-center',\r\n            cellClass: 'custom-action-cell', // Agregar la clase CSS 'custom-action-cell' a todas las celdas en esta columna\r\n            filter: false\r\n        },\r\n    ];\r\n\r\n    let data = '';\r\n    iniciarTabla(data, columnDefs, '#myGrid');\r\n    traerProgramas();\r\n}\r\n\r\n/*  FUNCIONES  */\r\nasync function traerProgramas() {\r\n\r\n    try {\r\n        const respuesta = await fetch('allProgramas', {\r\n            method: 'GET',\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n        let convert = verificarArray (data);\r\n        gridApi.setGridOption('rowData', convert);\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalToast('warning', 'Error al obtener los usuarios', 2500);\r\n    }\r\n}\r\nasync function mostrarContenedorAltas() {\r\n    let tabla = $(\".contenedor-altas\").show();\r\n}\r\nasync function obtenerMenu() {\r\n\r\n    try {\r\n        const respuesta = await fetch('/allProgramas', {\r\n            method: 'GET'\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        if (!data.length > 0) {\r\n            SwalToast('warning', 'No hay Programas disponibles.', 2500);\r\n        }\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\nasync function crearPrograma() {\r\n\r\n    const nombre = $('#nombre').val();\r\n    const ruta = $('#ruta').val();\r\n    const padre = $('#padre').val();\r\n    const nivel = $('#nivel').val();\r\n\r\n    try {\r\n        const datos = new FormData();\r\n        datos.append('nombre', nombre);\r\n        datos.append('ruta', ruta);\r\n        datos.append('padre', padre);\r\n        datos.append('nivel', nivel);\r\n\r\n        const respuesta = await fetch('crear/programa', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n\r\n        if (data.exito == 1) {\r\n            // Registro Creado Exitosamente\r\n            SwalLoad('success', 'Éxito', 'Programa Creado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n                traerProgramas();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n            cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}\r\nasync function actualizaPrograma() {\r\n\r\n    const programa_id = $('#programa_id').val();\r\n    const nombre = $('#nombre').val();\r\n    const ruta = $('#ruta').val();\r\n    const padre = $('#padre').val();\r\n    const nivel = $('#nivel').val();\r\n\r\n    try {\r\n\r\n        const datos = new FormData();\r\n        datos.append('programa_id', programa_id);\r\n        datos.append('nombre', nombre);\r\n        datos.append('ruta', ruta);\r\n        datos.append('padre', padre);\r\n        datos.append('nivel', nivel);\r\n\r\n        const respuesta = await fetch('actualizar/programa', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        if (data.exito == 1) {\r\n            // Registro Creado Exitosamente\r\n            SwalLoad('success', 'Éxito', 'Programa Actualizado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n                traerProgramas();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}\r\nasync function verificarPrograma(datos) {\r\n    progVerificar();\r\n    $(\"#nivel\").val(Number(datos.nivel) ? parseInt(datos.nivel) + 1 : 1);\r\n}\r\nasync function progVerificar() {\r\n\r\n    let progId = $('#padre').val();\r\n\r\n    try {\r\n        const datos = new FormData();\r\n        datos.append('progId', progId);\r\n\r\n        const respuesta = await fetch('verificar/programa', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n\r\n        if (data == 1) {\r\n            SwalToast('warning', 'El Menú ya tiene una ruta.', 2500);\r\n            $('#padre').val('');\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n\r\n\r\n}\r\n"]}