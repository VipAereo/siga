{"version":3,"sources":["tasaAterrizaje.js"],"names":["gridOptions","asignarEventos","$","hide","document","addEventListener","e","key","resetForm","seleccionTxt","aplicarMascaraCantidad","on","each","valor","Number","this","val","replace","getElementById","async","event","preventDefault","show","focus","data","obtenerAeropuertos","mostrarListaSearch","obtenerAeronaves","configurarBotones","click","mostrarContenedorAltas","validateInputs","crearTasa","actualizarTasa","inicializarPagina","iniciarTabla","headerName","field","width","cellStyle","textAlign","valueFormatter","params","value","toFixed","cellRenderer","editButton","createElement","className","title","tasa_aterrizaje_id","conComa","tarifa_aterrizaje","aeropuerto_id","text","nombre_aeropuerto","aeronave_id","nombre_aeronave","actionContainer","classList","appendChild","headerClass","cellClass","filter","traeTasaAterrizaje","cerrarVentana","respuesta","fetch","method","json","convert","verificarArray","gridApi","setGridOption","error","console","SwalToast","length","SwalLoad","sinComa","datos","FormData","append","body","exito","setTimeout","swal","close","errorSMS","alertas"],"mappings":"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","file":"tasaAterrizaje.js","sourcesContent":["let gridOptions;\r\n\r\n// Utilizando el Principio de Modularidad\r\n$(function () {\r\n    asignarEventos();\r\n    inicializarPagina();\r\n    configurarBotones();\r\n});\r\n\r\nfunction asignarEventos() {\r\n    // Ocultar Listados\r\n    $('.aeropSearch').hide();\r\n    $('.naveSearch').hide();\r\n\r\n    document.addEventListener(\"keydown\", e => {\r\n        if (e.key === 'Escape') {\r\n            resetForm();\r\n        }\r\n    });\r\n\r\n    seleccionTxt('tarifa_aterrizaje');\r\n    aplicarMascaraCantidad('tarifa_aterrizaje');\r\n\r\n    $('#tarifa_aterrizaje').on('input', function () {\r\n        var total = 0;\r\n        // Suma los valores de los tres campos de entrada\r\n        $('#tarifa_aterrizaje').each(function () {\r\n            let valor = Number($(this).val().replace(/,/g, ''));\r\n            total += valor;\r\n        });\r\n    });\r\n\r\n    // Lista Aeropuertos\r\n    document.getElementById(\"aeropuerto_id\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        $('.aeropSearch').show();\r\n        $('.inAeropSrch').focus()\r\n        let data = await obtenerAeropuertos();\r\n        const listSearch = await mostrarListaSearch(data, '.aeropSearch', 'aeropuerto_id', 'municipio');\r\n    });\r\n\r\n    // Lista Aeronaves\r\n    document.getElementById(\"aeronave_id\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        $('.naveSearch').show();\r\n        $('.inNaveSrch').focus()\r\n        let data = await obtenerAeronaves();\r\n        const listSearch = await mostrarListaSearch(data, '.naveSearch', 'aeronave_id', 'modelo');\r\n    });   \r\n}\r\n\r\nfunction configurarBotones() {\r\n    $(\".contenedor-altas\").hide();\r\n    $(\"#crear-tasa\").click(mostrarContenedorAltas);\r\n\r\n    $(\".btn-cancelar\").click(e => {\r\n        resetForm();\r\n    });\r\n\r\n    $(\"#btnGuardar\").click(e => {\r\n        let validar = validateInputs($('#formAltas'));\r\n        if (validar) $('#tasa_aterrizaje_id').val() == '' ? crearTasa() : actualizarTasa();\r\n    });\r\n}\r\nfunction inicializarPagina() {\r\n    let columnDefs = [\r\n        {\r\n            headerName: 'id',\r\n            field: 'tasa_aterrizaje_id',\r\n            width: 80\r\n        },\r\n        {\r\n            headerName: 'Aeropuerto ',\r\n            field: 'nombre_aeropuerto',\r\n            width: 190,\r\n        },\r\n        {\r\n            headerName: 'Aeronave',\r\n            field: 'nombre_aeronave',\r\n            width: 120,\r\n        },\r\n        {\r\n            headerName: 'Tarifa de Aterrizaje',\r\n            field: 'tarifa_aterrizaje',\r\n            width: 160,\r\n            cellStyle: { textAlign: 'right' }, // Alinea los datos a la derecha\r\n            valueFormatter: function (params) {\r\n                // Formatea el número con comas como separadores de miles y dos decimales\r\n                return Number(params.value).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n            }\r\n        },\r\n        {\r\n            headerName: 'Acción',\r\n            cellRenderer: function (params) {\r\n                const editButton = document.createElement('I');\r\n                editButton.className = \"fa-regular fa-pen-to-square btn btn-editar\";\r\n                editButton.title = 'Editar';\r\n\r\n                // Datos a Editar\r\n                editButton.addEventListener('click', async function () {\r\n                    await mostrarContenedorAltas();\r\n\r\n                    $('#tasa_aterrizaje_id').val(params.data.tasa_aterrizaje_id);\r\n                    $('#tarifa_aterrizaje').val(conComa(params.data.tarifa_aterrizaje));\r\n                \r\n                    $('#aeropuerto_id option').val(params.data.aeropuerto_id);\r\n                    $('#aeropuerto_id option').text(params.data.nombre_aeropuerto);\r\n\r\n                    $('#aeronave_id option').val(params.data.aeronave_id);\r\n                    $('#aeronave_id option').text(params.data.nombre_aeronave);\r\n                });\r\n\r\n                const actionContainer = document.createElement('div');\r\n                actionContainer.classList = \"btn-cont centrado\";\r\n                actionContainer.appendChild(editButton);\r\n\r\n                return actionContainer;\r\n            },\r\n            width: 150,\r\n            headerClass: 'txt-center',\r\n            cellClass: 'custom-action-cell', // Agregar la clase CSS 'custom-action-cell' a todas las celdas en esta columna\r\n            filter: false\r\n        }\r\n    ];\r\n\r\n    let data = '';\r\n    iniciarTabla(data, columnDefs, '#myGrid');\r\n    traeTasaAterrizaje();\r\n}\r\n\r\n// FUNCIONES\r\nfunction resetForm() {\r\n    cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n}\r\nasync function mostrarContenedorAltas() {\r\n    $(\".contenedor-altas\").show();\r\n    await obtenerAeropuertos();\r\n    await obtenerAeronaves();\r\n}\r\nasync function traeTasaAterrizaje() {\r\n    try {\r\n        const respuesta = await fetch('allTasaAt', {\r\n            method: 'GET',\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        let convert = verificarArray (data);\r\n        gridApi.setGridOption('rowData', convert);\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalToast('warning', 'Error al obtener los datos', 2500);\r\n    }\r\n}\r\nasync function obtenerAeropuertos() {\r\n    try {\r\n        const respuesta = await fetch('allAeropuertos', {\r\n            method: 'GET'\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        if (!data.length > 0) SwalToast('warning', 'No hay Aeropuertos disponibles.', 2500);\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\nasync function obtenerAeronaves() {\r\n    try {\r\n        const respuesta = await fetch('allAeronaves', {\r\n            method: 'GET'\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        if (!data.length > 0) SwalToast('warning', 'No hay Aeronaves disponibles.', 2500);\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\nasync function crearTasa() {\r\n\r\n    const aeropuerto_id = $('#aeropuerto_id').val();\r\n    const aeronave_id = $('#aeronave_id').val();\r\n    const tarifa_aterrizaje = sinComa($('#tarifa_aterrizaje').val());\r\n\r\n    try {\r\n\r\n        const datos = new FormData();\r\n        datos.append('aeropuerto_id', aeropuerto_id);\r\n        datos.append('aeronave_id', aeronave_id);\r\n        datos.append('tarifa_aterrizaje', tarifa_aterrizaje);\r\n\r\n        const respuesta = await fetch('crear/tasaAterrizaje', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        if (data.exito == 1) {\r\n            // Registro Creado Exitosamente\r\n            SwalLoad('success', 'Éxito', 'Registro Creado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                resetForm();\r\n                traeTasaAterrizaje();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}\r\nasync function actualizarTasa() {\r\n\r\n    const tasa_aterrizaje_id = $('#tasa_aterrizaje_id').val();\r\n    const aeropuerto_id = $('#aeropuerto_id').val();\r\n    const aeronave_id = $('#aeronave_id').val();\r\n    const tarifa_aterrizaje = sinComa($('#tarifa_aterrizaje').val());\r\n\r\n    try {\r\n\r\n        const datos = new FormData();\r\n        datos.append('tasa_aterrizaje_id', tasa_aterrizaje_id);\r\n        datos.append('aeropuerto_id', aeropuerto_id);\r\n        datos.append('aeronave_id', aeronave_id);\r\n        datos.append('tarifa_aterrizaje', tarifa_aterrizaje);\r\n\r\n        const respuesta = await fetch('actualizar/tasaAterrizaje', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n\r\n        if (data.exito == 1) {\r\n            // Registro Creado Exitosamente\r\n            SwalLoad('success', 'Éxito', 'Registro Actualizado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                resetForm();\r\n                traeTasaAterrizaje();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}"]}