{"version":3,"sources":["departamentos.js"],"names":["gridOptions","asignarEventos","document","addEventListener","e","key","cerrarVentana","configurarBotones","$","hide","click","mostrarContenedorAltas","limpiarForm","validateInputs","val","crearDepa","actualizarDepa","inicializarPagina","iniciarTabla","headerName","field","width","cellRenderer","params","editButton","createElement","className","title","async","data","departamento_id","nombre","estatus","actionContainer","classList","appendChild","headerClass","cellClass","filter","traerDepartamentos","respuesta","fetch","method","json","convert","verificarArray","gridApi","setGridOption","error","console","SwalToast","show","datos","FormData","append","body","exito","SwalLoad","setTimeout","swal","close","errorSMS","alertas"],"mappings":"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","file":"departamentos.js","sourcesContent":["let gridOptions;\r\n\r\n// Utilizando el Principio de Modularidad\r\n$(function () {\r\n    asignarEventos();\r\n    inicializarPagina();\r\n    configurarBotones();\r\n});\r\n\r\nfunction asignarEventos() {\r\n    document.addEventListener(\"keydown\", e => {\r\n        if (e.key === 'Escape') {\r\n            cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n        }\r\n    });\r\n}\r\n\r\nfunction configurarBotones() {\r\n    $(\".contenedor-altas\").hide();\r\n\r\n    $(\"#crear-departamento\").click(mostrarContenedorAltas);\r\n\r\n    $(\"#btnCancel\").click(e => {\r\n        limpiarForm(\"#formAltas\");\r\n        $(\".contenedor-altas\").hide();\r\n    });\r\n\r\n    $(\"#btnGuardar\").click(e => {\r\n        let validar = validateInputs($('#formAltas'));\r\n        if (validar) $('#departamento_id').val() == '' ? crearDepa() : actualizarDepa();\r\n    });\r\n}\r\n\r\nfunction inicializarPagina() {\r\n\r\n    let columnDefs = [\r\n        {\r\n            headerName: 'id',\r\n            field: 'departamento_id',\r\n            width: 80\r\n        },\r\n        {\r\n            headerName: 'Nombre',\r\n            field: 'nombre',\r\n            width: 150\r\n        },\r\n        {\r\n            headerName: 'Estatus',\r\n            field: 'estatus',\r\n            width: 100\r\n        },\r\n        {\r\n            headerName: 'Fecha de Creación',\r\n            field: 'fecha_creacion',\r\n            width: 160\r\n        },\r\n        {\r\n            headerName: 'Acción',\r\n            cellRenderer: function (params) {\r\n                const editButton = document.createElement('I');\r\n                editButton.className = \"fa-regular fa-pen-to-square btn btn-editar\";\r\n                editButton.title = 'Editar';\r\n\r\n                editButton.addEventListener('click', async function () {\r\n                    await mostrarContenedorAltas();\r\n\r\n                    $('#departamento_id').val(params.data.departamento_id);\r\n                    $('#nombre').val(params.data.nombre);\r\n                    $('#estatus').val(params.data.estatus);\r\n\r\n                });\r\n\r\n                // Crea un contenedor para los botones y los agrega\r\n                const actionContainer = document.createElement('div');\r\n                actionContainer.classList = \"btn-cont centrado\";\r\n                actionContainer.appendChild(editButton);\r\n\r\n                return actionContainer;\r\n            },\r\n            width: 150,\r\n            headerClass: 'txt-center',\r\n            cellClass: 'custom-action-cell', // Agregar la clase CSS 'custom-action-cell' a todas las celdas en esta columna\r\n            filter: false\r\n        },\r\n    ];\r\n\r\n    let data = '';\r\n    iniciarTabla(data, columnDefs, '#myGrid');\r\n    traerDepartamentos();\r\n}\r\n\r\nasync function traerDepartamentos() {\r\n\r\n    try {\r\n        const respuesta = await fetch('allDepartamentos', {\r\n            method: 'GET',\r\n        });\r\n        const data = await respuesta.json();\r\n\r\n        let convert = verificarArray (data);\r\n        gridApi.setGridOption('rowData', convert);\r\n        \r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalToast('warning', 'Error al obtener los usuarios', 2500);\r\n    }\r\n}\r\n\r\nasync function mostrarContenedorAltas() {\r\n    $(\".contenedor-altas\").show();\r\n}\r\n\r\nasync function crearDepa() {\r\n\r\n    const nombre = $('#nombre').val();\r\n    const estatus = $('#estatus').val();\r\n\r\n    try {\r\n        const datos = new FormData();\r\n        datos.append('nombre', nombre);\r\n        datos.append('estatus', estatus);\r\n\r\n        const respuesta = await fetch('crear/departamento', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n\r\n        if (data.exito == 1) {\r\n            // Registro Creado Exitosamente\r\n            SwalLoad('success', 'Éxito', 'Departamento Creado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n                traerDepartamentos();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n            cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}\r\n\r\nasync function actualizarDepa() {\r\n\r\n    const departamento_id = $('#departamento_id').val();\r\n    const nombre = $('#nombre').val();\r\n    const estatus = $('#estatus').val();\r\n\r\n    try {\r\n\r\n        const datos = new FormData();\r\n        datos.append('departamento_id', departamento_id);\r\n        datos.append('nombre', nombre);\r\n        datos.append('estatus', estatus);\r\n\r\n        const respuesta = await fetch('actualizar/departamento', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n        const data = await respuesta.json();\r\n\r\n        if (data.exito == 1) {\r\n            // Registro Creado Exitosamente\r\n            SwalLoad('success', 'Éxito', 'Departamento Actualizado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n                traerDepartamentos();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}\r\n"]}