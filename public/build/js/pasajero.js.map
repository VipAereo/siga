{"version":3,"sources":["pasajero.js"],"names":["gridOptions","asignarEventos","$","hide","document","addEventListener","e","key","resetForm","configurarBotones","click","mostrarContenedorAltas","validateInputs","val","crearPax","actualizarPax","async","inicializarPagina","columnDefs","headerName","field","width","cellRenderer","params","value","headerClass","cellClass","filter","editButton","createElement","className","title","data","pasajero_id","nombre","nacionalidad","docs","obtenerDocsbyPax","container","getElementById","length","crearElementoDocumento","actionContainer","classList","appendChild","iniciarTabla","traerPasajeros","show","empty","cerrarVentana","forEach","doc","enlace","add","href","ruta","hash_doc","tipo_doc","setAttribute","divIcon","icon","divName","name","textContent","nombre_doc","respuesta","fetch","method","json","convert","verificarArray","gridApi","setGridOption","error","console","SwalToast","id","datos","FormData","append","body","SwalLoad","docPax","files","exito","setTimeout","swal","close","errorSMS","alertas"],"mappings":"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","file":"pasajero.js","sourcesContent":["let gridOptions;\r\n\r\n// Utilizando el Principio de Modularidad\r\n$(function () {\r\n    asignarEventos();\r\n    inicializarPagina();\r\n    configurarBotones();\r\n});\r\nfunction asignarEventos() {\r\n    $(\".contenedor-altas\").hide();\r\n\r\n    // Esc Cerrar\r\n    document.addEventListener(\"keydown\", e => {\r\n        if (e.key === 'Escape') {\r\n            // Limpiar Ruta\r\n            resetForm();\r\n        }\r\n    });\r\n\r\n}\r\nfunction configurarBotones() {\r\n    $(\"#crear-pax\").click(mostrarContenedorAltas);\r\n\r\n    $(\".btn-cancelar\").click(e => {\r\n        resetForm();\r\n    });\r\n\r\n    $(\"#btnGuardar\").click(e => {\r\n        let validar = validateInputs($('#formAltas'));\r\n        if (validar) $('#pasajero_id').val() == '' ? crearPax() : actualizarPax();\r\n    });\r\n}\r\n\r\n// Ag-Grid \r\nasync function inicializarPagina() {\r\n\r\n\r\n    let columnDefs = [\r\n        {\r\n            headerName: 'id',\r\n            field: 'pasajero_id',\r\n            width: 80\r\n        },\r\n        {\r\n            headerName: 'Nombre',\r\n            field: 'nombre',\r\n            width: 250\r\n        },\r\n        {\r\n            headerName: 'Nacionalidad',\r\n            field: 'nacionalidad',\r\n            width: 150,\r\n            cellRenderer: function (params) {\r\n                if (params.value === 'N') {\r\n                    return 'Nacional';\r\n                } else if (params.value === 'I') {\r\n                    return 'Internacional';\r\n                } else {\r\n                    return params.value; // Mantener el valor original si no es 'N' ni 'I'\r\n                }\r\n            }\r\n        },\r\n        // {\r\n        //     headerName: 'Documento',\r\n        //     field: 'ver doc..',\r\n        //     width: 140\r\n        // },\r\n        {\r\n            headerName: 'Acción',\r\n            width: 155,\r\n            headerClass: 'txt-center',\r\n            cellClass: 'custom-action-cell', // Agregar la clase CSS 'custom-action-cell' a todas las celdas en esta columna\r\n            filter: false,\r\n            cellRenderer: function (params) {\r\n                const editButton = document.createElement('I');\r\n                editButton.className = \"fa-regular fa-pen-to-square btn btn-editar\";\r\n                editButton.title = 'Editar';\r\n\r\n                // Datos a Editar\r\n                editButton.addEventListener('click', async function () {\r\n                    await mostrarContenedorAltas();\r\n\r\n                    $('#pasajero_id').val(params.data.pasajero_id);\r\n                    $('#nombre').val(params.data.nombre);\r\n                    $('#nacionalidad').val(params.data.nacionalidad);\r\n\r\n                    const docs = await obtenerDocsbyPax(params.data.pasajero_id);\r\n                    const container = document.getElementById('contenedor-docs');\r\n\r\n                    if (docs.length > 0) { const elementoDocumento = crearElementoDocumento(docs, container); }\r\n\r\n                });\r\n\r\n                const actionContainer = document.createElement('div');\r\n                actionContainer.classList = \"btn-cont centrado\";\r\n                actionContainer.appendChild(editButton);\r\n\r\n                return actionContainer;\r\n            }\r\n        }\r\n    ];\r\n\r\n    let data = '';\r\n    await iniciarTabla(data, columnDefs, '#myGrid');\r\n    traerPasajeros();\r\n}\r\n\r\n// Funciones\r\nasync function mostrarContenedorAltas() {\r\n    $(\".contenedor-altas\").show();\r\n}\r\nfunction resetForm() {\r\n    $('#contenedor-docs').empty();\r\n    cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n}\r\n// Función para crear un elemento HTML representando un documento\r\nfunction crearElementoDocumento(docs, container) {\r\n    docs.forEach(doc => {\r\n\r\n        const enlace = document.createElement('a');\r\n        enlace.classList.add('thumbnail');\r\n        enlace.href = `/${doc.ruta}/${doc.hash_doc}.${doc.tipo_doc}`;\r\n        enlace.setAttribute('target', '_blank'); // Abre el enlace en una nueva pestaña\r\n\r\n        const divIcon = document.createElement('DIV');\r\n        divIcon.classList.add('fileicon');\r\n\r\n        const icon = document.createElement('I');\r\n        icon.classList.add('fa-regular', 'fa-file');\r\n\r\n        const divName = document.createElement('DIV');\r\n        divName.classList.add('filename');\r\n\r\n        const name = document.createElement('P');\r\n        name.textContent = `${doc.nombre_doc}`;\r\n\r\n        divIcon.appendChild(icon);\r\n        divName.appendChild(name);\r\n        enlace.appendChild(divIcon);\r\n        enlace.appendChild(divName);\r\n\r\n        container.appendChild(enlace);\r\n    });\r\n}\r\n\r\n// Fetch \r\nasync function traerPasajeros() {\r\n    try {\r\n        const respuesta = await fetch('obtener/pasajeros', {\r\n            method: 'GET',\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        let convert = verificarArray(data);\r\n        gridApi.setGridOption('rowData', convert);\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalToast('warning', 'Error al obtener los datos', 2500);\r\n    }\r\n}\r\nasync function obtenerDocsbyPax(id) {\r\n\r\n    try {\r\n\r\n        const datos = new FormData();\r\n        datos.append('pasajero_id', id);\r\n\r\n        const respuesta = await fetch('obtener/pasajerosDocs', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n        // if (!data.length > 0) SwalToast('warning', 'No hay Documentos disponibles.', 2500);\r\n\r\n        return data\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}\r\nasync function crearPax() {\r\n\r\n    try {\r\n        const nombre = $('#nombre').val();\r\n        const nacionalidad = $('#nacionalidad').val();\r\n        const docPax = $('#docPax')[0].files[0];  // Asegurarse de obtener el archivo correctamente\r\n\r\n        const datos = new FormData();\r\n        datos.append('nombre', nombre);\r\n        datos.append('nacionalidad', nacionalidad);\r\n        datos.append(`archivo`, docPax);\r\n\r\n        const respuesta = await fetch('crear/pax', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n\r\n        if (data.exito == 1) {\r\n            SwalLoad('success', 'Éxito', 'Registro Creado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                resetForm();\r\n                traerPasajeros();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n\r\n}\r\nasync function actualizarPax() {\r\n\r\n    try {\r\n        const pasajero_id = $('#pasajero_id').val();\r\n        const nombre = $('#nombre').val();\r\n        const nacionalidad = $('#nacionalidad').val();\r\n        const docPax = $('#docPax')[0].files[0];\r\n\r\n        const datos = new FormData();\r\n        datos.append('pasajero_id', pasajero_id);\r\n        datos.append('nombre', nombre);\r\n        datos.append('nacionalidad', nacionalidad);\r\n        datos.append(`archivo`, docPax);\r\n\r\n        const respuesta = await fetch('actualizar/pax', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n\r\n        if (data.exito == 1) {\r\n            SwalLoad('success', 'Éxito', 'Registro Actualizado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                resetForm();\r\n                traerPasajeros();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}\r\n"]}