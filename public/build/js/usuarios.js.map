{"version":3,"sources":["usuarios.js"],"names":["gridOptions","asignarEventos","$","hide","document","addEventListener","e","key","cerrarVentana","getElementById","async","event","preventDefault","show","focus","data","obtenerEmpleados","mostrarListaSearch","obtenerRoles","configurarBotones","click","mostrarContenedorAltas","limpiarForm","validateInputs","val","crearUsuario","actualizarUsuario","inicializarPagina","iniciarTabla","headerName","field","width","filter","cellRenderer","params","editButton","createElement","className","title","usuario_id","nombre_completo","nombre_user","estatus","rol_id","text","rol_nombre","empleado_id","empleado_nombre","actionContainer","classList","appendChild","headerClass","cellClass","traerUsuarios","onQuickFilterChanged","newValue","value","gridApi","updateGridOptions","quickFilterText","respuesta","fetch","method","json","map","usuario","convert","verificarArray","setGridOption","error","console","SwalToast","password","datos","FormData","append","body","exito","SwalLoad","setTimeout","swal","close","errorSMS","alertas","userId","empleadoId","rolId","length","eliminarUser"],"mappings":"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","file":"usuarios.js","sourcesContent":["\r\nlet gridOptions;\r\n\r\n// Utilizando el Principio de Modularidad\r\n$(function () {\r\n    asignarEventos();\r\n    inicializarPagina();\r\n    configurarBotones();\r\n});\r\n\r\nfunction asignarEventos() {\r\n    // Ocultar Listados\r\n    $('.empleadoSearch').hide();\r\n    $('.rolSearch').hide();\r\n\r\n    document.addEventListener(\"keydown\", e => {\r\n        if (e.key === 'Escape') {\r\n            cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n        }\r\n    });\r\n\r\n    // Lista Search\r\n    document.getElementById(\"empleado_user\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        $('.empleadoSearch').show();\r\n        $('.inEmplSrch').focus()\r\n        let data = await obtenerEmpleados();\r\n        const listSearch = await mostrarListaSearch(data, '.empleadoSearch', 'empleado_id', 'nombre');\r\n    });\r\n\r\n    // Lista Roles\r\n    document.getElementById(\"rol_user\").addEventListener(\"mousedown\", async function (event) {\r\n        event.preventDefault();\r\n        $('.rolSearch').show();\r\n        $('.inRollSrch').focus()\r\n        let data = await obtenerRoles();\r\n        const listSearch = await mostrarListaSearch(data, '.rolSearch', 'rol_id', 'nombre_rol');\r\n    });\r\n\r\n}\r\n\r\nfunction configurarBotones() {\r\n    // Ocultar altas\r\n    $(\".contenedor-altas\").hide();\r\n    $(\"#crear-usuario\").click(mostrarContenedorAltas);\r\n\r\n    $(\"#btnCancel\").click(e => {\r\n        limpiarForm(\"#formAltas\");\r\n        $(\".contenedor-altas\").hide();\r\n    });\r\n\r\n    $(\"#btnGuardar\").click(e => {\r\n        let validar = validateInputs($('#formAltas'));\r\n        if (validar) $('#usuario_id').val() == '' ? crearUsuario() : actualizarUsuario();\r\n    });\r\n\r\n}\r\n\r\nfunction inicializarPagina() {\r\n\r\n    let columnDefs = [\r\n        {\r\n            headerName: 'id',\r\n            field: 'usuario_id',\r\n            width: 60\r\n        },\r\n        {\r\n            headerName: 'Nombre Completo',\r\n            field: 'nombre_completo',\r\n            width: 150\r\n        },\r\n        {\r\n            headerName: 'Usuario',\r\n            field: 'nombre_user',\r\n            width: 100,\r\n        },\r\n        {\r\n            headerName: 'Empleado',\r\n            field: 'empleado_nombre',\r\n            width: 100\r\n        },\r\n        {\r\n            headerName: 'Rol',\r\n            field: 'rol_nombre',\r\n            width: 120\r\n        },\r\n        {\r\n            headerName: 'Estatus',\r\n            field: 'estatus',\r\n            width: 80\r\n        },\r\n        {\r\n            headerName: 'Fecha Creación',\r\n            field: 'fecha_creacion',\r\n            width: 102,\r\n            filter: 'agDateColumnFilter',\r\n\r\n        },\r\n        {\r\n            headerName: 'Acción',\r\n            cellRenderer: function (params) {\r\n                // const editButton = document.createElement('button');\r\n                const editButton = document.createElement('I');\r\n                editButton.className = \"fa-regular fa-pen-to-square btn btn-editar\";\r\n                editButton.title = 'Editar';\r\n\r\n                editButton.addEventListener('click', async function () {\r\n                    await mostrarContenedorAltas();\r\n\r\n                    $('#usuario_id').val(params.data.usuario_id);\r\n                    $('#nombre_completo').val(params.data.nombre_completo);\r\n                    $('#nombre_user').val(params.data.nombre_user);\r\n                    $('#password').val('none');\r\n                    $('#estatus_user').val(params.data.estatus);\r\n\r\n                    $('#rol_user option').val(params.data.rol_id);\r\n                    $('#rol_user option').text(params.data.rol_nombre);\r\n\r\n                    $('#empleado_user option').val(params.data.empleado_id);\r\n                    $('#empleado_user option').text(params.data.empleado_nombre);\r\n                    // console.log(params.data);\r\n                });\r\n\r\n                // Crea el botón de eliminación\r\n                // const deleteButton = document.createElement('I');\r\n                // deleteButton.className = \"fa-regular fa-trash-can btn btnA-eliminar\";\r\n                // deleteButton.title = 'Eliminar';\r\n\r\n                // deleteButton.addEventListener('click', function () {\r\n                //     // Lógica para eliminar el usuario\r\n                //     // console.log('Eliminar usuario', params.data);\r\n\r\n                //     Swal.fire({\r\n                //         title: 'Eliminar Registro?',\r\n                //         text: \"Los datos seran borrados permanentemente.\",\r\n                //         icon: 'warning',\r\n                //         showCancelButton: true,\r\n                //         confirmButtonColor: '#3085d6',\r\n                //         cancelButtonColor: '#d33',\r\n                //         cancelButtonText: 'Eliminar',\r\n                //         confirmButtonText: 'Cancelar',\r\n                //         allowOutsideClick: false,\r\n                //         allowEscapeKey: false,\r\n                //     }).then((result) => {\r\n                //         console.log(result);\r\n                //         if (result.isDismissed) {\r\n                //             eliminarUser(params.data);\r\n                //         }\r\n                //     });\r\n                // });\r\n\r\n                // Crea un contenedor para los botones y los agrega\r\n                const actionContainer = document.createElement('div');\r\n                actionContainer.classList = \"btn-cont centrado\";\r\n                actionContainer.appendChild(editButton);\r\n                // actionContainer.appendChild(deleteButton);\r\n\r\n                return actionContainer;\r\n            },\r\n            width: 150,\r\n            headerClass: 'txt-center',\r\n            cellClass: 'custom-action-cell', // Agregar la clase CSS 'custom-action-cell' a todas las celdas en esta columna\r\n            filter: false\r\n        },\r\n    ];\r\n    let data = '';\r\n    iniciarTabla(data, columnDefs, '#myGrid');\r\n    traerUsuarios();\r\n}\r\n\r\n/*  FUNCIONES  */\r\nfunction onQuickFilterChanged() {\r\n    var newValue = document.getElementById('quickFilter').value;\r\n    gridApi.updateGridOptions({ quickFilterText: newValue });\r\n}\r\n\r\nasync function traerUsuarios() {\r\n\r\n    try {\r\n        const respuesta = await fetch('/obtener/usuarios', {\r\n            method: 'GET',\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        const nombresUsuarios = data.map(usuario => {\r\n            return { nombre_user: usuario.nombre_user };\r\n        });\r\n\r\n        let convert = verificarArray (data);\r\n        gridApi.setGridOption('rowData', convert);\r\n\r\n        // Inicializar DataTable\r\n        // $('#myTable').DataTable({\r\n        //     data: nombresUsuarios,\r\n        //     columns: [\r\n        //         { title: 'id',data: 'nombre_user' },\r\n        //         { title: 'Nombre de Usuario',data: 'nombre_user' },\r\n        //         { title: 'Nombre Completo',data: 'nombre_user' },\r\n        //         { title: 'Empleado',data: 'nombre_user' },\r\n        //         { title: 'Contraseña',data: 'nombre_user' },\r\n        //         { title: 'Estatus',data: 'nombre_user' },\r\n        //         { title: 'Rol',data: 'nombre_user' },\r\n        //     ]\r\n        // });\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalToast('warning', 'Error al obtener los usuarios', 2500);\r\n    }\r\n}\r\n\r\nasync function mostrarContenedorAltas() {\r\n    $(\".contenedor-altas\").show();\r\n    await obtenerEmpleados();\r\n    await obtenerRoles();\r\n}\r\n\r\nasync function crearUsuario() {\r\n\r\n    const nombre_completo = $('#nombre_completo').val();\r\n    const nombre_user = $('#nombre_user').val();\r\n    const password = $('#password').val();\r\n    const estatus = $('#estatus_user').val();\r\n    const empleado_id = $('#empleado_user').val();\r\n    const rol_id = $('#rol_user').val();\r\n\r\n    // CREAR REGISTRO\r\n    try {\r\n        const datos = new FormData();\r\n        datos.append('nombre_completo', nombre_completo);\r\n        datos.append('nombre_user', nombre_user);\r\n        datos.append('password', password);\r\n        datos.append('estatus', estatus);\r\n        datos.append('empleado_id', empleado_id);\r\n        datos.append('rol_id', rol_id);\r\n\r\n        const respuesta = await fetch('crear/usuario', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n\r\n        const data = await respuesta.json();\r\n\r\n        if (data.exito == 1) {\r\n            // Registro Creado Exitosamente\r\n            SwalLoad('success', 'Éxito', 'Usuario Creado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n                traerUsuarios();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n            cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Error en la Conexión', 'Comunicate con el Administrador', false);\r\n    }\r\n}\r\n\r\nasync function actualizarUsuario() {\r\n\r\n    const userId = $('#usuario_id').val();\r\n    const nombre_completo = $('#nombre_completo').val();\r\n    const nombre_user = $('#nombre_user').val();\r\n    const password = $('#password').val();\r\n    const estatus = $('#estatus_user').val();\r\n    const empleadoId = $('#empleado_user').val();\r\n    const rolId = $('#rol_user').val();\r\n\r\n\r\n    try {\r\n\r\n        const datos = new FormData();\r\n        datos.append('usuario_id', userId);\r\n        datos.append('nombre_completo', nombre_completo);\r\n        datos.append('nombre_user', nombre_user);\r\n        datos.append('password', password);\r\n        datos.append('estatus', estatus);\r\n        datos.append('empleado_id', empleadoId);\r\n        datos.append('rol_id', rolId);\r\n\r\n        const respuesta = await fetch('actualizar/usuario', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n        const data = await respuesta.json();\r\n\r\n        if (data.exito == 1) {\r\n            // Registro Creado Actualizado\r\n            SwalLoad('success', 'Éxito', 'Usuario Actualizado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n                traerUsuarios();\r\n            }, 1500);\r\n        } else if (data.exito == 0) {\r\n            SwalLoad('error', 'Error en la Transacción', data.errorSMS, true);\r\n        }\r\n\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n            cerrarVentana('.contenedor-altas', ['#formAltas']);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\n\r\nasync function obtenerEmpleados() {\r\n\r\n    try {\r\n        const respuesta = await fetch('empleados/activos', {\r\n            method: 'GET'\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        if (!data.length > 0) SwalToast('warning', 'No hay Empleados disponibles.', 2500);\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\n\r\nasync function obtenerRoles() {\r\n    try {\r\n        const respuesta = await fetch('roles/activos', {\r\n            method: 'GET'\r\n        });\r\n        const data = await respuesta.json();\r\n        // console.log(data);\r\n\r\n        if (!data.length > 0) SwalToast('warning', 'No hay Roles disponibles.', 2500);\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n}\r\n\r\nasync function eliminarUser(params) {\r\n\r\n    try {\r\n\r\n        const datos = new FormData();\r\n        datos.append('usuario_id', params.usuario_id);\r\n\r\n        const respuesta = await fetch('eliminar/usuario', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n        const data = await respuesta.json();\r\n\r\n        if (data.exito == 1) {\r\n            // Registro Creado Exitosamente\r\n            SwalLoad('success', 'Eliminado', 'Registro Eliminado Correctamente', false);\r\n            setTimeout(() => {\r\n                swal.close();\r\n                traerUsuarios();\r\n            }, 1500);\r\n        }\r\n        if (data.alertas) {\r\n            SwalToast('warning', data.alertas.error, 2500);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        SwalLoad('error', 'Ocurrio Un Error', 'Conección Perdida a BD.', false);\r\n    }\r\n\r\n}\r\n"]}